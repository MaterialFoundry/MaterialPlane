{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Material Plane Documentation","text":"<p>Welcome to the Material Plane documentation.</p> <p>Click the links below or at the top of the page to navigate the documentation:</p> <ul> <li>Production Hardware</li> <li>DIY Hardware</li> <li>Touch</li> <li>Display Considerations</li> <li>Hardware Comparison</li> <li>FAQ</li> </ul>"},{"location":"#introduction","title":"Introduction","text":"<p>Material Plane is a Foundry VTT module that allows physical minis to be tracked by Foundry when using a horizontally mounted TV. This allows you to bring the joy of physical minis into Foundry.  There are currently 2 ways to track minis:</p>"},{"location":"#material-plane-sensor","title":"Material Plane sensor","text":"<p>The system consists of an IR sensor, and IR enabled mini bases. These bases contain IR LEDs that are tracked by the sensor. The sensor then relays this information to foundry over WiFi, where the information is interpreted as token movement. You can use any TV, monitor or projector for this. There is a pre-assembled and advanced version of the hardware for sale on the Material Foundry webshop, or it is possible to build DIY hardware.</p>"},{"location":"#touch-screen","title":"Touch Screen","text":"<p>There is currently experimental support for touch screen devices. Either capacitive touch screens or normal TVs with an IR touch frame can work.  Please take a look at this page for a comparison between the Material Plane sensor and touch screen.</p>"},{"location":"#trailer","title":"Trailer","text":""},{"location":"#important-links","title":"Important Links","text":"<ul> <li>Issues/Feature requests</li> <li>Main repository</li> <li>Foundry module (Releases)</li> <li>Sensor firmware (Releases)</li> <li>Base firmware (Releases)</li> <li>Pen firmware (Releases)</li> <li>Material Companion (Releases)</li> <li>Arduino core (Releases)</li> <li>3D models</li> <li>Discord server</li> <li>Patreon</li> </ul>"},{"location":"#software-versions-module-incompatibilities","title":"Software Versions &amp; Module Incompatibilities","text":"<p>Foundry VTT: v10 &amp; v11 Module Incompatibilities: When moving tokens, Foundry's click and drag system is bypassed. So modules that depend on that functionality might not work.</p>"},{"location":"#feedback","title":"Feedback","text":"<p>If you have any suggestions or bugs to report, feel free to contact me on Discord (Cris#6864), or send me an email: info@materialfoundry.nl.</p>"},{"location":"#credits","title":"Credits","text":"<p>Author: Cristian Deenen (Cris#6864 on Discord)  Please consider supporting me on Patreon, and feel free to join the Material Foundry Discord server.</p>"},{"location":"faq/","title":"FAQ","text":"<p>Nothing here yet, sorry :(.</p>"},{"location":"hardwareComparison/","title":"Hardware Comparison","text":"<p>There are a few options when it comes down to the tracking of physical miniatures. This page will give an overview of these options, and a comparison between them.</p>"},{"location":"hardwareComparison/#options","title":"Options","text":""},{"location":"hardwareComparison/#material-plane-hardware","title":"Material Plane Hardware","text":"<p>The first option would be to use a Material Plane sensor. The setup consists of 2 parts:</p> <ol> <li>A sensor, which is mounted above the TV, and basically functions like an IR camera</li> <li>Mini bases, which are placed underneath the mini and contain an IR LED which can be tracked by the sensor</li> </ol> <p>There are 2 variants, the DIY variant and the production variant. The DIY variant has to be assembled by the user, while the production variant comes pre-assembled, and is available at the Material Foundry webshop. The main differences between the two variants can be found in the comparison below.</p> <p>The Material Plane sensor can be used on almost any display, for example a normal TV, or a projector.</p> <p>Because the minis are only detected when they are moved, there is no limit the the amount of minis you can have on the table. There is, however, a limit to the amount of minis that can be moved at the same time: 4 for the DIY sensor and 16 for the production sensor.</p> <p>Other forms of interaction (besides moving minis) is not possible for the DIY sensor, while the production sensor supports a special pen that can be used like a mouse to open doors, draw shapes, place templates, etc.</p> <p>Because the sensor is mounted above the TV, contact with the TV while moving minis is not required, unlike other setups. This means that minis can be raised up into the air in order for them to be moved over other minis.</p>"},{"location":"hardwareComparison/#infrared-touch-screen","title":"Infrared Touch Screen","text":"<p>Material Plane support for touch screens is currently experimental. It is not yet clear how well it actually works, so it is currently not advisable to purchase one specifically for this purpose.</p> <p>An IR touch screen uses IR LEDs on 2 sides of the screen, and sensors on the other 2 sides. By placing a finger (or mini) on top of the screen, a shadow is cast on the sensors, because the IR light cannot pass through your finger. This is then converted to a position, which is interpreted as a touch by the computer.</p> <p>These touch screens can generally detect up to 10 touch points, however, these are not completely independent. Because the touch points cast a shadow, blind spots (where no touch is detected) are possible, and touches on one side of the display can influence the detected position of other touch points.</p> <p>Because the IR LEDs and sensors are slightly above the TV, it might be necessary to place the minis on a small platform to ensure that they are detected by the sensors.</p> <p>A non-touch display can quite easily be converted to an IR touch display through an IR touch frame. They can be easily found on, for example, Amazon for around $150 to $300 (depending on size and vendor).</p> <p>Other forms of interaction (besides moving minis) is possible, but is limited by the algoritm that distinguishes minis from other touches.</p>"},{"location":"hardwareComparison/#capacitive-touch-screen","title":"Capacitive Touch Screen","text":"<p>Material Plane support for touch screens is currently experimental. It is not yet clear how well it actually works, so it is currently not advisable to purchase one specifically for this purpose.</p> <p>A capacitive touch screen uses capacitive sensing to detect touches. I will not go into detail on how this works, for more information, take a look on Wikipedia. The most important things are that capacitive touch screens only detect certain objects, such as fingers, while other objects are not detectable. This requires some modification to each mini that has to be detected, to basically create electrical contact between the screen and a hand through the mini. This could be done by, for example, applying copper tape to the bottom of the mini, with a piece of that tape extending up, so that it can be touched when the mini is moved.</p> <p>Unlike an Infrared touch frame, the touch points of a capacitive touch screen are independent. The number of detectable touch points is generally 10, but this can be higher or lower, depending on the display. Depending on how the minis are detected, this limit might not be important. In the above case (using copper tape), the mini is only detected when the mini is touched, therefore you could add as many minis as you like, as long as you only touch up to 10 at the same time.</p> <p>Big displays with built-in capacitive touch screens are hard to find and expensive. Capacitive touch can be added to existing non-touch displays (search for 'touch foil' or 'pcap touch foil'), but these are more difficult to find than IR touch frames. These foils generally have to be glued to the display or a separate glass pane, which can be difficult to do properly (due to trapped bubbles)</p> <p>Other forms of interaction (besides moving minis) is possible, but is limited by the algoritm that distinguishes minis from other touches.</p>"},{"location":"hardwareComparison/#comparison","title":"Comparison","text":"DIY Production IR Touch Capacitive Touch Max nr of minis on TV Unlimited Unlimited 10<sup>1</sup> Unlimited<sup>2</sup> Max nr of simultaneously moved minis<sup>3</sup> 4 16 10<sup>1</sup> 10 Other interaction methods<sup>4</sup> No Yes (through pen) Yes (potentially limited) Yes (potentially limited) Required hardware Sensor + Bases Sensor + Bases Screen and Touch Frame<sup>5</sup> Just the screen<sup>6</sup> Detection limitations Line of sight required<sup>7</sup> Line of sight required<sup>7</sup> Touch points are not independent, contact with TV must be maintained Contact with TV must be maintained Display limitations Can work on any display, but with size limitation<sup>8</sup> Can work on any display, but with size limitation<sup>8</sup> Requires either built-in touch, or a fitting touch frame Requires either built-in touch, or a fitting touch foil Mini movement method Button press on base Touch sensors on left and right side of the base Raise a mini and then place it down again before moving the mini Touching the conductive part of the mini<sup>2</sup> Mini identification<sup>9</sup> Location based ID based Location based Location based Portability Can be easily transported somewhere else, to be used on a different display Can be easily transported somewhere else, to be used on a different display Requires the display (or touch frame) to be transported Requires the display to be transported Availablility Must be built by yourself, some parts can be difficult to source Webshop Touch frames are easy to find online TVs with built-in capacitive touch are expensive and difficult to find, touch foil is difficult to find (price unknown) Price (excluding display) $50 - $100 $200-$400 $150 - $300 Intrated: very expensive, foil: $150-$400 Current state Functional Functional Experimental (broken in Foundry v11) Experimental (broken in Foundry v11) <p><sup>1</sup> This is a theoretical limit, issues might occur before them due to the shadow effect, as described above <sup>2</sup> Depends on how the minis are detected, see above <sup>3</sup> This is a theoretical limit, your computer might not be able to process more than a few minis at the same time <sup>4</sup> This includes things like opening doors, placing templates, using measurement tools, etc <sup>5</sup> It might be necessary to place something underneath the mini to raise them, see above <sup>6</sup> Minis might require modification to add a conductive part, see above <sup>7</sup> Line of sight is required between the IR LED in the base and the sensor, care must be taken in how to hold a mini, and how to position minis on the base <sup>8</sup> The MP sensor is basically an IR camera, this means that any kind of display (TV, projector, etc) is compatible, as long as it's not too big. The maximum size depends on the distance between the sensor and the display, more info here. <sup>9</sup> Identification in this case means the method that is used to identify which mini is moved, and how this is related to the digital tokens. Location based means that it will link the token that's nearest to the mini, while ID based means that it is always known which mini is moved though a unique ID, regardless of the mini's location relative to its digital token.</p>"},{"location":"DIY/calibration/","title":"Sensor Calibration","text":"<p>To function properly, the sensor needs to know the position of your display. To do this, a calibration procedure is required where you tell the sensor where the 4 corners of your display are.  Calibration is performed in the Sensor tab of the 'Material Plane Configuration' screen. Under the 'Calibration' section you can find 2 checkboxes. These checkboxes allow you to enable or disable the calibration and calibration offset. Switching them off will result in the sensor outputting raw position data, switching them on will result in the sensor outputting calibrated data (assuming you've performed the calibration procedure).  Below that there's a 'Calibrate' button that will start the calibration procedure.</p> <p>You should make sure the sensor is correctly configured before calibrating.</p> <p>There are 3 calibration options:</p> <ul> <li>Single-Point Calibration: Each calibration point is measured one at a time</li> <li>Multipoint Calibration: All 4 calibration points are measured at the same time</li> <li>Offset Calibration: This allows you to configure offsets from the normal calibration points, allowing you to define your own (more convenient) calibration points</li> </ul> <p>Note: Calibration must be performed using bases, you cannot calibrate with a pen. </p>"},{"location":"DIY/calibration/#base-positioning-during-calibration","title":"Base Positioning During Calibration","text":"<p>When calibrating the sensor, there are 2 important things to note regarding base positioning:</p>"},{"location":"DIY/calibration/#base-orientation","title":"Base Orientation","text":"<p>The orientation of the base, relative to the display, must stay constant during calibration (and normal use). For example, take the image on the right, which shows a TV inside a wooden enclosure. The base is rotated so the LED on the base is located on the top-right side. For each calibration point, the base rotation must stay the same, so for each calibration point the LED has to be located on the top-right side.</p>"},{"location":"DIY/calibration/#base-location","title":"Base Location","text":"<p>Unless you use offset calibration, you will need to align the center of the base with the corner of the (active part of the) display. Take a look at the 2 bottom images on the right. In the right (incorrect) image, a base is located inside the (raised) bezel of the display while another is located on the outside corner of the whole display (the corner of the bezel). In the left image the base is correctly located, with the center of the base aligned with the corner of the display.</p>"},{"location":"DIY/calibration/#single-point-calibration","title":"Single-Point Calibration","text":"<p>Using single-point calibration you calibrate each corner one at a time.</p> <p></p> <ol> <li>Make sure Foundry is running full-screen (F11).</li> <li>Select 'Single-Point Calibration'.</li> <li>After pressing the 'Calibrate' button, a popup window will appear with a table for the 4 corners of your display.</li> <li>Activate a base by pressing the switch on the base and move it to one of the corners of your display, the coordinates should show up in grey for point 0. Make sure the center of the base aligns with the corner of your display, see here.</li> <li>Release the base and wait a few seconds or press the 'Next' button to move to the next point. The calibration point is now locked in and its coordinates should turn black.</li> <li>Repeat this process for all 4 corners, you can do the corners in any order.</li> <li>After the 4th corner the calibration procedure is completed. Either close the popup manually or wait 5 seconds for the popup to close automatically.</li> <li>Exit the 'Material Plane Configuration' screen and try to move a token. If the procedure went correctly the token will stay directly underneath the base. Move it across the entire display to make sure the calibration is correct everywhere.</li> <li>If the token does not stay directly underneath the base take note of how accurate the calibration should be.</li> </ol>"},{"location":"DIY/calibration/#multipoint-calibration","title":"Multipoint Calibration","text":"<p>Using multipoint calibration you calibrate all four corners of your display at the same time. To do this you must use 4 bases or other infrared sources and have them activated at the same time. This can be done  mounting 4 infrared LEDs close to the display and using offset calibration.</p> <p></p> <ol> <li>Make sure Foundry is running full-screen (F11).</li> <li>Select 'Multipoint Calibration'.</li> <li>After pressing the 'Calibrate' button, a popup window will appear with a table for the 4 corners of your display.</li> <li>Switch on the infrared LEDs . The coordinates of the should show up in the table.</li> <li>When you're happy, press 'Calibrate', and the calibration procedure is done.</li> <li>Exit the 'Material Plane Configuration' screen and try to move a token. If the procedure went correctly the token will stay directly underneath the base. Move it across the entire display to make sure the calibration is correct everywhere.</li> <li>If the token does not stay directly underneath the base take note of how accurate the calibration should be.</li> </ol>"},{"location":"DIY/calibration/#offset-calibration","title":"Offset Calibration","text":"<p>With the previous calibration methods you had to align the center of the base exactly with the corners of your display. Using offset calibration you can choose different points to calibrate to. What offset calibration essentially does is defining the offset of the calibration points from the corner of the display. As long as the position of these offset calibration points don't move with respect to the display, they should always give the same calibration results.</p> <p>For example, as shown in the image on the right, your display has a raised bezel. Using offset calibration you can move the base into the corner created by the bezel and use that as the calibration point. This allows for a fast and easy to locate calibration point.</p> <p>Another option, also shown in the image, is to embed 4 infrared LEDs into the display enclosure or gaming table. In this case, all you would need to do to calibrate is starting the multipoint calibration and switching on the LEDs.</p> <ol> <li>Calibrate using 'Single-Point' or 'Multipoint' calibration, but instead of placing bases in the corners of your display, you use your self-defined calibration points (for example the base inside the raised bezel or the embedded infrared LEDs).</li> <li>Select 'Offset' calibration, and follow the exact procedure for 'Single-Point' calibration. This time you do need to place the bases on the corners of your display. Make sure the center of the base aligns with the corner of your display, see here.</li> </ol> <p>Once you have performed these steps, whenever you need to recalibrate you only need to perform step 1 using your self-defined calibration points.</p>"},{"location":"DIY/calibration/#calibration-accuracy","title":"Calibration Accuracy","text":"<p>Getting a perfect calibration can be difficult, because aliging the center of the base with the corner of the display can, depending on the geometry of your display, be difficult. There might also be other (scaling) issues. </p> <p>During normal use some inaccuracy isn't a problem, because tokens will snap to the grid. This means that the inaccuracy should be small enough that if a base is located exactly on the grid, the token is at least 50% inside the intended grid space.</p> <p>An inaccuracy smaller than 1/3 of a grid space in either x or y direction can probably be ignored. To make sure no problems arise, move a token across the entire display to check that the inaccuracy falls below that everywhere.</p> <p>If you notice that the inaccuracy is constant across the entire display, you could introduce an x or y offset in the transform section of the sensor settings. If the inaccuracy does not stay constant, you could try changing the x or y scale, also in the transform section of the sensor settings.</p>"},{"location":"DIY/gettingStarted/","title":"Getting Started","text":"<p>The Material Plane DIY hardware is one of the hardware options for Material Plane to track minis on a display. You will have to assembly everything yourself. If you can't or don't want to do this, consider buying the pre-build production hardware, which has some other advantages over the DIY hardware. For a full comparison between the various mini-tracking options, please read the hardware comparison page.</p> <p>The table of contents on the left is ordered in a way that you should start from the top and move your way down, but below you will find a short description of the most important steps you will need to take to get started:</p> <ol> <li>Make sure you know what the requirements are for using Material Plane</li> <li>Figure out what kind of sensor version you want to build</li> <li>Build a 'DIY-Full' or 'DIY-Basic' sensor</li> <li>Build one or more bases</li> <li>Upload/update the sensor firmware</li> <li>Figure out the optimal sensor mounting method and position</li> <li>Connect the sensor to your WiFi network</li> <li>Configure the sensor</li> <li>Install and configure the VTT module</li> <li>Calibrate the sensor</li> <li>Learn how to properly use the module</li> </ol> <p>Please check the troubleshooting page if you run into any issues.</p> <p>If you encounter any bugs or wish to request new features, please contact me on Discord (@materialfoundry/@Cris) or post an issue on GitHub. Consider joining the Material Foundry Discord Server, and join my Patreon if you wish to financially support me and this project.</p>"},{"location":"DIY/hardwareOverview/","title":"Hardware Overview","text":"<p>For the DIY hardware you will, as the name suggest, do it yourself. This includes sourcing parts, basic soldering, 3D printing (for the Full sensor). You will be responsible for all troubleshooting.</p> <p>It is your own responsibility to properly build and use the hardware. Material Foundry cannot be held responsible for any damage, either directly or indirectly caused by Material Foundry or any associated hardware, software or service. This includes damage caused by incorrect documentation, bugs in the software/firmware or wrong advise.</p>"},{"location":"DIY/hardwareOverview/#sensor","title":"Sensor","text":"<p>The sensor is responsible for detecting the location of bases, onto which minis are placed.  The sensor has a special infrared camera that can track sources of infrared light.  After calibrating the sensor, the sensor can transmit the exact location of bases to the VTT over (2.4GHz) WiFi or USB, which can then move tokens.</p> <p>A maximum of 4 minis can be moved at the same time, but you can have as many minis on your display (just don't move more than 4 at the same time).</p> <p>For the DIY sensor, you have 2 options:</p> <ul> <li>Basic: The most barebones version, just enough to use Material Plane</li> <li>Full: A complete device that adds an enclosure, battery charging and more</li> </ul> <p>See the table below for a comparison, where you should consider everytying to be identical, except for the listed items.</p> Basic Sensor Full Sensor Required materials Only microcontroller and infrared tracking sensor Much big list of requirements Microcontroller Basically any ESP32 or ESP32-S3 board Check the compatible boards section Must use eiter a TinyPICO or TinyS3 Battery No battery or battery charging With battery and battery charging Indicator LEDs None Battery and connection indicator LEDs Enclosure None 3D printed USB Detection None Included"},{"location":"DIY/hardwareOverview/#base","title":"Base","text":""},{"location":"DIY/requirements/","title":"Requirements","text":"<p>The requirements for using Material Plane using the DIY hardware can be divided into 4 parts:</p> <ul> <li>Material Plane hardware</li> <li>Virtual Tabletop</li> <li>Horizontally mounted display</li> <li>Suitable environment</li> </ul>"},{"location":"DIY/requirements/#material-plane-hardware","title":"Material Plane Hardware","text":"<p>The DIY hardware consists of 2 items:</p> <ul> <li>Sensor</li> <li>One Bases for each mini you want to track</li> </ul> <p>You will need to build this hardware yourself (click on the links above for instructions), the requirements for building them is included in the instructions.</p> <p>Regarding the bases: you will have to determine how many you think you will need. You will want to have at least one for each player character, and maybe some extra for other minis that have to be tracked, such as familiars or important NPCs. You can track monsters, if you want to, but for most people this is not necessary (since you probably don't want to share the monters' vision with the players) and a lot of people choose to just place the minis on the display without tracking them.</p> <p>Because the sensor is essentially a camera, you will need to take the distance between the sensor and your display, and the size of the display into account. If the display is too large, the sensor might not be able to see the entire display. Please read the Display-Sensor Distance section carefully.</p>"},{"location":"DIY/requirements/#virtual-tabletop","title":"Virtual Tabletop","text":"<p>Material Plane runs on a virtual tabletop. Currently only Foundry VTT is supported.</p> <p>To use Foundry VTT, you need to purchase a license, and you need some way to host the Foundry server. For information on how to setup a Foundry VTT server, please refer to the Foundry VTT Knowledge Base. Alternatively, you could using a hosting service such as The Forge, Molten Hosting or Foundry Server.</p>"},{"location":"DIY/requirements/#horizontally-mounted-display","title":"Horizontally Mounted Display","text":"<p>You'll need a TV, or some other display (monitor/projector) onto which the virtual tabletop is displayed.</p> <p>For the Material Plane hardware (both DIY and production) you do have to consider the size of your TV, due to the limited detection angle of the sensor, see Display-Sensor Distance section below. Virtually any display will work, however, some older models (especially plasma and LCD displays with CCFL backlight) can emit infrared noise which might interfere with the sensor. To remedy this, you could add infrared-blocking foil to the display. Modern displays should not cause any issues.</p>"},{"location":"DIY/requirements/#suitable-environment","title":"Suitable Environment","text":"<p>Because of the way the sensor works, any infrared light around the TV can be interpreted as a base. For this reason, ambient infrared radiation and reflection should be avoided.</p> <ul> <li>Sunlight</li> <li>Infrared Emitting Lights</li> <li>VR Headsets</li> <li>Wii Sensor Bar</li> <li>Remote Controls</li> </ul>"},{"location":"DIY/requirements/#display-sensor-distance","title":"Display-Sensor Distance","text":"<p>In order for the sensor to detect minis across the whole display, the sensor needs to be located at a minimum distance above the display. The minimum distance depends on the size of the display, where a bigger display requires a larger distance.</p> <p>The table below gives the minimum distance between the display and sensor. Measure the distance between the top of the display and the desired sensor mounting location (ceiling, microphone stand, etc). </p> <p>Look at the row with your display size, and if the value in the 'Distance' column is smaller than the measured distance, your setup is incompatible with Material Plane.</p> <p>Placing the sensor too far away from the display will result in reduced accuracy and potentially more jittery movement. For optimal results you should place the sensor as close to the minimum distance as possible (with some wiggle room for alignment). If you do not need the wide-angle lens, it's better to not have it installed.</p> <p>Please note that these are just approximate values, assuming a 16:9 aspect ratio display and perfect sensor positioning while ignoring any manufacturing tolerances. Try to err on the safe side by subtracting a few cm/inches from the measured distance between display and sensor.</p> Display Size Distance 32\" 120cm/47\" 40\" 150cm/59\" 43\" 160cm/63\" 50\" 187cm/74\" 55\" 205cm/81\" 60\" 224cm/88\" 65\" 243cm/96\" 70\" 261cm/103\" 75\" 280cm/110\" 80\" 289cm/114\""},{"location":"DIY/troubleshooting/","title":"Troubleshooting","text":""},{"location":"DIY/troubleshooting/#how-to-use","title":"How to use","text":"<p>Below you will find multiple tables covering different topics related to Material Plane. For easy navigation, each table can be found in the table of contents on the left. Pick the table that best corresponds with your issue, if you cannot find your issue there, make sure it's not located somewhere else. If your issue is nowhere to be found, or you found a solution that isn't mentioned here, please contact me.</p> <p>Issues can have multiple causes or multiple solutions. If you find a row that does not mention an issue, it relates to the issue in the row above it. Similarly, if you find a row that does not mention a possible cause, it relates to the issue and possible cause of the row above it.</p>"},{"location":"DIY/troubleshooting/#sensor","title":"Sensor","text":"Issue Possible cause Possible solution More info Sensor can't detect base/pen Sensor sensitivity set incorrectly Properly configure the sensor link Sensor can't detect base/pen at edge of display Sensor sensitivity set incorrectly Properly configure the sensor link Sensor too close to the display Properly configure the sensor link Sensor detects a lot of noise Minimum brightness set too low Increase minimum brightness link Too much infrared noise in room Switch all infrared sources off, such as: -Wii sensor bar-VR stations/receivers Prevent direct sunlight on the sensor/display/table Make sure there are no lights shining/reflecting directly into the sensor Sensor can't detect complete display Sensor too close to the display Move sensor further back link Sensor won't charge Sensor is not getting (enough) power Connect USB cable to power adapter Try a different power adapter Broken cable Replace cable Sensor can't connect to WiFi Wrong credentials Enter correct credentials No 2.4GHz WiFi available Make sure there's 2.4GHz WiFi available Router too far away Move router or sensor closer, or get a WiFi extender Detected points move in wrong direction Mirroring and/or rotation not configured properly Properly configure mirroring and/or rotation link Incorrect battery readings Battery reading is only a very rough estimate No solution No battery readings during charging This is on purpose: During charging, the battery voltage is read much too high, making the voltage reading useless No solution"},{"location":"DIY/troubleshooting/#calibration","title":"Calibration","text":"Issue Possible cause Possible solution More info Can't perform/complete calibration Active user not configured correctly Configure active user link Active user not connected to Foundry Connect active user Sensor not connected See above Sensor sensitivity not set correctly Configure sensor link Base not enabled Switch on base Sensor can't see entire display See above Tokens don't stay directly below base No calibration performed Perform calibration link Calibration disabled Enable calibration link Calibration not done correctly Perform calibration, make sure you check Base Orientation link Sensor offset and/or scaling set incorrectly Correctly configure offset and/or scaling link Detected points move in wrong direction Mirroring and/or rotation not configured properly Properly configure mirroring and/or rotation link"},{"location":"DIY/troubleshooting/#foundry-vtt","title":"Foundry VTT","text":"Issue Possible cause Possible solution More info Can't see module in Foundry's module page No internet connection Make sure you are connected to the internet Foundry server down Wait until the server is up again Incompatible Foundry version Upgrade/downgrade to a compatible version Bug in the module Report it to me Bug in Foundry Report it to the Foundry team Can't install module Bug in the module Report it to me Bug in Foundry Report it to the Foundry team Can't update module No internet connection Make sure you are connected to the internet Incompatible Foundry version Upgrade/downgrade to a compatible version Bug in the module Report it to me Bug in Foundry Report it to the Foundry team Sensor won't connect to module Sensor not connected to WiFi Connect sensor to WiFi link Incorrect 'Connection Mode' selected Select correct mode link Incorrect 'Sensor Module IP Address' configured Configure correct address link Foundry server is secured Connect through Material Companion link Tokens don't move Sensor is not connected to WiFi Connect sensor to WiFi link Sensor is not connected to module Connect sensor to module link Sensor is not correctly calibrated Perform calibration link Sensor mirroring/rotation not configured correctly Configure mirroring and/or rotation link Sensor sensitivity is not set correctly Configure sensor link Token is not owned by display user Make display user owner of token link Enable 'Non-Owned Movement' link Wrong tokens are being moved Sensor not correctly calibrated Perform calibration link Sensor mirroring/rotation not configured correctly Configure mirroring and/or rotation link Tokens don't stay directly below base Sensor not configured properly Configure sensor link Tokens are not dropped after releasing base Module is configured to not drop tokens Enable 'Delect Token After Drop' link Tokens can move through walls This is a known issue that has been hard to solve Try to avoid having walls through the middle of a grid space Detected points move in wrong direction Mirroring and/or rotation not configured properly Properly configure mirroring and/or rotation link"},{"location":"DIY/usage/","title":"Mini Placement","text":"<p>When mounting a mini on a base, there is one important thing to remember: there needs to be line-of-sight between the infrared LED and the sensor. There are multiple ways in which the placement of the mini can affect this.</p> <p>The image on the right shows 3 minis, with incorrect placement at the top and correct placement at the bottom. From left to right:</p> <ul> <li>The weapon of the mini is directly above the infrared LED. This means that in most situations the sensor will have a hard time detecting the base. This can be solved by rotating the mini.</li> <li>The base of the mini blocks the infrared LED, so the sensor cannot detect it. This can be solved by moving the mini a bit.</li> <li>The mini is too big for the base. There is no good way to mount it while keeping the infrared LED visible to the sensor. There is currently no suitable DIY solution for this.</li> </ul>"},{"location":"DIY/usage/#orientation-and-holding-of-bases","title":"Orientation and Holding of Bases","text":"<p>During the calibration procedure you had to keep the orientation of the base constant relative to the display, for example by keeping the LED in the top-right. When using the base during gaming you have to stick to this orientation, so rotating the base is not possible. You can, of course, rotate the mini on top of the base.</p> <p></p> <p>When moving bases, you should try to keep them as horizontal as possible. If the base is held at an angle, the relative light emission of the base (so from the perspective of the sensor) is reduced, and if the angle is too big, the sensor will not be able to detect the base. An exception to this is if the base is located near the edge of the display. In this case, it can be helpful to angle the base towards the sensor.</p> <p>Make sure your finger or any other object does not obscure the LED to prevent line of sight between the LED and sensor. Because the base is activated by touching one of its sides, this will usually not be an issue.</p> <p>Take a look at the image on the right, which demonstrates these 2 problems, with the upper images showing the incorect way and the lower images the correct way of holding bases. From left to right:</p> <ul> <li>Base held at too much of an angle. Reduce the angle to make it easier for the sensor to detect the base.</li> <li>Index finger too close to the infrared LED, which might block the line-of-sight between the LED and sensor. Hold the base with the thumb and index finger, or move the index finger away.</li> </ul>"},{"location":"DIY/usage/#token-detection","title":"Token Detection","text":"<p>For the DIY hardware, token detection is done using the location of the base. Whenever a base is moved, Material Plane checks if there are any tokens close enough. If there are, it will pick the nearest (that is allowed to be moved) and move that token. Potential issues are that if any interruption occurs, the token might be dropped, and it can result in the wrong token being moved if multiple tokens are close to each other.</p>"},{"location":"DIY/BuildInstructions/base/","title":"Base Build Instructions","text":"<p> Disclaimer</p> <p> For the DIY hardware you will, as the name suggest, have do it yourself. This includes sourcing parts, basic soldering, and 3D printing. You will be responsible for all troubleshooting. It is your own responsibility to properly build and use the hardware. Material Foundry cannot be held responsible for any damage, either directly or indirectly caused by Material Foundry or any associated hardware, software or service. This includes damage caused by incorrect documentation, bugs in the software or firmware, or wrong advise.  If you are uncomfortable with this, consider buying the pre-build production hardware. </p> <p>This page discusses the fabrication of the DIY bases. Discussed on this page are the required tools, materials and parts you need, a sourcing guide for 3D prints and electrical components, and the complete build instructions.</p>"},{"location":"DIY/BuildInstructions/base/#requirements","title":"Requirements","text":""},{"location":"DIY/BuildInstructions/base/#required-tools","title":"Required Tools","text":"<ul> <li>Soldering iron + solder</li> <li>Wire cutter</li> <li>Wire stripper</li> <li>Scissors</li> <li>Superglue</li> </ul>"},{"location":"DIY/BuildInstructions/base/#bill-of-materials","title":"Bill of Materials","text":"<ul> <li>3D printed parts (see below)</li> <li>1x 3mm infrared LED (940nm)</li> <li>1x Microswitch</li> <li>1x CR2032 battery</li> <li>Felt that's big enough to cover the base (with adhesive pre-attached, or add double-sided tape)</li> </ul>"},{"location":"DIY/BuildInstructions/base/#sourcing-parts","title":"Sourcing Parts","text":""},{"location":"DIY/BuildInstructions/base/#3d-prints","title":"3D Prints","text":"<p>To build the base you will to print the base enclosure, which you can download here. There are currently 2 variants:</p> <ul> <li>Normal: Has a cavity into which the round base of a mini can fit</li> <li>Flat: Has a flat top (no cavity)</li> </ul> <p>A resin printer is recommended for these parts, but FDM might also work if your printer is properly tuned (you might need to use a smaller nozzle).</p> <p>If you do not own a 3D printer, and you do not know anyone who can print for you, you could consider one of the following print services:</p> <ul> <li>3D Hubs</li> <li>Shapeways</li> <li>i.Materialize</li> </ul>"},{"location":"DIY/BuildInstructions/base/#electrinic-components","title":"Electrinic Components","text":"Supplier IR LED Microswitch Mouser (US) link link Digikey (US) link link link link Botland (PL) link link"},{"location":"DIY/BuildInstructions/base/#instructions","title":"Instructions","text":"<ol> <li>Glue the switch in place (see the image below for positioning). Try to push it as far to the outside as possible and make sure it is flush with the top of the 3D print.</li> <li>The LED has a positive and negative lead which can be distinguised by the length, where the positive lead is longer. Push the LED into its cavity with the positive (longer) lead to the switch side.</li> <li>Bend the negative (shorter) lead so it fits in the groove, and cut it to size so it's approximately the length of the groove.</li> <li>Bend the positive (longer) lead so it makes contact with the nearest contact on the switch.</li> <li>Solder the lead to that contact.</li> <li>Cut off any excess of the LED lead.</li> <li>Solder the excess you just cut off to the other contact of the switch.</li> <li>Bend it in such a way that it passes through the channel towards the center area, bent upwards.</li> <li>Insert the CR2032 battery, positive side up, make sure the lead coming from the switch touches the battery (either the side or top).</li> <li>Attach the felt and cut to size.</li> </ol>"},{"location":"DIY/BuildInstructions/sensorBasic/","title":"Basic Sensor Build Instructions","text":"<p> Disclaimer</p> <p> For the DIY hardware you will, as the name suggest, have do it yourself. This includes sourcing parts, basic soldering, and 3D printing. You will be responsible for all troubleshooting. It is your own responsibility to properly build and use the hardware. Material Foundry cannot be held responsible for any damage, either directly or indirectly caused by Material Foundry or any associated hardware, software or service. This includes damage caused by incorrect documentation, bugs in the software or firmware, or wrong advise.  If you are uncomfortable with this, consider buying the pre-build production hardware. </p> <p>This page discusses the fabrication of the basic DIY sensor. If you are not sure whether you want to build the full or basic sensor, please head over to the hardware overview. Discussed on this page are the required tools, materials and parts you need and the build instructions.</p>"},{"location":"DIY/BuildInstructions/sensorBasic/#before-you-get-started","title":"Before You Get Started","text":"<p>The basic sensor build requires a compatible ESP32 board. Almost any ESP32 or ESP32-S3 board is compatible. It will need to be dual core (so no ESP32-SOLO based boards) and based on whether you have an ESP32 or ESP32-S3, you will need to make sure that the following pins are available on the board:</p> Board Pins ESP32 21 &amp; 22 ESP32-S3 8 &amp; 9"},{"location":"DIY/BuildInstructions/sensorBasic/#compatible-boards","title":"Compatible Boards","text":"<p>For Material Plane, there is no noticable difference between an ESP32 or ESP32-S3, so pick the one that you can source or the one that is cheapest. Below is an incomplete list of boards that should be compatible.</p> ESP32 ESP32-S3 ESP32-DevKitC ESP32-S3-DevKitC ESP32-PicoKit Arduino Nano ESP32 Wemos LOLIN32 Wemos S3 (also the Mini and Pro) FireBeetle ESP32 LilyGo T7-S3 And many more And many more"},{"location":"DIY/BuildInstructions/sensorBasic/#things-to-avoid","title":"Things to Avoid","text":"<p>When looking through the product listing, make sure you don't see any of the following terms:</p> <ul> <li>ESP32-S2</li> <li>ESP32-Cx (can be C2, C3 or C6)</li> <li>ESP32-H2</li> <li>ESP-WROOM-02</li> <li>ESP8266</li> <li>Solo</li> <li>Zigbee</li> </ul>"},{"location":"DIY/BuildInstructions/sensorBasic/#requirements","title":"Requirements","text":""},{"location":"DIY/BuildInstructions/sensorBasic/#required-tools","title":"Required Tools","text":"<ul> <li>Soldering iron + solder</li> <li>Wire cutter</li> <li>Wire stripper</li> </ul>"},{"location":"DIY/BuildInstructions/sensorBasic/#bill-of-materials","title":"Bill of Materials","text":"<ul> <li>3D printed parts</li> <li>An ESP32 or ESP32-S3</li> <li>DFRobot SEN0158</li> </ul>"},{"location":"DIY/BuildInstructions/sensorBasic/#sourcing-parts","title":"Sourcing Parts","text":"<p>Please note that the links below are a suggestion only and there may be mistakes. It is your own responsibility to make sure the part is compatible. If you find an incompatible part or a dead/incorrect link, please contact me.</p> Supplier ESP32/ESP32-S3 DFRobot SEN0158 Mouser (US) ESP32-DevKitCESP32-S3-DevKitC link Digikey (US) ESP32-PicoKit ESP32-S3-DevKitC link RobotShop (US) FireBeetle ESP32 Arduino Nano ESP32 link TinyTronics (NL) ESP32 Board Wemos LOLIN32 link OpenCircuit (NL) FireBeetle ESP32 Lilygo T7-S3 link Gotronic (FR) NodeMCU ESP32 Seeed Studio XIAO ESP32S3 link Botland (PL) ESP32-DevKitC ESP32-S3 DevKit link DFRobot (CN) FireBeetle ESP32 FireBeetle 2 ESP32-S3 link"},{"location":"DIY/BuildInstructions/sensorBasic/#instructions","title":"Instructions","text":"<p>The instructions for the basic sensor are really simple. Solder the wires of the DFRobot SEN0158 to the following pins:</p> Wire Color Function ESP32 pin ESP32-S3 pin Red Power 3V3 3V3 Black Ground GND GND Yellow SDA 21 8 Green SCL 22 9 <p>That's it. Any further additions to the sensor are up to you.</p>"},{"location":"DIY/BuildInstructions/sensorFull/","title":"Full Sensor Build Instructions","text":"<p> Disclaimer</p> <p> For the DIY hardware you will, as the name suggest, have do it yourself. This includes sourcing parts, basic soldering, and 3D printing. You will be responsible for all troubleshooting. It is your own responsibility to properly build and use the hardware. Material Foundry cannot be held responsible for any damage, either directly or indirectly caused by Material Foundry or any associated hardware, software or service. This includes damage caused by incorrect documentation, bugs in the software or firmware, or wrong advise.  If you are uncomfortable with this, consider buying the pre-build production hardware. </p> <p>This page discusses the fabrication of the full DIY sensor. If you are not sure whether you want to build the full or basic sensor, please head over to the hardware overview. Discussed on this page are the required tools, materials and parts you need, a sourcing guide for 3D prints and electrical components, and the complete build instructions.</p>"},{"location":"DIY/BuildInstructions/sensorFull/#before-you-get-started","title":"Before You Get Started","text":"<p> The full sensor build requires one of the following ESP32 boards:</p> <ul> <li>TinyPico V1 or V2 (with micro-USB port, discontinued)</li> <li>TinyPico V3 (with USB-C port)</li> <li>TinyS3</li> </ul> <p>For Material Plane, there is no noticable difference between these variants, so pick the one that you can source or the one that is cheapest. In these build instructions there will be variant-specific things you need to do (such as which pins to connect everything to). In these cases, there will be a table to give these differences. Please take note of which variant you have so you don't make any mistakes.</p> <p>There are variants of these board with no on-board antenna, do not get one of those.</p>"},{"location":"DIY/BuildInstructions/sensorFull/#requirements","title":"Requirements","text":""},{"location":"DIY/BuildInstructions/sensorFull/#required-tools","title":"Required Tools","text":"<ul> <li>Soldering iron + solder</li> <li>Wire cutter</li> <li>Wire stripper</li> <li>Knife</li> <li>Hot glue gun or superglue</li> <li>(Optional, but recommended) Electrical tape or heat shrink</li> <li>(Optional) M3 threading tool</li> </ul>"},{"location":"DIY/BuildInstructions/sensorFull/#bill-of-materials","title":"Bill of Materials","text":"<ul> <li>3D printed parts (see below)</li> <li>A TinyPICO V1, V2 or V3, or a TinyS3</li> <li>DFRobot SEN0158</li> <li>2x 5mm Red/Green or RGB common cathode LED</li> <li>2x 180 Ohm wired resistor (200 or 220 Ohm will also work fine)</li> <li>1x 12 KOhm wired resistor (TinyPICO only)</li> <li>1x 22 KOhm wired resistor (TinyPICO only)</li> <li>1x SPDT Slide Switch (approx 6x20mm)</li> <li>1x Li-Ion battery (max size: 34x53x11mm)</li> <li>9x M3x10mm countersunk bolts</li> <li>1x M5x22mm bolt</li> <li>1x M5 nut</li> </ul>"},{"location":"DIY/BuildInstructions/sensorFull/#sourcing-parts","title":"Sourcing Parts","text":""},{"location":"DIY/BuildInstructions/sensorFull/#3d-prints","title":"3D Prints","text":"<p>To build the sensor you will need one of each of the following parts (only the 'Sensor Main Body' is different), which you can download here:</p> Part TinyPICO V1/V2 TinyPICO V3 TinyS3 Sensor Main Body MainBody.stl MainBody_USBC.stl MainBody_USBC.stl Sensor Lid Lid.stl Lid.stl Lid.stl Controller Bracket ControllerBracket.stl ControllerBracket.stl ControllerBracket.stl Sensor Bracket SensorBracket.stl SensorBracket.stl SensorBracket.stl Microphone Mount MicstandMount.stl MicstandMount.stl MicstandMount.stl <p>All parts, except for the sensor main body can be printed flat on the 3D printer's bed. The sensor main body was designed to be printed on it's front (the side with the holes).</p> <p>Recommended printer parameters:</p> Material PLA, PLA+, PETG or ABS Nozzle 0.4 - 0.8mm Layer Height 0.2mm Supports None <p>If you do not own a 3D printer, and you do not know anyone who can print for you, you could consider one of the following print services:</p> <ul> <li>3D Hubs</li> <li>Shapeways</li> <li>i.Materialize</li> </ul>"},{"location":"DIY/BuildInstructions/sensorFull/#electronic-components","title":"Electronic Components","text":"<p>Please note that the links below are a suggestion only and there may be mistakes. It is your own responsibility to make sure the part is compatible. If you find an incompatible part or a dead/incorrect link, please contact me.</p> Supplier TinyPICO/TinyS3 DFRobot SEN0158 LEDs Resistors Switch Battery Mouser (US) TinyPICO V3TinyS3 link RG RG RGB RGB 180R 180R 12K 12K 22K 22K link Digikey (US) TinyPICO V2 TinyS3 link RG RG RGB RGB 180R 180R 12K 12K 22K 22K link link link link RobotShop (US) link RGB TinyTronics (NL) TinyPICO V3 link RGB OpenCircuit (NL) link RGB 180R 12K 22K Gotronic (FR) link RGB 180R 12K 22K link link Botland (PL) link RGB assortment link link DFRobot (CN) link LCSC (CN) link Unexpected Maker (AU) TinyPICO V3 TinyS3 Pimoroni (UK) TinyPICO V3 TinyS3 RGB assortment link Adafruit (US) TinyPICO V3 TinyS3"},{"location":"DIY/BuildInstructions/sensorFull/#pinout","title":"Pinout","text":"<p>While the pin numbers that are used for each variant are stated at each relevant step in the build instructions, you can use the table below as a quick reference.</p> TinyPICO V1/V2 TinyPICO V3 TinyS3 SDA 21 21 8 SCL 22 22 9 LED 1 Red 26 26 7 LED 1 Green 25 25 6 LED 2 Red 15 15 5 LED 2 Green 27 27 21 USB Active 32 32 None (internal) Charge Detect None (internal) None (internal) 1"},{"location":"DIY/BuildInstructions/sensorFull/#instructions","title":"Instructions","text":"<ol> <li>Clean the enclosure, and make sure all components fit. Especially the DFRobot SEN0158 and the TinyPICO/TinyS3 might be a tight fit (scroll down see the images for the proper placement and positioning). If necessary, cut away small parts of the enclosure with a sharp knife to make room for the components. You might have to drill out the LED holes with a 5mm drill, if they do not fit.</li> <li>Either use a M3 threading tool to create threads in all holes. Alternatively, grab an M3 bolt, and screw it into all the holes to form the thread. It should give some resistance (and the bolt will get hot, so you might have to let it cool down between holes), but it should be possible without too much problems, if not, predrill the holes with a 2.5mm drill.</li> <li>Using a wire cutter, cut the length of the cable of the DFRobot SEN0158 to around 5 cm (keep the rest for later), and carefully remove the outer sleeve using a knife. If you choose to remove the LED form the DFRobot SEN0158 (see step 5), it might be easier to remove the outer sleeving after opening the DFRobot SEN0158.</li> <li>Strip a few millimeters off each of the 4 DFRobot SEN0158 wires, and pre-tin them (apply a bit of solder to them).</li> <li>(Optional) Remove the LED inside the DFRobot SEN0158. This will reduce the power consumption by around 20 mA, increasing battery life:<ol> <li>Removing the label.</li> <li>Pry open the top using a knife (it is glued in place, so it might take some force).</li> <li>Removing the circuit board.</li> <li>Desoldering/cut the LED. </li> <li>Re-insert the circuit board into its enclosure (note the groove on the far side of the enclosure, into which the circuit board fits). </li> <li>Re-apply the label or wrap some tape around the end of the DFRobot SEN0158 to prevent the circuit board from falling out.</li> </ol> </li> <li>(TinyS3 only) At the bottom of the board, solder a piece of wire between pin 1 and one of the pads labeled 'CUT TO DISABLE CHRG LED'. You can use a piece of the leads of the LEDs that you will cut in step 8. </li> <li> <p>Solder the 4 wires from the IR sensor to the TinyPICO/TinyS3:</p> Wire Color Function TinyPICO pin TinyS3 pin Red Power 3V3 3V3 Black Ground GND (next to RST) GND (next to RST) Yellow SDA 21 8 Green SCL 22 9 </li> <li> <p>Take the 2 LEDs and 2 180 Ohm resistors. The next steps will have to be performed on both LEDs. </p> <ol> <li> <p>Figure out what each lead of the LED does. Either use the datasheet, or test it by supplying a low voltage (max 5V @ 20mA) between the longest (ground) lead and the others, you could use a coin cell for this. For the RGB LED I used, starting from the shortest lead, it was:</p> Lead Length Function Shortest Blue Medium Green Longest Ground Medium Red </li> <li> <p>(RGB LEDs only) Cut the lead for the blue LED off as far as possible. The blue will not be used.</p> </li> <li>Bend all leads to a 90 degree angle.</li> <li>Cut the longest (ground) lead to a length of approximately 5mm, do the same for one lead of the 180 Ohm resistors.</li> <li>Solder the 5mm lead of the resistor to the ground lead of the LEDs.</li> <li>Grab/cut 80mm red and green wires (from the remaining wire of the DFRobot SEN0158), strip a few millimeters of each side and pre-tin them.</li> <li>Cut the red lead of the LED to a length of approximately 5mm, and solder the red wire to it.</li> <li>Do the same for the green lead and wire.</li> <li>(Optionally, but recommended) Apply electrical tape or heat shrink around the lead close to the LED to electrically isolate the leads (to prevent shorts). Do this at least for the ground lead, and optionally for the others.</li> </ol> </li> <li> <p>Solder the wires from the LEDs to the TinyPICO/TinyS3 at the following pins:</p> LED Wire TinyPICO pin TinyS3 pin 1 Red 26 7 1 Green 25 6 2 Red 15 5 2 Green 27 21 </li> <li> <p>(TinyPICO only) Grab the 12 KOhm and 22 KOhm resistors.</p> <ol> <li>Cut the length of one lead of each resistor to a length of approximately 5mm.</li> <li>Solder the two 5mm leads together.</li> <li>Solder the other leg of the 22 KOhm resistor to GND (between 5V and BAT).</li> <li>Solder the other leg of the 12 KOhm resistor to 5V.</li> <li>Trim the length of the exposed leads.</li> <li>Cut a piece of wire to a length of approximately 4 cm (from the remaining wire of the DFRobot SEN0158), strip a few millimeters of each side and pre-tin them.</li> <li>Solder one side of the wire to the previously soldered connection between the 12 and 22 KOhm resistors, and solder the other side to pin 32.</li> </ol> </li> <li>Cut a piece of black wire to a length of 8 cm (from the remaining wire of the DFRobot SEN0158), strip and pre-tin each side and solder one side to GND.<ul> <li>TinyPICO: Solder it to the lead of the 22 KOhm resistor.</li> <li>TinyS3: Solder it to the GND pin between 5V and VBAT.</li> </ul> </li> <li>Solder the positive (red) wire of the battery to BAT/VBAT.</li> <li>Carefully glue the switch to the enclosure with hot glue (or superglue). Make sure you only glue the tabs or sides of the switch, so it can still slide freely afterwards.</li> <li>Push the two LEDs into the holes close to the switch. LED 1 should go into the left hole (see image for orientation and the table at point 9 to identify which LED is which) and LED 2 in the right hole. Apply some glue if the fit is loose.</li> <li>Solder the black wire connected to GND on the TinyPICO/TinyS3 and the two resistors that are connected to the LEDs to the center lug of the switch. Trim the excess leads of the resistors.</li> <li>If the ground (black) wire of the battery is shorter than 60mm, extend it using the remaining wire of the DFRobot SEN0158. Make sure you cover the solder connection with electrical tape or heat shrink.</li> <li>Solder the ground (black) wire of the battery to the left lug of the switch (see the image for orientation).</li> <li>Slide the DFRobot SEN0158 inside its cavity (from the inside) until it sticks out slightly at the front of the enclosure and loosely clamp it down with the 'SensorBracket'. It should still be able to rotate. </li> <li>Place the TinyPICO/TinyS3 in it's recess in the enclosure and clamp it down with the 'ControllerBracket' (don't overtighten!). </li> <li>Update the firmware and webserver onto the sensor.</li> <li>Connect the sensor to WiFi.</li> <li>Go to the 'Coordinates' section of the sensor settings</li> <li>Place the sensor down on a flat surface and move a base horizontally in front of it. Now rotate the DFRobot SEN0158 inside the sensor until the movement of the dot in the 'Coordinates' section also moves horizontal.</li> <li>Screw down the DFRobot SEN0158 properly so it cannot move anymore.</li> <li>Insert the battery and screw down the sensor lid and use the M5 bolt and nut to attach the 'MicstandMount' to it.</li> </ol> <p>The sensor is now ready to be used.</p> <p></p>"},{"location":"DIY/Foundry/foundryConfig/","title":"Module Configuration","text":"<p>You can access the module configuration by opening the 'Game Settings' sidebar tab (on the right of the screen, cog icon), and clicking the 'Material Plane Configuration' button.</p> <p></p> <p>The configuration consists of multiple tabs:</p>"},{"location":"DIY/Foundry/foundryConfig/#general","title":"General","text":"<p>This tab is used for general settings for the module.</p> <ul> <li>Active User: Sets the active user for the module. This user will be the one displayed on the display.</li> <li> <p>Device: Sets the kind of device that is used for token tracking, either the 'Material Plane Sensor' or a 'Touch Screen'</p> </li> <li> <p>Low Battery Notifications: Will pop up notifications if the battery of the sensor, base or pen is low</p> </li> <li> <p>Hide Display Elements: Will hide all display elements (sidebar, buttons, scenes, etc). This can be toggles using the 'Ctrl' key</p> </li> <li>Block Interactions: Will block canvas interactions if the Material Plane Configuration window is open. This will, for example, prevent tokens from being moved while adjusting sensor settings</li> </ul>"},{"location":"DIY/Foundry/foundryConfig/#connection","title":"Connection","text":"<p> This tab allows you to configure how the sensor will connect to Foundry.</p> <p>Depending on your setup, you will either connect the sensor and Foundry directly, or through Material Companion. Please refer to the Sensor Configuration page for more info on the connection methods and why you would choose one or the other.</p> <ul> <li>Connection Mode: Sets how Foundry will try to connect to the sensor:<ul> <li>Connect Directly to the Sensor: Foundry will attempt to connect directly to the sensor</li> <li>Connect Through Material Companion: Foundry will attempt to connect to Material Companion, which will then attempt to connect to the sensor</li> <li>Don't Connect: Foundry will not attempt to connect to the sensor</li> </ul> </li> <li>Sensor Module IP Address: The address of the sensor. Find out the address here</li> <li>Material Companion IP Address: The IP address of Material Companion. Find out the IP address here</li> <li>Maximum Connection Attempt: Foundry will attempt to connect to either the sensor or Material Companion for this many times. After that it will stop trying, until it is refreshed</li> </ul>"},{"location":"DIY/Foundry/foundryConfig/#sensor","title":"Sensor","text":"<p>This tab is used to configure the sensor settings.</p>"},{"location":"DIY/Foundry/foundryConfig/#downloads","title":"Downloads","text":"<p> In the 'Downloads' tab you can download the various firmwares for the Material Plane hardware, and Material Companion.</p> <p>For each component, you can see the current version, the minimum version (that works with this version of the module), and the latest version.</p> <p>Select the desired 'variant' (if applicable) and press the 'Download' button to download the file.</p>"},{"location":"DIY/Foundry/foundryConnection/","title":"Connecting to the Sensor","text":"<p>It is necessary to establish a connection between the sensor and your Foundry client.</p> <p>In the very least, the Foundry client that is displayed on the shared display must connect to the sensor. Optionally, the gamemaster's client can also connect to the sensor. Doing this gives the gamemaster access to the sensor configuration, which might make configuration easier.</p> <p>You will need to configure the connection for each client separately, and you will need to make sure that the display client is set as the 'Active User' in the Material Plane Configuration.</p> <p>The connection between the Foundry client and sensor can be established over WiFi, or through the USB port (currently not functional).</p>"},{"location":"DIY/Foundry/foundryConnection/#wifi-connection-to-foundry","title":"WiFi Connection to Foundry","text":"<p>Before we continue, it is necessary to properly establish the difference between the Foundry server and any clients that connect to it, and the difference between secured and unsecured servers.</p>"},{"location":"DIY/Foundry/foundryConnection/#client-vs-server","title":"Client vs Server","text":"<p>Whenever you or your players use Foundry, there will be a single server. This server can take one of multiple forms:</p> <ul> <li>Part of the Foundry application, this is always the case if one user is running the Foundry application.</li> <li>A local server, for example, a computer in your office that runs a dedicated Foundry server.</li> <li>A remote server, for example, using the Forge, Molten Hosting, or another service that provides servers.</li> </ul> <p>Anyone accessing Foundry, is doing so through a client. There's basically only 2 different client forms:</p> <ul> <li>Part of the Foundry application (the application is both a server and a client).</li> <li>Through a browser</li> </ul> <p>Material Plane never talks directly to your Foundry server, it only connects to one or more clients. For this reason, it does not matter how or where the server is hosted.</p>"},{"location":"DIY/Foundry/foundryConnection/#secured-vs-unsecured-servers","title":"Secured vs Unsecured Servers","text":"<p>Most websites you visit on the internet are secured using SSL certificates, which allows safe, encrypted communication. Whether or not a website or server is secured can be identified by the lock to the left of your browsers navigation bar. Most remote Foundry servers (such as servers hosted on the Forge or Molten Hosting) are secured. Local Foundry servers are, by default, not secured. If yours is, you probably know this already, because you've had to configure it yourself.</p> <p>For local gaming (so both the server and clients on your home network), there is no reason to secure the server, and to make connecting to the sensor easy, I would recommend that you do not secure it.</p> <p>The reason this is important, is that the sensor cannot currently provide a secured connection. If your server is secured, the sensor is therefore not allowed (by your browser) to connect to the Foundry client. The result of this is that you will need to connect to the sensor through Material Companion, which can bridge this gap between the sensor and Foundry client.</p>"},{"location":"DIY/Foundry/foundryConnection/#connection-options","title":"Connection options","text":"<p>When connecting the sensor to the VTT over WiFi, you have 2 options:</p> <ul> <li>Direct Connection: The sensor connects directly to the VTT.</li> <li>Through Material Companion: The sensor connects to Material Companion, which then connects to the VTT.</li> </ul> <p>The direct connection is preferable, but not always possible. For example, if your Foundry server is secured (see above). This is where Material Companion comes into play: it connects to the client from the computer, which is allowed for secured servers. Material Companion can then connect to the sensor and pass all the data through.</p>"},{"location":"DIY/Foundry/foundryConnection/#direct-connection","title":"Direct Connection","text":"<p>It is assumed that your sensor is already connected to your WiFi network.</p> <ol> <li>Make sure the sensor is switched on.</li> <li>Open the Material Plane Configuration.</li> <li>Head over to the 'Connection' tab. </li> <li>Set the 'Connection Mode' to 'Connect Directly to the Sensor'.</li> <li>In the 'Sensor Module IP Address', fill in the sensor address/IP and port.      By default, this is 'materialsensor.local:3000'. If this doesn't work, try figuring out the correct sensor address. </li> <li>Close the configuration screen, the client should refresh, if not, perform a manual refresh (press F5).</li> <li>If all goes well, you should see the 'Connected to sensor' popup message in Foundry. It can take a few seconds for this to appear.</li> </ol> <p></p>"},{"location":"DIY/Foundry/foundryConnection/#connection-through-material-companion","title":"Connection Through Material Companion","text":"<p>It is assumed that your sensor is already connected to your WiFi network.</p> <ol> <li>Start Material Companion.</li> <li>Open the Material Plane Configuration.</li> <li>Gead over to the 'Connection' tab.</li> <li>Set the 'Connection Mode' to 'Connect Through Material Companion'.</li> <li>In the 'Material Companion IP Address', fill in the Material Companion IP and port. By default, this is 'localhost:3001'.</li> <li>Close the configuration screen, the client should refresh, if not, perform a manual refresh (press F5).</li> <li>If all goes well, you should see the 'Connected to Material Companion' popup message in Foundry. It can take a few seconds for this to appear. </li> <li>In Material Companion, head over to the 'Material Plane' tab.</li> <li>You should see a green tick next to 'Material Plane Connected\".</li> <li>If the 'Material Plane Sensor Connected' tick is green, the sensor is already connected and you are done.</li> <li>Otherwise, in the 'Sensor Address', fill in the sensor address/IP and port.      By default, this is 'materialsensor.local:3000'. If this doesn't work, try figuring out the correct sensor address.</li> <li>Press the 'Connect' button and wait a few seconds, hopefully the 'Material Plane Sensor Connected' tick turns green.</li> </ol> <p>There are 3 different connection events which will decide when Material Companion will attempt to connect to the sensor:</p> <ul> <li>When module is connected: Material Companion will attempt to connect to the sensor when the module connects to Material Companion.</li> <li>When Material Companion starts: Material Companion will attempt to connect to the sensor when it starts, even if the module is not connected, or if Foundry is not running.</li> <li>Manually: You have to press the 'Connect'/'Disconnect' button to have Material Companion either connect or disconnect.</li> </ul>"},{"location":"DIY/Foundry/foundryConnection/#usb-connection-to-foundry","title":"USB Connection to Foundry","text":"<p>Currently unsupported.</p>"},{"location":"DIY/Foundry/foundryInstall/","title":"Installing the Module","text":""},{"location":"DIY/Foundry/foundryInstall/#installing-the-module","title":"Installing the Module","text":"<p>To use Material Plane, you must install the module. There are several ways to do this:</p>  Please note that you will only need to install the module using one of the following methods (preferably the built-in module browser).  <p>Option 1: Built-In Module Browser The easiest way to install modules is using the built-in module browser.</p> <ol> <li>Start Foundry VTT and make sure you're in the 'Setup' screen</li> <li>Navigate to the 'Add-on Modules' tab</li> <li> <p>Press the 'Install Module' button</p> <p></p> </li> <li> <p>Search for 'Material Plane' in the search bar at the top</p> </li> <li> <p>Press the 'Install' button</p> <p></p> </li> </ol> <p>Option 2: Manifest URL You can use the module's manifest URL to install the module. The main reason for this is to install a specific version of the module.</p> <p>You can find the manifest URL for all available versions here. Choose the version you want, and right-click 'Manifest URL' to copy the URL.</p> <p>Alternatively, you could use this manifest URL which always points to the latest release: <code>https://github.com/MaterialFoundry/MaterialPlane_Foundry/releases/latest/download/module.json</code></p> <ol> <li>Start Foundry VTT and make sure you're in the 'Setup' screen</li> <li>Navigate to the 'Add-on Modules' tab</li> <li> <p>Press the 'Install Module' button</p> <p></p> </li> <li> <p>At the bottom you can find the 'Manifest URL' field, copy the manifest URL into this field and press 'Install'</p> <p></p> </li> </ol> <p>Option 3: Manual The last option is a manual installation</p> <ol> <li>Download the 'module.zip' file from GitHub</li> <li>Extract this file into the 'User Data Path' of your Foundry installation</li> <li>(Re)start Foundry VTT</li> </ol>"},{"location":"DIY/Foundry/foundryInstall/#enabling-the-module","title":"Enabling the Module","text":"<p>After installing the module, it must be enabled for each world in which you want to use the module:</p> <ol> <li>Start Foundry VTT and the world you want to use it in</li> <li>Open the 'Game Settings' sidebar tab (on the right of the screen, cogs icon)</li> <li> <p>Select 'Manage Modules'</p> <p></p> </li> <li> <p>Search for 'Material Plane' and tick the box to the left of it</p> <p></p> </li> <li> <p>Press 'Save Module Settings'</p> </li> </ol>"},{"location":"DIY/Foundry/foundryInstall/#updating-the-module","title":"Updating the Module","text":"<p>Modules in Foundry do not automatically update. You will have to check regularly if an update is available. Within Foundry you can either update all modules, or a single module:</p> <ol> <li>Start Foundry VTT and make sure you're in the 'Setup' screen</li> <li>Navigate to the 'Add-on Modules' tab</li> <li> <p>Either:</p> <ul> <li>Click 'Update All' to update all modules</li> </ul> <p></p> <ul> <li>Click the update button for the module you want to update</li> </ul> <p></p> </li> </ol>"},{"location":"DIY/Foundry/foundryInstall/#uninstalling-the-module","title":"Uninstalling the Module","text":"<p>To uninstall the module:</p> <ol> <li>Start Foundry VTT and make sure you're in the 'Setup' screen</li> <li>Navigate to the 'Add-on Modules' tab</li> <li> <p>Right-click the 'Material Plane' icon and click 'Uninstall'</p> <p></p> </li> </ol>"},{"location":"DIY/Foundry/foundrySetup/","title":"Foundry Setup","text":""},{"location":"DIY/Foundry/foundrySetup/#foundry-system-settings","title":"Foundry &amp; System Settings","text":"<p>For Material Plane to work, there are no special requirements with regards to the Foundry core or system settings, and the module is system agnostic.</p> <p>However, you might want to disable 'Pan to Token Speaker' in the Foundry core settings.</p>"},{"location":"DIY/Foundry/foundrySetup/#user-configuration","title":"User Configuration","text":"<p>There will need to be at least 1 gamemaster user for Foundry to work, and for Material Plane to work there needs to be at least 1 player user. As the gamemaster user you can add users in the 'Game Settings' tab on the right side of the screen by pressing the 'User Management' button. Here you can create an additional user. For the display user this can be either a 'Player' or 'Trusted Player'.</p>"},{"location":"DIY/Foundry/foundrySetup/#actor-permissions","title":"Actor Permissions","text":"<p>All player characters should be given 'Owner' permission for the display user. This can be configured in the 'Actors' tab on the right side of the screen. By right-clicking an actor you can select 'Configure Ownership' which opens up a popup in which you can configure which users have what ownership over that actor.</p>"},{"location":"DIY/SensorConfiguration/sensorConnecting/","title":"Connecting to WiFi","text":"<p>To use the Material Plane sensor, there needs to be communication between the sensor and the VTT. There are 2 ways to do this:</p> <ul> <li>WiFi: The sensor connects to your (2.4GHz) WiFi network. The VTT can connect directly to it, and you can access the webserver for configuration. Multiple VTT clients (for example, both the display and gm clients) can connect to the sensor.</li> <li>USB: The sensor connects over USB. WiFi setup is not required, but Material Companion is required for the connection. Only 1 VTT client can connect to the sensor (this should be the display client).</li> </ul> <p>Connecting over WiFi is the most convenient, but might not be possible for your situation.</p> <p>This page will only explain how to connect the sensor to a WiFi network. For connecting a VTT to the sensor, either using WiFi or USB, please check the 'VTT Configuration' section.</p>"},{"location":"DIY/SensorConfiguration/sensorConnecting/#connecting-to-wifi-network","title":"Connecting to WiFi Network","text":"<p>To connect to a WiFi network, the sensor needs to know the SSID (network name) and password of the network. There are 3 ways to do this:</p>"},{"location":"DIY/SensorConfiguration/sensorConnecting/#connect-to-wifi-using-material-companion","title":"Connect to WiFi Using Material Companion","text":"<p>You will need to install Material Companion.</p> <ol> <li>Connect the sensor to your computer using a USB-C cable</li> <li>Open Material Companion and navigate to the 'Sensor' sub-tab in the 'Material Plane' tab</li> <li>At the top, select the correct 'Sensor USB Port'.<ul> <li>The production sensor will show up as 'COM## (Sensor)' or 'COM## (Sensor - Update) If it doesn't show up, try refreshing the USB ports.If it shows up as 'COM## (Sensor - Update)' press the 'reset' button. After refreshing the USB ports it should show up as 'COM## (Sensor)'.</li> <li>The DIY sensor will show up as 'COM##'. There may be multiple 'COM##' ports, see here if you are unsure which one is the correct one.</li> </ul> </li> <li>In the 'Configuration' section, press the 'Read' button at the bottom and wait a few seconds. If the connection is successful all the configuration fields should be filled in.</li> <li>Press the 'Connect' button, which will open a popup.</li> <li>You can scan for nearby WiFi networks by pressing the 'Scan' button, this might take a while.</li> <li>Select the network you want the sensor to connect to, which will fill in the 'SSID' field with the SSID of the network. Alternatively, you can skip the scanning and directly fill in the SSID.</li> <li>Fill in the password of the network.</li> <li>Press 'Connect', the sensor will now restart and attempt to connect to the network.</li> </ol>"},{"location":"DIY/SensorConfiguration/sensorConnecting/#connect-to-wifi-using-the-webserver","title":"Connect to WiFi Using the Webserver","text":"<p>If the sensor is not able to connect to a WiFi network, it will host its own network. By default it will be called 'materialsensor', however, if you have checked the name of the device the name might be different. </p> <ol> <li>Connect to the sensor's access point, the password is 'Material Foundry'. Wait for the connection to complete (this might take a while).</li> <li>In a browser, navigate to http://192.168.4.1.</li> <li>Once the webserver has loaded, navigate to the 'Network' tab.</li> <li>In the 'Access Points' section, you can scan for nearby WiFi networks by pressing the 'Scan' button, this might take a while.</li> <li>Select the network you want the sensor to connect to, which will fill in the 'SSID' field with the SSID of the network. Alternatively, you can skip the scanning and directly fill in the SSID.</li> <li>Fill in the password of the network.</li> <li>Press 'Connect', the sensor will now restart and attempt to connect to the network.</li> </ol>"},{"location":"DIY/SensorConfiguration/sensorConnecting/#connect-to-wifi-using-usb","title":"Connect to WiFi Using USB","text":"<p>You can connect to the sensor over the USB port, and send and receive data over serial. You could use the built-in Arduino serial monitor (open the app, the serial monitor is the button at the top-righ with magnifyng lens icon) or a generic terminal emulator like YAT.</p> <p>See the table below for the correct settings:</p> Arduino Serial Monitor Generic Terminal Emulator Baud Rate 115200 115200 Termination Character Both NL &amp; CR NL &amp; CR or &lt;CR&gt;&lt;LF&gt; or \\n\\r Data Bits - 8 Parity - None Stop Bits - 1 Flow Control - None <p>If the connection is succesfull, the sensor should output continuous data, for example: <code>{\"status\":\"ping\",\"source\":\"main\"}</code> Which is transmitted every half second. You might notice a very rapid output like the following: <code>{\"status\":\"IR data\",\"detectedPoints\":1,\"id\":0,\"command\":0, ...}</code> This means that the sensor is detecting some infrared point. It would be helpful to make sure the sensor cannot see any infrared light, so either point it in another direction, or cover the front window.</p> <p>To scan for WiFi Networks, send <code>SCAN WIFI</code>, after a few seconds a list of access points should show up, similar to the image below.</p> <p>To connect to an access point, send: <code>CONNECT WIFI \"[SSID]\" \"[password]\"</code> Replace <code>[SSID]</code> and <code>[password]</code> with the actual SSID and password. Do not include the square brackets, but do include the quotation marks.</p> <p>For example, to connect to an SSID named <code>My SSID</code> with password <code>Password</code> send: <code>CONNECT WIFI \"My SSID\" \"Password\"</code></p> <p>{}</p>"},{"location":"DIY/SensorConfiguration/sensorConnecting/#sensor-address","title":"Sensor Address","text":"<p>To connect the sensor to the VTT, or to access the webserver you need to know the (IP) address of the sensor. The sensor will have an IP address of the form <code>x.x.x.x</code> (for example: <code>192.168.1.10</code>), and a DNS name which is the device name with <code>.local</code> appended (for example: <code>materialsensor.local</code>).</p> <p>By default, the device name is <code>materialsensor</code>, but this can be changed in the network tab of the webserver, where you can also find the IP address.</p> <p>Another way to find the device name and IP address is using Material Companion. Read the sensor configuration as described here (follow it up until point 4) and you can find the IP address and the name in the configuration fields.</p> <p>Lastly, you can get the data using a terminal emulator. Configure the terminal emulator as described here. When you send <code>STATUS</code>, a long list of settings is printed. Under the 'WiFi' section, look for 'IP Address' and 'Device Name'.</p>"},{"location":"DIY/SensorConfiguration/sensorConnecting/#finding-the-correct-usb-port","title":"Finding the Correct USB Port","text":"<p>For updates over USB, you will need to find the correct USB port over which the update can take place. Some devices, such as the production sensor and dock may show up as named devices in Material Companion or the Arduino IDE, but other will not. To figure out the correct port, you can try one of these methods:</p> <p>Using Material Companion</p> <ol> <li>Open Material Companion and navigate to either the 'Sensor', 'Base' or 'Pen' sub-tab in the 'Material Plane' tab</li> <li>Make sure the device is disconnected, then press the 'refresh' button next to 'Sensor/Dock USB Port'</li> <li>Take note of which ports are currently selectable</li> <li>Connect the device, wait a few seconds, and press the 'refresh' button again</li> <li>A new port should show up, this is the port you're looking for</li> </ol> <p>Using the Arduino IDE</p> <ol> <li>Open the Arduino IDE</li> <li>Make sure the device is disconnected, navigate to 'Tools' and take note of which ports are available under 'Port: xxx'</li> <li>Connect the device, wait a few seconds, and navigate to 'Tools' again (this won't work if you stay in the 'Tools' menu while connecting the device)</li> <li>A new port should show up, this is the port you're looking for</li> </ol> <p>Using Device Manager (Windows)</p> <ol> <li>Open the start menu and search for 'Device Manager'</li> <li>Make sure the device is disconnected, navigate to 'Ports (COM &amp; LPT)' and take note of which COM ports are available</li> <li>Connect the device, wait a few seconds, and Device Manager should update and show a new COM port, this is the port you're looking for</li> </ol>"},{"location":"DIY/SensorConfiguration/sensorSettings/","title":"Sensor Settings","text":"<p>This page discusses all settings related to how the sensor detects bases and handles the data related to this.These settings can be accessed through the Foundry Module Configuration screen or the webserver.</p> <p>The tab is divided into multiple sections which can be expanded or collapsed.</p>"},{"location":"DIY/SensorConfiguration/sensorSettings/#coordinates","title":"Coordinates","text":"<p>This section displays data of any detected infrared points (such as a base). A point is a collection of one or more 'pixels' where infrared light was detected. Pixels close to each other will be combined to form a single point.</p> <p>The top part of this section displays what the sensor can see. Any detected points will be displayed here with each point numbered and given a color.</p> <p>The middle part gives the data of the first 4 points:</p> <ul> <li> <p>X/Y: The X and Y coordinates of the point.</p> </li> <li> <p>Average Brightness: The average brightness of all pixels within the point.</p> </li> <li> <p>Maximum Brightness: The brightness of the brightest pixel within the point.</p> </li> <li> <p>Area: The size of the point.</p> </li> </ul> <p>The bottom part gives data transmitted by a detected base or pen (production sensor only):</p> <ul> <li>ID: The id of the base or pen.</li> <li>Command: The transmitted command (for example the buttons pressed on the pen).</li> <li>Battery: Approximate battery percentage.</li> </ul>"},{"location":"DIY/SensorConfiguration/sensorSettings/#exposure","title":"Exposure","text":"<p>The exposure section can be used to configure things related to the detection of bases.</p> <p>There are 2 brightness related settings ('Sensitivity' and 'Minimum Brightness') and an 'Auto Exposure' button. You should try the auto exposure first:</p> <ol> <li>Grab a base and activate it, make sure it stays activated during the auto exposure process. Make sure only one base is visible to the sensor. </li> <li>Hold the base near the edge of the display</li> <li>Press the 'Auto Exposure' button</li> <li>The sensor will increase the sensitivity until it detects the base and its detected brightness is close to 255</li> </ol> <p>Tip: You can keep the base activated without touching it: Touch the side of the base very short, wait for the red LED to switch off, touch the side of the base again. Repeat this 5 times and the red LED will start blinking. The base is now in 'always on' mode. You can switch it back by either switching the base off and on, or by doing the same procedure again.</p> <p>If the auto exposure did not work:</p> <ol> <li>Set 'Minimum Brightness' to around 100</li> <li>Slide 'Sensitivity' all the way down and slowly increase it until the base or pen is detected</li> <li>Keep increasing it until the maximum brightness is between 220 and 255</li> <li>If the base or pen is not detected, try increasing the minimum brightness</li> <li>If the sensor detects more points, increase the minimum brightness</li> <li>In tricky environments (for example with a lot of stray infrared light) you might have to find a balance between the 'Sensitivity' and 'Minimum Brightness' slider</li> <li>Move the base or pen across your display and make sure that the maximum brightness stays well above 'Minimum Brightness'</li> </ol> <p>Update Rate: The update rate controls how often the sensor sends out position data. Higher update rates will improve responsiveness, but might cause problems for slower systems, because line of sight and lighting calculations will have to be made more often. This can especially become evident when multiple bases are moved at the same time. Set it as high as you system will allow.</p> <p>Averaging: Averaging will smooth the position data of the bases. The average count equals how many readings are taken and averaged, where a higher value results in a very smooth but less responsive movement, while lower values result in more jittery but more responsive movement. Try different values to find one that fits best for you.</p>  After finding a setting that results in a base being detected, you will want to make sure that bases can be detected across the entire display. In some areas of the display (usually near the edges and corners) it will be more difficult for the sensor to detect bases because of the angle between the bases and the sensor. You might have to increase 'Sensitivity' or decrease 'Minimum Brightness'.  You may also find that you have to slightly reposition the sensor for it to detect the entire display. You might have to adjust the exposure settings afterwards."},{"location":"DIY/SensorConfiguration/sensorSettings/#transform","title":"Transform","text":"<p> The 'Transform' section allows you to modify the position data.</p> <p>Mirroring &amp; Rotation When you move a base horizontally, but the point in the configuration screen moves the other direction, enable 'Mirror X'. When you move a base vertically, but the point moves the other direction, enable 'Mirror Y'. When you move a base horizontally, but the point moves vertically, enable 'Rotation'.</p> <p>Offset &amp; Scaling Offset and scaling can be used to fine tune the position data after calibration. Using the 'Offset X' and 'Offset Y' sliders you can add a horizontal of vertical offset to the position data. Using the 'Scale X' and 'Scale Y' sliders you can scale the position data, which in essence stretches the data out. </p>"},{"location":"DIY/SensorConfiguration/sensorSettings/#calibration","title":"Calibration","text":"<p>The 'Calibration' section of the 'Sensor' tab allows you to enable or disable the calibration, and to perform a calibration procedure.</p> <p>If the 'Calibration Enabled' or 'Calibration Offset Enabled' boxes are checked, then these calibration procedures are being applied. For easy sensor repositioning, it is advisable that you uncheck these boxes. Please note that ticking these boxes does not perform an actual calibration procedure.</p> <p>See this page for information on how to perform the calibration procedure.</p>"},{"location":"DIY/SensorConfiguration/webserver/","title":"Webserver","text":"<p>The sensor hosts its own webserver which can be used to check the status of the sensor, update the firmware and configure the sensor. The webserver is only available if the sensor is connected to WiFi.</p> <p>To access the webserver, open a browser and navigate to the <code>http://[sensor address].local</code> or <code>http://[sensor IP]</code>. You can get info on finding either here.</p> <p>By default, http://materialsensor.local should work, if not, make sure the device name is the same or fall back to using the sensor IP address (for example <code>http://192.168.1.10</code>).</p> <p>Make sure the address starts with <code>http://</code> not <code>https://</code>.</p> <p>Once the browser has loaded the webserver, it will try to open a websocket connection, please wait a few seconds, after which the webserver should be fully loaded.</p>"},{"location":"DIY/SensorConfiguration/webserver/#status-tab","title":"Status Tab","text":"<p>The status tab gives an overview of the sensor status, allows the firmware to be updated, the sensor to be reset to its default values, and the sensor to be restarted.</p> <p>Status</p> <p></p> <ul> <li>Hardware Variant: The hardware variant of the sensor (for example 'Production' or 'DIY Basic').</li> <li>Firmware Version: The current version of the firmware.</li> <li>Webserver Version: The current version of the webserver.</li> <li>Uptime: The time in hours and minutes the sensor has been on.</li> <li>Debug Enable: If enabled, the sensor will output debug data to the console or the USB port.</li> <li>Serial Output: If enabled, the sensor will output data over the USB port.</li> </ul> <p>Battery</p> <p></p> <ul> <li>Charging State: The current charging state.</li> <li>Percentage: The estimated remaining battery percentage.</li> </ul> <p>Battery (Advanced)</p> <p>The full DIY sensors have an advanced section that can be expanded by clicking on it.</p> <ul> <li>Voltage: The battery voltage.</li> </ul> <p>Lower section </p> <ul> <li>Update: Opens a new window to update the sensor. See here for more info.</li> <li>Reset Settings to Default Values: Opens a new window to reset some or all of the sensor settings. See below for more info.</li> <li>Restart Sensor: Restarts the sensor.</li> </ul> <p>Resetting Sensor Settings Pressing the 'Reset' button will open a new popup where you can reset sensor settings back to their defaults.</p> <p>You can choose one or more of the following: </p> <ul> <li>IR Configuration: If ticked, will reset all settings related to the detection of IR points (everything configurable in the 'IR Tracker' tab).</li> <li>Battery: If ticked, will reset the battery configuration. The sensor will learn the battery behavior over time to make more accurate estimates. If the battery configuration is reset, it will clear this stored behavior. This is required if a new battery is inserted or if the battery values are very inaccurate.</li> <li>Network Settings: If ticked, will reset all settings related to the network, such as the network to connect to. This will disconnect the sensor from the current WiFI network and requires this to be reconfigured.</li> </ul> <p>By pressing 'Ok' the ticked configurations will be reset and the sensor will restart.</p>"},{"location":"DIY/SensorConfiguration/webserver/#network-tab","title":"Network Tab","text":"<p>Network Status </p> <ul> <li>Connection Status: Indicates if the sensor is connected to a WiFi network.</li> <li>SSID: The network the sensor is connected to, or configured to connect to.</li> <li>IP Address: The IP address of the sensor.</li> <li>Name: The name of the sensor.</li> </ul> <p>Access Points Here you can scan for and connect to a WiFi network.</p> <p>Follow the instructions (starting from #4) here.</p> <p>Websocket </p> <p>Status of the websocket server that the sensor hosts. It displays how many clients are connected and their IP addresses. These could be from browsers accessing the webserver or from VTT clients.</p>"},{"location":"DIY/SensorConfiguration/webserver/#ir-tracker-tab","title":"IR Tracker Tab","text":"<p>This tab is used to configure the sensor settings.</p>"},{"location":"DIY/SensorConfiguration/webserver/#console-tab","title":"Console Tab","text":"<p> The console tab is meant for debugging. If 'debug enable' is ticked in the status tab, the sensor will send debug messages to the console.</p> <p>Messages can be sent to the sensor at the bottom, the 'Clear' button clears the console, 'Autoscroll' enabled or disables the automatic scrolling, and 'Show timestamp' will prepend each message with the time it was received.</p>"},{"location":"DIY/SensorPositioning/sensorDistance/","title":"Sensor-to-Display Distance","text":"<p>In order for the sensor to detect minis across the whole display, the sensor needs to be located at a minimum distance above the display. The minimum distance depends on the size of the display, where a bigger display requires a larger distance.</p> <p>The table below gives the minimum distance between the display and sensor. Measure the distance between the top of the display and the desired sensor mounting location (ceiling, microphone stand, etc). </p> <p>Look at the row with your display size, and if the value in the 'Distance' column is smaller than the measured distance, your setup is incompatible with Material Plane.</p> <p>Placing the sensor too far away from the display will result in reduced accuracy and potentially more jittery movement. For optimal results you should place the sensor as close to the minimum distance as possible (with some wiggle room for alignment). If you do not need the wide-angle lens, it's better to not have it installed.</p> <p>Please note that these are just approximate values, assuming a 16:9 aspect ratio display and perfect sensor positioning while ignoring any manufacturing tolerances. Try to err on the safe side by subtracting a few cm/inches from the measured distance between display and sensor.</p> Display Size Distance 32\" 120cm/47\" 40\" 150cm/59\" 43\" 160cm/63\" 50\" 187cm/74\" 55\" 205cm/81\" 60\" 224cm/88\" 65\" 243cm/96\" 70\" 261cm/103\" 75\" 280cm/110\" 80\" 289cm/114\""},{"location":"DIY/SensorPositioning/sensorMounting/","title":"Mounting","text":"<p>The mount in the included 3D models can be used on either a microphone stand, screwed directly into the ceiling (or other surface), or can be magnetically attached by adding a magnet to the mount.</p>"},{"location":"DIY/SensorPositioning/sensorMounting/#microphone-stand","title":"Microphone Stand","text":"<p>The mount has 3/8\"-16 thread at the bottom to allow the mount to be screwed onto a microphone stand, as shown in the bottom-left image. 3/8\" is a standard thread for microphones outside of the US, in the US 5/8\"-27 is more common. Adapters to convert 3/8\" to 5/8\" are easy to find and not very expensive.</p> <p>When selecting a microphone stand, make sure it can reach high enough, or get a microphone stand extender. You want to take the minimum sensor-to-display distance into account. You could also use wall or ceiling mounted microphone stands.</p>"},{"location":"DIY/SensorPositioning/sensorMounting/#ceiling-mount","title":"Ceiling Mount","text":"<p>A second option is to attach the mount to the ceiling (or other surface). By removing the big bolt, you can take the mount apart, allowing you to fit a screw through the bottom part of the mount, as shown in the bottom-right image. You can use a countersunk screw with a maximum diameter of 4.5mm/0.177\" (US screw size #9 or lower), and a minimum length of 40mm/1.5\"</p>"},{"location":"DIY/SensorPositioning/sensorMounting/#magnetic-mount","title":"Magnetic Mount","text":"<p>It is possible to attach a magnet to the bottom of the mount. This allows the sensor to be attached to ferromagnetic objects, such as light fixtures.</p> <p>The easiest way is to source a suitable magnet is to search for 'rubber coated magnet'. Look for a 20x6mm one (22x6mm can also work, but this is lightly wider than the mount) with M4 internal thread. One with a post (extended thread) will fit, but this is not necessary. Attach it by removing the big bolt on the mount to take the mount apart. It is then possible to attach the magnet using a M4x22mm countersunk bolt (if the magnet has a post, you can reduce this to M4x16mm).</p>"},{"location":"DIY/SensorPositioning/sensorOrientation/","title":"Sensor Orientation","text":"<p> Finding a suitable orientation and position of the sensor above the display is essential for optimal performance. For the sensor to detect bases , there needs to be line of sight between the sensor and the bases . The relative angle between the base and sensor can influence this. Take a look at the (exaggerated) example on the right.</p> <p>If the base is directly below the sensor (center base), the apparent brightness of the infrared LED is at its maximum, as long as no part of the mini is obscuring the line of sight.  The left base gives an example of this: the line of sight between the infrared LED and sensor goes right through the mini, so the sensor cannot see the base. In case of the right base, the mini does not obscure the line of sight, but due to the angle between the sensor and base, the apparent brightness of the infrared LED is decreased. This situation is identical in the other axis (pointing out of your screen), so an optimal angle and position of the sensor needs to be found where the chance of the line of sight being obscured, and the relative angle between the sensor and base is minimized.</p> <p>To do this, we also need to take into account how players will be sitting around the display. Consider the 2 situations in the images below.</p> <p>The red circle indicates the approximate location of the sensor above the display, with the sensor pointing towards the center of the display. The orientation of the bases during calibration and during play will be as shown in the top-right corner. Because the sensor is located towards the GM side, the chance of a mini obscuring the infrared LED is reduced. Only when bases are placed on the part of the display closest to the GM this might become an issue. The apparent brightness of the infrared LEDs will be pretty good across most of the display, but the part of the display opposite the GM might experience reduced apparent brightness. It is a good idea to make sure the sensitivity of the sensor is tuned so the sensor can detect the bases at these parts of the display. You could consider moving the sensor towards the green circle. This will reduce the chance of minis obscuring the LED (see the left mini in the earlier topmost image on this page), but this will reduce the apparent brightness in the part of the display opposite the circle.</p> <p></p>"},{"location":"DIY/Updating/sensorUpdating/","title":"Updating Firmware","text":"<p>The sensor can be updated in 4 ways:</p> <ul> <li>Using Material Companion over WiFi</li> <li>Using Material Companion with a USB cable</li> <li>Using the sensor webserver</li> <li>Using the Arduino IDE (USB or WiFi)</li> </ul> <p>The first time uploading the firmware to the sensor, you must upload using a USB cable (either using Material Companion or the Arduino IDE).</p> <p>The sensor has 2 different things that require separate updates:</p> <ul> <li>Firmware: This is the code that is responsible for almost everything the sensor does, except for the webserver</li> <li>Webserver: This is the code that is responsible for the webserver</li> </ul> <p>These may or may not receive updates at the same time. Depending on the update method you will either have to update these separately or they can be updated at the same time.</p>"},{"location":"DIY/Updating/sensorUpdating/#finding-the-current-version","title":"Finding the Current Version","text":"<p>You can find the versions of the firmware and webserver that are installed on your sensor in one of the following ways:</p> <ul> <li>Using Material Companion: The versions can be reported in the Sensor tab.</li> <li>Using the Sensor's Webserver: The versions will be displayed on the Status tab.</li> <li>Using the Module's Downloads Tab: The versions will be displayed in 'Current' column on the Downloads tab of the Material Plane configuration screen.</li> </ul>"},{"location":"DIY/Updating/sensorUpdating/#finding-the-latest-version","title":"Finding the Latest Version","text":"<p>You can find the latest versions of the firmware and webserver in one of the following ways:</p> <ul> <li>Using Material Companion: The latest versions are displayed in the 'Update' section in the Sensor tab.</li> <li>Using the Module's Downloads Tab: The latest versions will be displayed in 'Latest' column on the Downloads tab of the Material Plane configuration screen.</li> <li>Using GitHub's Releases Page: The Releases Page on GitHub will list all the latest releases.</li> </ul>"},{"location":"DIY/Updating/sensorUpdating/#material-companion-wifi","title":"Material Companion (WiFi)","text":"<p>This method requires the firmware of the sensor to be v3.0.4 or later. Material Companion has the option to update the sensor over your WiFi connection. For this to work, you will need to connect the sensor to your WiFi network. You will need to update the firmware and webserver separately.</p> <p></p> <ol> <li>Open Material Companion and navigate to the 'Sensor' sub-tab within the 'Material Plane' tab.</li> <li>At the bottom 'Update' section, select either 'WiFi - Firmware' or 'WiFi - Webserver' at 'Update Method'</li> <li>At 'Sensor Address' fill in the address of the sensor. By default this is 'materialsensor.local', but this is configurable in the sensor configuration. You could also fill in the sensor IP address, for example '192.168.1.20'</li> <li>Select the correct hardware variant of your sensor at 'Variant'</li> <li>At 'Firmware Version' and 'Webserver Version', select the version you want to update to the sensor</li> <li>Optionally, you could tick 'Show Pre-Releases' which will allow you to update a pre-release version (not recommended for normal use)</li> <li>Press the 'Update' button</li> <li> <p>A popup will appear that gives the update progress, you can press 'Details' to get more details about the progress.</p> <p></p> </li> <li> <p>If the update went succesfull the sensor will restart</p> </li> </ol>"},{"location":"DIY/Updating/sensorUpdating/#material-companion-usb","title":"Material Companion (USB)","text":"<p>Material Companion has the option to update the sensor over USB. You can update the firmware, the webserver, or both.</p> <p></p> <ol> <li>Open Material Companion and navigate to the 'Sensor' sub-tab within the 'Material Plane' tab.</li> <li>At the top, select the correct 'Sensor USB Port'.<ul> <li>The production sensor will show up as 'COM## (Sensor)' or 'COM## (Sensor - Update) If it doesn't show up, try refreshing the USB ports.If it shows up as 'COM## (Sensor)' press and hold the 'boot' button, then press the 'reset' button and release the 'boot' button. After refreshing the USB ports it should show up as 'COM## (Sensor - Update)'.</li> <li>The DIY sensor will show up as 'COM##'. There may be multiple 'COM##' ports, see here if you are unsure which one is the correct one.</li> </ul> </li> <li>At the bottom 'Update' section, select 'USB' at 'Update Method'.</li> <li>Select the correct hardware variant of your sensor at 'Variant'.</li> <li>At 'Firmware Version' and 'Webserver Version', select the version you want to update to the sensor. You can set one to 'none' to prevent one from updating.</li> <li>Optionally, you could tick 'Show Pre-Releases' which will allow you to update a pre-release version (not recommended for normal use).</li> <li>Press the 'Update' button.</li> <li> <p>A popup will appear that gives the update progress, you can press 'Details' to get more details about the progress.</p> <p></p> </li> <li> <p>If the update went succesfull you can restart the sensor.</p> </li> </ol>"},{"location":"DIY/Updating/sensorUpdating/#webserver","title":"Webserver","text":"<p>The firmware or webserver can be updated from the sensor webserver. You will have to update them separate from each other.</p> <ol> <li>Download the latest webserver (Webserver.bin) or firmware (Sensor_[variant]_Firmware.bin) from here.</li> <li>Navigate to the sensor webserver.</li> <li>Press the 'Update' button at the bottom of the 'Status'tab, this will navigate you to the update page.</li> <li>Select either 'Firmware' or 'Webserver', depending on which you want to update.</li> <li>Browse for the firmware or webserver file.</li> <li>The sensor will now be updated and will restart when its done.</li> </ol> <p></p>"},{"location":"DIY/Updating/sensorUpdating/#arduino-ide","title":"Arduino IDE","text":"<p>The Arduino IDE gives you the option to update the firmware and webserver (separate from each other), and it even gives you the option to make changes to the code. Steps 1 - 7 will only need to be done once. You can upload using the Arduino IDE either over the USB cable or over WiFi (requires the firmware of the sensor to be v3.0.4 or later)</p> <ol> <li>Download and install the legacy Arduino IDE from here. Do not download Arduino IDE 2.x.x, you want 1.x.x</li> <li>Download and install the 'esp32fs plugin' from here</li> <li>Open the Arduino IDE and navigate to 'File' =&gt; 'Preferences'</li> <li>Near the bottom there should be a field for 'Addition Boards Manager URLs', click the button to the right of that field </li> <li> <p>Fill in the following on separate lines     \"https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_index.json\"     \"https://github.com/MaterialFoundry/MaterialFoundry_Arduino/releases/latest/download/package_materialfoundry_index.json\"</p> <p></p> </li> <li> <p>Restart the IDE, then navigate to 'Tools' =&gt; 'Board: xxx' =&gt; Boards Manager, which should open a new window</p> </li> <li>Wait for the window to fully load, then search for and install 'esp32' (not 'Arduino ESP32 Boards') and 'Material Foundry'. </li> <li>Download and extract the 'Source code' from the latest sensor release</li> <li>Open 'Sensor.ino' in the Arduino IDE</li> <li> <p>Navigate to 'Tools' =&gt; 'Board: xxx' and select your harware version/board</p> <ul> <li>In most cases you will want to select 'Material Foundry' =&gt; 'Material Plane Sensor (xxx)', where you replace 'xxx' with your hardware variant</li> <li>If you use a board that does not fit within the default sensor variants, select your board from the 'ESP32 Arduino' list</li> </ul> <p></p> </li> <li> <p>Navigate to 'Tools' and select the correct 'Port'.</p> <ul> <li>To update over WiFi, select 'materialsensor at x.x.x.x' under 'Network Ports'</li> <li>The production sensor will show up as 'COM## (Material Plane Sensor (Production))' or 'COM## (ESP32S3 Dev Module).If it shows up as 'COM## (Material Plane Sensor (Production))' press and hold the 'boot' button, then press the 'reset' button and release the 'boot' button. After refreshing the USB ports it should show up as 'COM## (ESP32S3 Dev Module)'.</li> <li>The DIY sensor can show up with various names. There may be multiple 'COM##' ports, see here if you are unsure which one is the correct one</li> </ul> <p></p> </li> <li> <p>You can now update either the firmware or the webserver:</p> <ul> <li>Firmware: Press the 'Upload' button (arrow pointing to the right in the top-left part of the screen). Then wait for the IDE to compile and then upload the firmware</li> </ul> <p></p> <ul> <li>Webserver: Navigate to 'Tools' and select 'ESP32 Sketch Data Upload', select 'SPIFFS' and press 'OK'. Then wait for the IDE to upload the webserver</li> </ul> <p></p> </li> </ol>"},{"location":"DIY/Updating/sensorUpdating/#finding-the-correct-usb-port","title":"Finding the Correct USB Port","text":"<p>For updates over USB, you will need to find the correct USB port over which the update can take place. Some devices, such as the production sensor and dock may show up as named devices in Material Companion or the Arduino IDE, but other will not. To figure out the correct port, you can try one of these methods:</p> <p>Using Material Companion</p> <ol> <li>Open Material Companion and navigate to either the 'Sensor', 'Base' or 'Pen' sub-tab in the 'Material Plane' tab</li> <li>Make sure the device is disconnected, then press the 'refresh' button next to 'Sensor/Dock USB Port'</li> <li>Take note of which ports are currently selectable</li> <li>Connect the device, wait a few seconds, and press the 'refresh' button again</li> <li>A new port should show up, this is the port you're looking for</li> </ol> <p>Using the Arduino IDE</p> <ol> <li>Open the Arduino IDE</li> <li>Make sure the device is disconnected, navigate to 'Tools' and take note of which ports are available under 'Port: xxx'</li> <li>Connect the device, wait a few seconds, and navigate to 'Tools' again (this won't work if you stay in the 'Tools' menu while connecting the device)</li> <li>A new port should show up, this is the port you're looking for</li> </ol> <p>Using Device Manager (Windows)</p> <ol> <li>Open the start menu and search for 'Device Manager'</li> <li>Make sure the device is disconnected, navigate to 'Ports (COM &amp; LPT)' and take note of which COM ports are available</li> <li>Connect the device, wait a few seconds, and Device Manager should update and show a new COM port, this is the port you're looking for</li> </ol>"},{"location":"DisplayConsiderations/mounting/","title":"Mounting","text":"<p>Unless you want to use a projector, you will have to think of a way to mount your display. The display will have to be mounted horizontally, so you can place minis on top of it. In general, there are 3 approaches to achieve this:</p>"},{"location":"DisplayConsiderations/mounting/#laying-on-a-table","title":"Laying on a Table","text":"<p>The simplest option would be to simply lay the display on a table. You will probably have to remove the display's foot. If the back of the display is flat, and the cables can be inserted from the side, this might just work out perfectly without doing anything else. Otherwise, you could make use of the VESA attachment points (assuming your display has them), and attach a piece of wood to these attachment points to raise the back of the display clear off the table.</p>"},{"location":"DisplayConsiderations/mounting/#display-enclosure","title":"Display Enclosure","text":"<p>A display enclosure is a, generally wooden, enclosure into which a display is mounted. The advantage of an enclosure is that it look prettier, and offers better protection. Displays enclosures can be bought, or you could build your own. You can google terms like \"RPG TV enclosure\" or \"RPG TV case\" for shops, inspiration or build plans.</p>"},{"location":"DisplayConsiderations/mounting/#display-table","title":"Display Table","text":"<p>The last, and according to many people, ultimate option, is a dedicated display table. This is a table with a built-in display. These can offer better protection and look better than enclosures. Additionally, your setup is pretty much always ready to go. Many of these tables have built-in accessories, such as dice trays or dice towers, and many have a cover that allow the table to be used as a normal table. However, these tables are generally very expensive, or take a lot of work to build. You can google terms like \"RPG TV table\" for shops, inspiration or build plans.</p>"},{"location":"DisplayConsiderations/protection/","title":"Protection","text":"<p>Depending on your choice of display, you will want to consider adding some kind of protection. While both the production and the DIY bases have felt on the bottom, there is still some risk of scratching the display.</p>"},{"location":"DisplayConsiderations/protection/#material-options","title":"Material Options","text":"<p>The following materials are the most common for this type of application:</p> <ul> <li>Acrylic (also known as Plexiglass, Perspex or PMMA)</li> <li>Polycarbonate (also known as Lexan)</li> <li>Glass</li> </ul> <p>Acrylic and polycarbonate are both transparent polymers that are used often as an alternative for glass. Their main advantages are their shatter resistance and lower weight.</p> <p>See below for a comparison table of these materials. One or more plusses means it's more favorable, while minusses means it's less favorable.</p> Acrylic Polycarbonate Glass Scratch Resistance - - - ++ Shatter Resistance + ++ - - Bend resistance - - - ++ Workability (Easy to cut to size) + ++ - Weight + + - Price + -/+ - <p>In general: If you can get away with using glass, it's probably the best option. You'll need to make sure it's thick enough so it doesn't break easily. Due to the weight, this is probably not a good solution for portable setups. For other situations, acrylic is probably the best option. It is more scratch and bend resistant than polycarbonate, and generally cheaper. The main disadvantage is its shatter resistance, however, this is generally not a problem.</p>"},{"location":"DisplayConsiderations/protection/#mounting-considerations","title":"Mounting Considerations","text":"<p>An important thing to consider is how the protective sheet will be mounted on or above the display. Consider the 3 cases in the image, where a cross section of a TV enclosure is displayed, with the TV in dark-grey, the actual LCD in light-grey and the protective sheet in green.</p> <p>If your display has a raised bezel, as is the case in the top and middle image, you can either rest the protective sheet on the bezel (top) or on the LCD (middle). The main reason to go for the top option is that the LCD is usually quite fragile, so resting a heavy protective sheet directly on top of it can cause damage. The disadvantage of the top option is that the sheet is suspended in the air. This means that the bend resistance of the material becomes an important factor, and there is a risk of shattering the sheet if something falls on it (mainly an issue for glass). By increasing the sheet thickness you can counter these issues, however, this increases the distance between the display and mini, which can cause parallax issues. If you do decide to go with the middle option, make sure you use a light and thin sheet. However, you should be aware that if the display (and thus the protective sheet) heats up, it can start bending, especially for thin acrylic and polycarbonate. If your display does not have a raised bezel, as shown in the bottom option, you have the most freedom with regards to mounting options, because you can choose to mount the protective sheet directly on the display (as shown in the image), or add some space between the sheet and the display. Many displays without raised bezel already have a glass plate on top of the display, onto which you can quite safely lay a protective sheet (although you could consider not using any protection because the glass itself is already quite suitable). Even if the display has no glass plate, the fact that the sheet partially rests on the bezel instead of completely on the LCD (as in the middle option) is already a great improvement.</p>"},{"location":"DisplayConsiderations/protection/#parallax-issues","title":"Parallax Issues","text":"<p>Because the display is observed from a low vantage point, parallax can become an issue. Parallax is the shift of the apparent location of an object with respect to a background, depending on the viewpoint. For example, if you hold out a finger in front of you, and look at it with one one, and then the other, you will notice that the apparent position of the finger changes.</p> <p>In a situation with a gaming display and minis, this issue can arise when the distance between the display and the mini is big. For example, if a 1cm thick protective sheet is added, and the display is looked at from the side (so a normal player position), the mini will appear to float above the display, and the mini will not appear to be centered on the grid. If you then move the mini so it's centered on the grid, and move to the other side of the display, you'll notice that the mini is no longer centered. Even worse, it is now more off-center than it was before you tried to center it.</p> <p>Due to parallax, it is impossible to have a situation where the mini appears to be centered on the grid from every position. The further the mini is above the display (due to the protective sheet and possibly air between the sheet and display), the more pronounced this effect is.</p>"},{"location":"DisplayConsiderations/selection/","title":"Display Selection","text":"<p>There are multiple factors that go into display selection. </p> <ul> <li>Size: Bigger isn't always better, see here.</li> <li>Viewing Angle: One of the most important factor for in-person gaming is the viewing angle, since you and your players will be sitting around the display, viewing it from a large angle. The best thing to do is to go to a local electronics store and take a look at the displays in person. Walk around them and view them from all angles, and see how the image changes and how different TVs perform, especially from up-close.</li> <li>Display Type: Here is a comparison between different display types, but it should be noted that there will be a lot of variance between different displays of the same type. For example, on paper, a TN display should not be great for this application due to their bad viewing angles, however, some higher quality TN displays can offer great viewing angles.</li> <li>Touch: If you want to use the touch functionality, you'll need a display with built-in touch support, or something like an infrared touch frame. Be sure to read about it here, also read up on the differences between touch and the Material Plane hardware here. It is (currently) not possible to combine touch with the Material Plane hardware. If this ever changes, this will only work for capacitive screens (due to how IR touch frames work).</li> </ul> <p>Also consider how you want to mount or enclose and protect the display.</p>"},{"location":"DisplayConsiderations/size/","title":"Display Size","text":"<p>For in-person gaming, a bigger display isn't always better. Before deciding on a display size, consider the following:</p>"},{"location":"DisplayConsiderations/size/#comfort","title":"Comfort","text":"<p>For any setup, whether you use the Material Plane hardware, touch, or just minis without tracking, there is a limit to how big a display can comfortably be. The reason for this, is that at a certain size, it'll become very difficult for players to reach across the display to move minis on the opposite side of the display. If it takes too much effort to move a mini, people might get annoyed about having to move their mini or might even make in-game decisions to reduce the amount of movement they have to make.</p> <p>Before buying a display, I'd suggest doing the following: Get some tape, preferably easy to remove tape (such as electrical or painters tape), and tape down a rectangle the size of the display you're interested in, preferably on the actual table you're planning on using. Then, see how difficult it'd be for your players to move their minis around everywhere within the rectangle.</p>"},{"location":"DisplayConsiderations/size/#hardwaresize-limitations","title":"Hardware/Size Limitations","text":"<p>Consider the size of the table you want to use. The display will have to fit on (or in) the table, preferably with some room to spare so players can still place down objects (minis, dice, phones, etc) on the table.</p> <p>The Material Plane hardware also has size limitations, depending on the distance between the display and ceiling. Make sure the display isn't to big for the production or DIY hardware.</p>"},{"location":"DisplayConsiderations/size/#map-availability","title":"Map Availability","text":"<p>Some map creators design maps for specific display sizes. For example, a map that exactly fills a 42\" display with a 25mm grid. If these maps are used on a bigger display, part of the display will be unusable. While if these maps are used on a smaller display, only part of the map will be visible. Please note that the production Material Plane hardware uses 30mm bases, so a map designed for a 42\" display will fit almost perfectly on a 50\" display.</p> <p>The most common display sizes you will find maps for are 40\", 42\" and 43\", with some maps designed for 50\" displays.</p>"},{"location":"DisplayConsiderations/type/","title":"Display Type","text":""},{"location":"DisplayConsiderations/type/#lcd-displays-with-led-backlight","title":"LCD Displays with LED backlight","text":"<p>LCD displays with LED backlights are by far the most common and most budget-friendly displays. They generally make a great choice for tabletop applications. There are many differences between different LCD displays, mainly determined by their underlying display technology. The most common are TN, VA and IPS. Not all manufacturers advertise which technology is used in their display, so it might be difficult to choose one based on that, but here are some important differences between the 3:</p> <p>TN: TN are generally the lowest quality displays, with poorer colors, smaller viewing angles</p> <p>VA: VA displays can generally be regarded as the middle class, better colors and bigger viewing angles than TN displays. Contrast tends to be the best of the 3 technologies. Brightness is better than TN, but similar to IPS.</p> <p>IPS: IPS displays are in most aspects the highest quality displays. Colors and viewing angles are the best, brightness is similar to VA, but contrast is slightly worse than VA but better than TN.</p>"},{"location":"DisplayConsiderations/type/#oled-displays","title":"OLED Displays","text":"<p>Organic light-emitting diode (OLED) displays can offer great contrast ratios and very wide viewing angles. However, they can suffer from screen burn-in and image retention issues on static images (such as battle maps). They also tend to be significantly more expensive than LCD displays. Brightness is typically lower than LCD displays.</p>"},{"location":"DisplayConsiderations/type/#qled-displays","title":"QLED Displays","text":"<p>Quantum dot (QLED) displays tend to be brighter than OLED, similar to LCD displays, however, their contrast ratio is lower than OLD displays. Viewing angles are in-between LCD and OLED displays. Similar to OLED, QLED displays can suffer from screen burn-in and image retention issues on static images (such as battle maps).</p>"},{"location":"DisplayConsiderations/type/#plasma-displays","title":"Plasma Displays","text":"<p>As mentioned above, plasma displays can emit infrared noise, so should be avoided, if possible. They can have great contrast ratios and wide viewing angles. However, they can suffer from screen burn-in and image retention issues on static images (such as battle maps). They require a lot more power than modern displays, which might cause overheating issues when laying the display flat.</p>"},{"location":"DisplayConsiderations/type/#lcd-displays-with-ccfl-backlight","title":"LCD Displays with CCFL backlight","text":"<p>Similar to plasma displays, LCD displays with CCFL backlight can emit infrared noise, so should be avoided, if possible. They will also consume more power than modern displays, which can cause overheating issues. In this category fall mostly older LCD displays, since LED backlights have replaced CCFL in practically all modern TVs.</p> <p>The actual LCD technology is similar to LED displays, so the same considerations regarding display technology apply.</p>"},{"location":"DisplayConsiderations/type/#projectors","title":"Projectors","text":"<p>Projectors are a completely different type of display, with their own advantages and disadvantages. To use a projector, you will have to mount it above a table, which will probably mean that you need a short-throw projector. You will also need some surface to project onto, which could just be something like a white cloth.</p> <p>Projects will provide a great viewing angle (although this can be dependent on the projection surface), but can suffer greatly from ambient light which will reduce the brightness and contrast of the image. You will want as little light as possible, but a perfectly dark room would probably not be great for gaming. So a projector with high brightness would be desired.</p> <p>Regarding the projector techonogy (LCD or DLP), the difference tends to be minimal. LCD can deliver higher quality images but can suffer from burn-in and image retention issues, while DLP tend to offer higher contrast ratios.</p> <p>Projectors tend to emit some infrared light, but it is unlikely that this will negatively affect sensor performance, unlike some displays (like plasma displays).</p> <p>One last disadvantage of projectors is that minis and hands will cast a shadow on the projection surface, something that might be a deal-breaker for some people.</p>"},{"location":"Production/basePenConfig/","title":"Base &amp; Pen Configuration","text":"<p>Both the base and pen have some configuration options. You will need to install Material Companion.</p> <p>To read and modify the base or pen configurations, you need to place a base or pen on the dock. The base has to be in the charging slot with 3 pins. You cannot read or configure a base if the pen is connected to the dock, or vise versa!</p>"},{"location":"Production/basePenConfig/#configuration-options","title":"Configuration Options","text":"<p>Firmware This field is read-only and displays the current firmware version of the base or pen.</p> <p>Id The id of the base or pen. This can be modified, which is mostly useful if you have multiple bases or pens that happen to have the same id. The id is used to link tokens to a specific base, besides that it does not matter if multiple bases or pens share the same id.</p> <p>Touch Sensitivity (Base Only) The sensitivity of the touch sensors on the side of the base. If set too low, a touch might be difficult to detect (needing to press hard) or might be completely undetectable. If set too high, noise might trigger a false touch. This can be from, for example, electrical noise from the display or a hand that moved too close to the base.</p> <p>Timeout (Pen Only) When a pen is activated by pressing one of its buttons, it will stay active until all buttons are released and some extra time. The timeout option gives the lenght of this extra time. For example, if the timeout is set to 10 seconds, then the pen will stay active for 10 seconds after all butttons have been released.</p>"},{"location":"Production/basePenConfig/#reading-the-current-configuration","title":"Reading the Current Configuration","text":"<ol> <li>Open Material Companion and navigate to the 'Base' or 'Pen' sub-tab in the 'Material Plane' tab.</li> <li>At the top, select the correct 'Dock USB Port'. The dock should show up as 'COM## (Dock)'. If it doesn't show up, try refreshing the USB ports or try finding the correct USB port.</li> <li>Press the 'Read' button. After a few seconds the configuration fields should be filled.</li> </ol>"},{"location":"Production/basePenConfig/#writing-a-new-configuration","title":"Writing a New Configuration","text":"<ol> <li>Read the current configuration</li> <li>Make any adjustments to the configuration</li> <li>Press the 'Write' button, a popup should show giving the progress.</li> </ol>"},{"location":"Production/basePenConfig/#resetting-to-the-default-configuration","title":"Resetting to the Default Configuration","text":"<ol> <li>Read the current configuration</li> <li>Press the 'Reset' button, a popup should show giving the progress.</li> </ol>"},{"location":"Production/basePenConfig/#finding-the-correct-usb-port","title":"Finding the Correct USB Port","text":"<p>For updates over USB, you will need to find the correct USB port over which the update can take place. Some devices, such as the production sensor and dock may show up as named devices in Material Companion or the Arduino IDE, but other will not. To figure out the correct port, you can try one of these methods:</p> <p>Using Material Companion</p> <ol> <li>Open Material Companion and navigate to either the 'Sensor', 'Base' or 'Pen' sub-tab in the 'Material Plane' tab</li> <li>Make sure the device is disconnected, then press the 'refresh' button next to 'Sensor/Dock USB Port'</li> <li>Take note of which ports are currently selectable</li> <li>Connect the device, wait a few seconds, and press the 'refresh' button again</li> <li>A new port should show up, this is the port you're looking for</li> </ol> <p>Using the Arduino IDE</p> <ol> <li>Open the Arduino IDE</li> <li>Make sure the device is disconnected, navigate to 'Tools' and take note of which ports are available under 'Port: xxx'</li> <li>Connect the device, wait a few seconds, and navigate to 'Tools' again (this won't work if you stay in the 'Tools' menu while connecting the device)</li> <li>A new port should show up, this is the port you're looking for</li> </ol> <p>Using Device Manager (Windows)</p> <ol> <li>Open the start menu and search for 'Device Manager'</li> <li>Make sure the device is disconnected, navigate to 'Ports (COM &amp; LPT)' and take note of which COM ports are available</li> <li>Connect the device, wait a few seconds, and Device Manager should update and show a new COM port, this is the port you're looking for</li> </ol>"},{"location":"Production/calibration/","title":"Sensor Calibration","text":"<p>To function properly, the sensor needs to know the position of your display. To do this, a calibration procedure is required where you tell the sensor where the 4 corners of your display are.  Calibration is performed in the Sensor tab of the 'Material Plane Configuration' screen. Under the 'Calibration' section you can find 2 checkboxes. These checkboxes allow you to enable or disable the calibration and calibration offset. Switching them off will result in the sensor outputting raw position data, switching them on will result in the sensor outputting calibrated data (assuming you've performed the calibration procedure).  Below that there's a 'Calibrate' button that will start the calibration procedure.</p> <p>You should make sure the sensor is correctly configured before calibrating.</p> <p>There are 3 calibration options:</p> <ul> <li>Single-Point Calibration: Each calibration point is measured one at a time</li> <li>Multipoint Calibration: All 4 calibration points are measured at the same time</li> <li>Offset Calibration: This allows you to configure offsets from the normal calibration points, allowing you to define your own (more convenient) calibration points</li> </ul> <p>Note: Calibration must be performed using bases, you cannot calibrate with a pen. </p>"},{"location":"Production/calibration/#base-positioning-during-calibration","title":"Base Positioning During Calibration","text":"<p>When calibrating the sensor, there are 2 important things to note regarding base positioning:</p>"},{"location":"Production/calibration/#base-orientation","title":"Base Orientation","text":"<p>The orientation of the base, relative to the display, must stay constant during calibration (and normal use). For example, take the image on the right, which shows a TV inside a wooden enclosure. The base is rotated so the LED on the base is located on the top-right side. For each calibration point, the base rotation must stay the same, so for each calibration point the LED has to be located on the top-right side.</p>"},{"location":"Production/calibration/#base-location","title":"Base Location","text":"<p>Unless you use offset calibration, you will need to align the center of the base with the corner of the (active part of the) display. Take a look at the 2 bottom images on the right. In the right (incorrect) image, a base is located inside the (raised) bezel of the display while another is located on the outside corner of the whole display (the corner of the bezel). In the left image the base is correctly located, with the center of the base aligned with the corner of the display.</p>"},{"location":"Production/calibration/#single-point-calibration","title":"Single-Point Calibration","text":"<p>Using single-point calibration you calibrate each corner one at a time.</p> <p></p> <ol> <li>Make sure Foundry is running full-screen (F11).</li> <li>Select 'Single-Point Calibration'.</li> <li>After pressing the 'Calibrate' button, a popup window will appear with a table for the 4 corners of your display.</li> <li>Activate a base by touching one of the sides of the base and move it to one of the corners of your display, the coordinates should show up in grey for point 0. Make sure the center of the base aligns with the corner of your display, see here.</li> <li>Release the base and wait a few seconds or press the 'Next' button to move to the next point. The calibration point is now locked in and its coordinates should turn black.</li> <li>Repeat this process for all 4 corners, you can do the corners in any order.</li> <li>After the 4th corner the calibration procedure is completed. Either close the popup manually or wait 5 seconds for the popup to close automatically.</li> <li>Exit the 'Material Plane Configuration' screen and try to move a token. If the procedure went correctly the token will stay directly underneath the base. Move it across the entire display to make sure the calibration is correct everywhere.</li> <li>If the token does not stay directly underneath the base take note of how accurate the calibration should be.</li> </ol>"},{"location":"Production/calibration/#multipoint-calibration","title":"Multipoint Calibration","text":"<p>Using multipoint calibration you calibrate all four corners of your display at the same time. To do this you must use 4 bases or other infrared sources and have them activated at the same time. This can be done  using the production bases, or by  mounting 4 infrared LEDs close to the display and using offset calibration.</p> <p>The easiest way to do this is to put the bases in 'always-on' mode: Touch the side of the base very short, wait for the red LED to switch off, touch the side of the base again. Repeat this 5 times and the red LED will start blinking.</p> <p></p> <ol> <li>Make sure Foundry is running full-screen (F11).</li> <li>Select 'Multipoint Calibration'.</li> <li>After pressing the 'Calibrate' button, a popup window will appear with a table for the 4 corners of your display.</li> <li>Switch on the infrared LEDs or move 4 bases into each corner of your display, making sure the center of the bases aligns with the corners of your display, see here. The coordinates of the should show up in the table.</li> <li>When you're happy, press 'Calibrate', and the calibration procedure is done.</li> <li>Exit the 'Material Plane Configuration' screen and try to move a token. If the procedure went correctly the token will stay directly underneath the base. Move it across the entire display to make sure the calibration is correct everywhere.</li> <li>If the token does not stay directly underneath the base take note of how accurate the calibration should be.</li> </ol>"},{"location":"Production/calibration/#offset-calibration","title":"Offset Calibration","text":"<p>With the previous calibration methods you had to align the center of the base exactly with the corners of your display. Using offset calibration you can choose different points to calibrate to. What offset calibration essentially does is defining the offset of the calibration points from the corner of the display. As long as the position of these offset calibration points don't move with respect to the display, they should always give the same calibration results.</p> <p>For example, as shown in the image on the right, your display has a raised bezel. Using offset calibration you can move the base into the corner created by the bezel and use that as the calibration point. This allows for a fast and easy to locate calibration point.</p> <p>Another option, also shown in the image, is to embed 4 infrared LEDs into the display enclosure or gaming table. In this case, all you would need to do to calibrate is starting the multipoint calibration and switching on the LEDs.</p> <ol> <li>Calibrate using 'Single-Point' or 'Multipoint' calibration, but instead of placing bases in the corners of your display, you use your self-defined calibration points (for example the base inside the raised bezel or the embedded infrared LEDs).</li> <li>Select 'Offset' calibration, and follow the exact procedure for 'Single-Point' calibration. This time you do need to place the bases on the corners of your display. Make sure the center of the base aligns with the corner of your display, see here.</li> </ol> <p>Once you have performed these steps, whenever you need to recalibrate you only need to perform step 1 using your self-defined calibration points.</p>"},{"location":"Production/calibration/#calibration-accuracy","title":"Calibration Accuracy","text":"<p>Getting a perfect calibration can be difficult, because aliging the center of the base with the corner of the display can, depending on the geometry of your display, be difficult. There might also be other (scaling) issues.  If the sensor has the lens installed a slight fisheye distortion is also to be expected.</p> <p>During normal use some inaccuracy isn't a problem, because tokens will snap to the grid. This means that the inaccuracy should be small enough that if a base is located exactly on the grid, the token is at least 50% inside the intended grid space.</p> <p>An inaccuracy smaller than 1/3 of a grid space in either x or y direction can probably be ignored. To make sure no problems arise, move a token across the entire display to check that the inaccuracy falls below that everywhere.</p> <p>If you notice that the inaccuracy is constant across the entire display, you could introduce an x or y offset in the transform section of the sensor settings. If the inaccuracy does not stay constant, you could try changing the x or y scale, also in the transform section of the sensor settings.</p>"},{"location":"Production/gettingStarted/","title":"Getting Started","text":"<p>The Material Plane production hardware is one of the hardware options for Material Plane to track minis on a display. It comes pre-assembled and can be bought from the Material Foundry webshop.</p> <p>The table of contents on the left is ordered in a way that you should start from the top and move your way down, but below you will find a short description of the steps you will need to take to get started:</p> <ol> <li>Make sure you know what the requirements are for using Material Plane</li> <li>Figure out what hardware you need</li> <li>Order the hardware</li> <li>Update the sensor firmware</li> <li>Figure out the optimal sensor mounting method and position</li> <li>Connect the sensor to your WiFi network</li> <li>Configure the sensor</li> <li>Install and configure the VTT module</li> <li>Calibrate the sensor</li> <li>Learn how to properly use the module</li> </ol> <p>Please check the troubleshooting page if you run into any issues.</p> <p>If you encounter any bugs or wish to request new features, please contact me on Discord (@materialfoundry/@Cris) or post an issue on GitHub. Consider joining the Material Foundry Discord Server.</p>"},{"location":"Production/requirements/","title":"Requirements","text":"<p>The requirements for using Material Plane using the production hardware can be divided into 4 parts:</p> <ul> <li>Material Plane hardware</li> <li>Virtual Tabletop</li> <li>Horizontally mounted display</li> <li>Suitable environment</li> </ul>"},{"location":"Production/requirements/#material-plane-hardware","title":"Material Plane Hardware","text":"<p>For the production hardware, the most important requirements are the actual hardware. The following items are required:</p> <ul> <li>Sensor</li> <li>Dock</li> <li>One Base for each mini you want to track</li> <li>wide-angle lens, depending on setup (see below)</li> </ul> <p>Various kits are available that contain at least the required components for up to 8 players.</p> <p>Regarding the bases: you will have to determine how many you think you will need. You will want to have at least one for each player character, and maybe some extra for other minis that have to be tracked, such as familiars or important NPCs. You can track monsters, if you want to, but for most people this is not necessary (since you probably don't want to share the monters' vision with the players) and a lot of people choose to just place the minis on the display without tracking them.</p> <p>Because the sensor is essentially a camera, you will need to take the distance between the sensor and your display, and the size of the display into account. If the display is too large, the sensor might not be able to see the entire display. It is possible to install a wide-angle lens into the sensor (or have it pre-installed) to allow you to use bigger displays, or to move the sensor closer to the display. Please read the Display-Sensor Distance section carefully.</p> <p>Optional hardware:</p> <ul> <li>Pen to add more interaction options, such as opening doors or panning the map</li> <li>Base adapters to allow the tracking of bigger minis</li> <li>Base or sensor charging dock expansions so you can charge more bases at the same time, or charge the sensor on the dock</li> <li>Square or Round magnets to easily mount minis to bases</li> </ul>"},{"location":"Production/requirements/#virtual-tabletop","title":"Virtual Tabletop","text":"<p>Material Plane runs on a virtual tabletop. Currently only Foundry VTT is supported.</p> <p>To use Foundry VTT, you need to purchase a license, and you need some way to host the Foundry server. For information on how to setup a Foundry VTT server, please refer to the Foundry VTT Knowledge Base. Alternatively, you could using a hosting service such as The Forge, Molten Hosting or Foundry Server.</p>"},{"location":"Production/requirements/#horizontally-mounted-display","title":"Horizontally Mounted Display","text":"<p>You'll need a TV, or some other display (monitor/projector) onto which the virtual tabletop is displayed.</p> <p>For the Material Plane hardware (both DIY and production) you do have to consider the size of your TV, due to the limited detection angle of the sensor, see Display-Sensor Distance section below. Virtually any display will work, however, some older models (especially plasma and LCD displays with CCFL backlight) can emit infrared noise which might interfere with the sensor. To remedy this, you could add infrared-blocking foil to the display. Modern displays should not cause any issues.</p>"},{"location":"Production/requirements/#suitable-environment","title":"Suitable Environment","text":"<p>Because of the way the sensor works, any infrared light around the TV can be interpreted as a base. For this reason, ambient infrared radiation and reflection should be avoided.</p> <ul> <li>Sunlight</li> <li>Infrared Emitting Lights</li> <li>VR Headsets</li> <li>Wii Sensor Bar</li> <li>Remote Controls</li> </ul>"},{"location":"Production/requirements/#display-sensor-distance","title":"Display-Sensor Distance","text":"<p>In order for the sensor to detect minis across the whole display, the sensor needs to be located at a minimum distance above the display. The minimum distance depends on the size of the display, where a bigger display requires a larger distance.</p> <p>A wide-angle lens can be installed in the production sensor when your display is too big and/or the distance to the ceiling is too small. The lens can either come pre-installed by selecting the option in the sensor product page, or it can be bought separately.</p> <p>The table below gives the minimum distance between the display and sensor. Measure the distance between the top of the display and the desired sensor mounting location (ceiling, microphone stand, etc). </p> <p>Look at the row with your display size:</p> <ul> <li>If the measured distance is smaller than the value in the 'With Lens' column, your setup is incompatible with Material Plane. </li> <li>If the distance is larger than the value in the 'With Lens' column but larger than the 'Without Lens' column, your setup requires the wide-angle lens. </li> <li>If the distance is larger than the value in the 'Without Lens' column, the lens is not required, but can still be used to decrease the distance between sensor and display.</li> </ul> <p>Placing the sensor too far away from the display will result in reduced accuracy and potentially more jittery movement. For optimal results you should place the sensor as close to the minimum distance as possible (with some wiggle room for alignment). If you do not need the wide-angle lens, it's better to not have it installed.</p> <p>Please note that these are just approximate values, assuming a 16:9 aspect ratio display and perfect sensor positioning while ignoring any manufacturing tolerances. Try to err on the safe side by subtracting a few cm/inches from the measured distance between display and sensor.</p> Display Size Production (No Lens) Production (Lens) 32\" 109cm/43\" 88cm/35\" 40\" 134cm/53\" 108cm/43\" 43\" 144cm/57\" 116cm/46\" 50\" 166cm/66\" 134cm/53\" 55\" 182cm/72\" 146cm/57\" 60\" 198cm/78\" 159cm/63\" 65\" 214cm/85\" 172cm/68\" 70\" 230cm/91\" 185cm/73\" 75\" 246cm/97\" 198cm/78\" 80\" 278cm/110\" 223cm/88\""},{"location":"Production/troubleshooting/","title":"Troubleshooting","text":""},{"location":"Production/troubleshooting/#how-to-use","title":"How to use","text":"<p>Below you will find multiple tables covering different topics related to Material Plane. For easy navigation, each table can be found in the table of contents on the left. Pick the table that best corresponds with your issue, if you cannot find your issue there, make sure it's not located somewhere else. If your issue is nowhere to be found, or you found a solution that isn't mentioned here, please contact me.</p> <p>Issues can have multiple causes or multiple solutions. If you find a row that does not mention an issue, it relates to the issue in the row above it. Similarly, if you find a row that does not mention a possible cause, it relates to the issue and possible cause of the row above it.</p>"},{"location":"Production/troubleshooting/#sensor","title":"Sensor","text":"Issue Possible cause Possible solution More info Sensor can't detect base/pen Sensor sensitivity set incorrectly Properly configure the sensor link Sensor can't detect base/pen at edge of display Sensor sensitivity set incorrectly Properly configure the sensor link Sensor too close to the display Properly configure the sensor link Sensor detects a lot of noise Minimum brightness set too low Increase minimum brightness link Too much infrared noise in room Switch all infrared sources off, such as: -Wii sensor bar-VR stations/receivers Prevent direct sunlight on the sensor/display/table Make sure there are no lights shining/reflecting directly into the sensor Sensor can't detect complete display Sensor too close to the display Move sensor further back link Install a wide-angle lens link Sensor won't charge Sensor is not getting (enough) power Connect USB cable to power adapter Try a different power adapter Broken cable Replace cable Sensor can't connect to WiFi Wrong credentials Enter correct credentials No 2.4GHz WiFi available Make sure there's 2.4GHz WiFi available Router too far away Move router or sensor closer, or get a WiFi extender Detected points move in wrong direction Mirroring and/or rotation not configured properly Properly configure mirroring and/or rotation link Incorrect battery readings Battery has been replaced Reset battery configuration link Bug Reset battery configuration link"},{"location":"Production/troubleshooting/#base","title":"Base","text":"Issue Possible cause Possible solution More info Base won't update Both the pen and base are connected to the dock Remove one of them link Faulty USB-C cable or USB port Try a different cable or USB port Incorrect or no USB drivers installed Install the drivers link Base won't charge Dock is not getting power Apply power to the dock Dock is getting insufficient power Try a different power adapter that can supply enough power link Too many dock expansions stacked Try removing dock expansions link Base not seated correctly Try reseating it link Base won't detect touch Base switched off Switch base on link Touch sensitivity set too low Increase touch sensitivity link Wrong (pen?) firmware installed Install the correct firmware link Base won't go into standby (LED always on) Base is in 'Always On Mode' Switch base back to 'Normal' mode link Touch sensitivity set too high Decrease touch sensitivity link Base becomes active when placed on display Touch sensitivity set too high Decrease touch sensitivity link"},{"location":"Production/troubleshooting/#pen","title":"Pen","text":"Issue Possible cause Possible solution More info Pen won't update Both the pen and base are connected to the dock Remove one of them link Faulty USB-C cable or USB port Try a different cable or USB port Incorrect or no USB drivers installed Install the drivers link Pen/ won't charge Dock is not getting power Apply power to the dock Dock is getting insufficient power Try a different power adapter that can supply enough power link Too many dock expansions stacked Try removing dock expansions link Pen not seated correctly Try reseating it link"},{"location":"Production/troubleshooting/#calibration","title":"Calibration","text":"Issue Possible cause Possible solution More info Can't perform/complete calibration Active user not configured correctly Configure active user link Active user not connected to Foundry Connect active user Sensor not connected See above Sensor sensitivity not set correctly Configure sensor link Base not enabled Switch on base Sensor can't see entire display See above Tokens don't stay directly below base No calibration performed Perform calibration link Calibration disabled Enable calibration link Calibration not done correctly Perform calibration, make sure you check Base Orientation link Sensor offset and/or scaling set incorrectly Correctly configure offset and/or scaling link Detected points move in wrong direction Mirroring and/or rotation not configured properly Properly configure mirroring and/or rotation link"},{"location":"Production/troubleshooting/#foundry-vtt","title":"Foundry VTT","text":"Issue Possible cause Possible solution More info Can't see module in Foundry's module page No internet connection Make sure you are connected to the internet Foundry server down Wait until the server is up again Incompatible Foundry version Upgrade/downgrade to a compatible version Bug in the module Report it to me Bug in Foundry Report it to the Foundry team Can't install module Bug in the module Report it to me Bug in Foundry Report it to the Foundry team Can't update module No internet connection Make sure you are connected to the internet Incompatible Foundry version Upgrade/downgrade to a compatible version Bug in the module Report it to me Bug in Foundry Report it to the Foundry team Sensor won't connect to module Sensor not connected to WiFi Connect sensor to WiFi link Incorrect 'Connection Mode' selected Select correct mode link Incorrect 'Sensor Module IP Address' configured Configure correct address link Foundry server is secured Connect through Material Companion link Tokens don't move Sensor is not connected to WiFi Connect sensor to WiFi link Sensor is not connected to module Connect sensor to module link Sensor is not correctly calibrated Perform calibration link Sensor mirroring/rotation not configured correctly Configure mirroring and/or rotation link Sensor sensitivity is not set correctly Configure sensor link Token is not owned by display user Make display user owner of token link Enable 'Non-Owned Movement' link Wrong tokens are being moved Sensor not correctly calibrated Perform calibration link Sensor mirroring/rotation not configured correctly Configure mirroring and/or rotation link Tokens don't stay directly below base Sensor not configured properly Configure sensor link Tokens are not dropped after releasing base Module is configured to not drop tokens Enable 'Delect Token After Drop' link Tokens can move through walls This is a known issue that has been hard to solve Try to avoid having walls through the middle of a grid space Detected points move in wrong direction Mirroring and/or rotation not configured properly Properly configure mirroring and/or rotation link"},{"location":"Production/Foundry/foundryConfig/","title":"Module Configuration","text":"<p>You can access the module configuration by opening the 'Game Settings' sidebar tab (on the right of the screen, cog icon), and clicking the 'Material Plane Configuration' button.</p> <p></p> <p>The configuration consists of multiple tabs:</p>"},{"location":"Production/Foundry/foundryConfig/#general","title":"General","text":"<p>This tab is used for general settings for the module.</p> <ul> <li>Active User: Sets the active user for the module. This user will be the one displayed on the display.</li> <li> <p>Device: Sets the kind of device that is used for token tracking, either the 'Material Plane Sensor' or a 'Touch Screen'</p> </li> <li> <p>Low Battery Notifications: Will pop up notifications if the battery of the sensor, base or pen is low</p> </li> <li> <p>Hide Display Elements: Will hide all display elements (sidebar, buttons, scenes, etc). This can be toggles using the 'Ctrl' key</p> </li> <li>Block Interactions: Will block canvas interactions if the Material Plane Configuration window is open. This will, for example, prevent tokens from being moved while adjusting sensor settings</li> </ul>"},{"location":"Production/Foundry/foundryConfig/#control","title":"Control","text":"<p>This tab is used for settings related to controlling tokens.</p> <ul> <li> <p>Movement Method: Material Plane offers 3 different movement methods:</p> <ul> <li>Live: When a token is being moved, its vision is updated constantly</li> <li>Foundry Default: When a token is being moved, its vision is only updated after the token is dropped/released</li> <li>Step-By-Step: When a token is being moved, it will update its position and vision every time it is moved onto a new grid space</li> </ul> </li> <li> <p>Base Orientation: (Only relevant for base adapters or bases bigger than 1x1) Set the orientation of the bases, relative to the display. This allows the module to compensate for the center location of bigger tokens.</p> </li> <li> <p>Deselect Token After Drop: Will deselect the token after it has been dropped/released</p> </li> <li>Draw Movement Marker: Will draw a square on the grid to indicate where the token will end up if dropped/released. This marker will be green if this grid space is allowed, or it will turn red if the token cannot move there (for example, if it is blocked by a wall)</li> <li>Non-Owned Movement: Allows non-owned tokens to be moved. Vision of non-owned tokens will not be shown</li> <li>Token Collision Prevention: Whenever a token is dropped/released onto a grid space that is already occupied, the module will attempt to move the token to the nearest empty grid space along its movement path</li> <li>Ruler Mode: If enabled, the module will draw a ruler from the token's movement starting position to its current position. 4 modes are available:<ul> <li>Disabled: Disable the ruler</li> <li>Straight Line: Draws a straight ruler from the token's starting position to its current position</li> <li>Follow Movement: Draws a ruler that (approximately) follows the token's path</li> <li>Pathfinding: Finds the shortest distance between the token's starting position and its current position. Requires routinglib to be installed and enabled</li> </ul> </li> <li>Pathfinding Distance: ('Pathfinding' ruler mode only) Pathfinding is enabled for the last ruler segments to distances up to this value (in grid spaces). Segments at further distances will be locked. This prevents the pathfinding from always finding the shortest path, no matter how the token was previously moved. Set to 0 to disable.</li> <li>Clear Ruler: Sets when to clear the drawn ruler:<ul> <li>On Token Drop: Clears the ruler when the token is dropped/released</li> <li>On New Movement: Ruler will stay visible after dropping a token. Clears the ruler when new movement is initiated</li> </ul> </li> </ul>"},{"location":"Production/Foundry/foundryConfig/#connection","title":"Connection","text":"<p> This tab allows you to configure how the sensor will connect to Foundry.</p> <p>Depending on your setup, you will either connect the sensor and Foundry directly, or through Material Companion. Please refer to the Sensor Configuration page for more info on the connection methods and why you would choose one or the other.</p> <ul> <li>Connection Mode: Sets how Foundry will try to connect to the sensor:<ul> <li>Connect Directly to the Sensor: Foundry will attempt to connect directly to the sensor</li> <li>Connect Through Material Companion: Foundry will attempt to connect to Material Companion, which will then attempt to connect to the sensor</li> <li>Don't Connect: Foundry will not attempt to connect to the sensor</li> </ul> </li> <li>Sensor Module IP Address: The address of the sensor. Find out the address here</li> <li>Material Companion IP Address: The IP address of Material Companion. Find out the IP address here</li> <li>Maximum Connection Attempt: Foundry will attempt to connect to either the sensor or Material Companion for this many times. After that it will stop trying, until it is refreshed</li> </ul>"},{"location":"Production/Foundry/foundryConfig/#sensor","title":"Sensor","text":"<p>This tab is used to configure the sensor settings.</p>"},{"location":"Production/Foundry/foundryConfig/#base-setup","title":"Base Setup","text":"<p> Each production base sends out a unique ID when it is active. This ID allows Foundry to know exactly which base was moved, and can therefore be used to link a base to a specific token or actor. </p> <p>At the top, you'll find the data of the most recently moved base and selected token. Activating a different base, or selecting a different token will update this data. At the bottom, you can configure the linking of tokens or actors to a base.</p> <p>You can link a base to a specific token on a specific scene, or to a specific actor (which will be active for all scenes). If a base is linked to a token or actor, but that token or actor is not on the current scene, the base will act like a normal unlinked base.</p> <p>By pressing the '+' button, you can add a new rule. Each rule has the following settings:</p> <ul> <li>Base Id: The Id of the base that you want to link</li> <li>Token Name: The name of the token that you want to link (only required if 'Link Actor' is not enabled)</li> <li>Token Scene: The scene that you want this link to be active in (only required if 'Link Actor' is not enabled)</li> <li>Actor Name: The name of the actor that you want to link (only required if 'Link Actor' is enabled)</li> <li>Link (Actor): Enabling this will link the actor, instead of the token. This makes the rule active for all scenes</li> <li>ID: Pressing this button will take the most recently detected base Id, and fill this in</li> <li>Data: Pressing this button will take the token data of the most recent selected token, and fill this in</li> <li>Delete: Delete the rule</li> </ul> <p>Basic linking will follow these steps:</p> <ol> <li>Activate the desired base</li> <li>Select the desired token</li> <li>Press the '+' button to add a new rule</li> <li>Press the 'ID' and 'Data' buttons to fill in the base id and token data</li> <li>(Optional) enable 'Link Actor'</li> </ol> <p>You can also manually enter all the data.</p>"},{"location":"Production/Foundry/foundryConfig/#pen-setup","title":"Pen Setup","text":"<p> The 'Pen Setup' tab allows you to configure some settings related to the pen.</p> <p>The top part of this tab has 2 settings:</p> <ul> <li>Cursor Size: Sets the cursor size of the pen</li> <li>Pen Menu Size: Sets the size of the pen menu</li> </ul> <p>The bottom part of this tab can be used to assing macros to pen buttons by configuring rules. For info on how to execute these macros, please refer to this page.</p> <p>By pressing the '+' button, you can add a new rule. Each rule has the following settings:</p> <ul> <li>M: The macro group to apply this rule to</li> <li>Pen Id: The pen id to apply this rule to, or 'any' if no id has been entered</li> <li>Btn: The button to press to call the macro</li> <li>Mode: The press mode to call the macro<ul> <li>Press: Will call the macro if the button is pressed</li> <li>Hold: Will call the macro continuously while the button is held</li> <li>Release: Will call the macro if the button is released</li> </ul> </li> <li>Macro: The macro to call</li> <li>Arguments: (Optional) macro arguments to use</li> <li>ID: Copy the id of the last pen that has been detected</li> <li>Delete: Delete the rule</li> </ul> <p>Be careful with assigning macros to the C button, since this button will open the pen menu.</p>"},{"location":"Production/Foundry/foundryConfig/#downloads","title":"Downloads","text":"<p> In the 'Downloads' tab you can download the various firmwares for the Material Plane hardware, and Material Companion.</p> <p>For each component, you can see the current version, the minimum version (that works with this version of the module), and the latest version.</p> <p>Select the desired 'variant' (if applicable) and press the 'Download' button to download the file.</p>"},{"location":"Production/Foundry/foundryConnection/","title":"Connecting to the Sensor","text":"<p>It is necessary to establish a connection between the sensor and your Foundry client.</p> <p>In the very least, the Foundry client that is displayed on the shared display must connect to the sensor. Optionally, the gamemaster's client can also connect to the sensor. Doing this gives the gamemaster access to the sensor configuration, which might make configuration easier.</p> <p>You will need to configure the connection for each client separately, and you will need to make sure that the display client is set as the 'Active User' in the Material Plane Configuration.</p> <p>The connection between the Foundry client and sensor can be established over WiFi, or through the USB port (currently not functional).</p>"},{"location":"Production/Foundry/foundryConnection/#wifi-connection-to-foundry","title":"WiFi Connection to Foundry","text":"<p>Before we continue, it is necessary to properly establish the difference between the Foundry server and any clients that connect to it, and the difference between secured and unsecured servers.</p>"},{"location":"Production/Foundry/foundryConnection/#client-vs-server","title":"Client vs Server","text":"<p>Whenever you or your players use Foundry, there will be a single server. This server can take one of multiple forms:</p> <ul> <li>Part of the Foundry application, this is always the case if one user is running the Foundry application.</li> <li>A local server, for example, a computer in your office that runs a dedicated Foundry server.</li> <li>A remote server, for example, using the Forge, Molten Hosting, or another service that provides servers.</li> </ul> <p>Anyone accessing Foundry, is doing so through a client. There's basically only 2 different client forms:</p> <ul> <li>Part of the Foundry application (the application is both a server and a client).</li> <li>Through a browser</li> </ul> <p>Material Plane never talks directly to your Foundry server, it only connects to one or more clients. For this reason, it does not matter how or where the server is hosted.</p>"},{"location":"Production/Foundry/foundryConnection/#secured-vs-unsecured-servers","title":"Secured vs Unsecured Servers","text":"<p>Most websites you visit on the internet are secured using SSL certificates, which allows safe, encrypted communication. Whether or not a website or server is secured can be identified by the lock to the left of your browsers navigation bar. Most remote Foundry servers (such as servers hosted on the Forge or Molten Hosting) are secured. Local Foundry servers are, by default, not secured. If yours is, you probably know this already, because you've had to configure it yourself.</p> <p>For local gaming (so both the server and clients on your home network), there is no reason to secure the server, and to make connecting to the sensor easy, I would recommend that you do not secure it.</p> <p>The reason this is important, is that the sensor cannot currently provide a secured connection. If your server is secured, the sensor is therefore not allowed (by your browser) to connect to the Foundry client. The result of this is that you will need to connect to the sensor through Material Companion, which can bridge this gap between the sensor and Foundry client.</p>"},{"location":"Production/Foundry/foundryConnection/#connection-options","title":"Connection options","text":"<p>When connecting the sensor to the VTT over WiFi, you have 2 options:</p> <ul> <li>Direct Connection: The sensor connects directly to the VTT.</li> <li>Through Material Companion: The sensor connects to Material Companion, which then connects to the VTT.</li> </ul> <p>The direct connection is preferable, but not always possible. For example, if your Foundry server is secured (see above). This is where Material Companion comes into play: it connects to the client from the computer, which is allowed for secured servers. Material Companion can then connect to the sensor and pass all the data through.</p>"},{"location":"Production/Foundry/foundryConnection/#direct-connection","title":"Direct Connection","text":"<p>It is assumed that your sensor is already connected to your WiFi network.</p> <ol> <li>Make sure the sensor is switched on.</li> <li>Open the Material Plane Configuration.</li> <li>Head over to the 'Connection' tab. </li> <li>Set the 'Connection Mode' to 'Connect Directly to the Sensor'.</li> <li>In the 'Sensor Module IP Address', fill in the sensor address/IP and port.      By default, this is 'materialsensor.local:3000'. If this doesn't work, try figuring out the correct sensor address. </li> <li>Close the configuration screen, the client should refresh, if not, perform a manual refresh (press F5).</li> <li>If all goes well, you should see the 'Connected to sensor' popup message in Foundry. It can take a few seconds for this to appear.</li> </ol> <p></p>"},{"location":"Production/Foundry/foundryConnection/#connection-through-material-companion","title":"Connection Through Material Companion","text":"<p>It is assumed that your sensor is already connected to your WiFi network.</p> <ol> <li>Start Material Companion.</li> <li>Open the Material Plane Configuration.</li> <li>Gead over to the 'Connection' tab.</li> <li>Set the 'Connection Mode' to 'Connect Through Material Companion'.</li> <li>In the 'Material Companion IP Address', fill in the Material Companion IP and port. By default, this is 'localhost:3001'.</li> <li>Close the configuration screen, the client should refresh, if not, perform a manual refresh (press F5).</li> <li>If all goes well, you should see the 'Connected to Material Companion' popup message in Foundry. It can take a few seconds for this to appear. </li> <li>In Material Companion, head over to the 'Material Plane' tab.</li> <li>You should see a green tick next to 'Material Plane Connected\".</li> <li>If the 'Material Plane Sensor Connected' tick is green, the sensor is already connected and you are done.</li> <li>Otherwise, in the 'Sensor Address', fill in the sensor address/IP and port.      By default, this is 'materialsensor.local:3000'. If this doesn't work, try figuring out the correct sensor address.</li> <li>Press the 'Connect' button and wait a few seconds, hopefully the 'Material Plane Sensor Connected' tick turns green.</li> </ol> <p>There are 3 different connection events which will decide when Material Companion will attempt to connect to the sensor:</p> <ul> <li>When module is connected: Material Companion will attempt to connect to the sensor when the module connects to Material Companion.</li> <li>When Material Companion starts: Material Companion will attempt to connect to the sensor when it starts, even if the module is not connected, or if Foundry is not running.</li> <li>Manually: You have to press the 'Connect'/'Disconnect' button to have Material Companion either connect or disconnect.</li> </ul>"},{"location":"Production/Foundry/foundryConnection/#usb-connection-to-foundry","title":"USB Connection to Foundry","text":"<p>Currently unsupported.</p>"},{"location":"Production/Foundry/foundryInstall/","title":"Installing the Module","text":""},{"location":"Production/Foundry/foundryInstall/#installing-the-module","title":"Installing the Module","text":"<p>To use Material Plane, you must install the module. There are several ways to do this:</p>  Please note that you will only need to install the module using one of the following methods (preferably the built-in module browser).  <p>Option 1: Built-In Module Browser The easiest way to install modules is using the built-in module browser.</p> <ol> <li>Start Foundry VTT and make sure you're in the 'Setup' screen</li> <li>Navigate to the 'Add-on Modules' tab</li> <li> <p>Press the 'Install Module' button</p> <p></p> </li> <li> <p>Search for 'Material Plane' in the search bar at the top</p> </li> <li> <p>Press the 'Install' button</p> <p></p> </li> </ol> <p>Option 2: Manifest URL You can use the module's manifest URL to install the module. The main reason for this is to install a specific version of the module.</p> <p>You can find the manifest URL for all available versions here. Choose the version you want, and right-click 'Manifest URL' to copy the URL.</p> <p>Alternatively, you could use this manifest URL which always points to the latest release: <code>https://github.com/MaterialFoundry/MaterialPlane_Foundry/releases/latest/download/module.json</code></p> <ol> <li>Start Foundry VTT and make sure you're in the 'Setup' screen</li> <li>Navigate to the 'Add-on Modules' tab</li> <li> <p>Press the 'Install Module' button</p> <p></p> </li> <li> <p>At the bottom you can find the 'Manifest URL' field, copy the manifest URL into this field and press 'Install'</p> <p></p> </li> </ol> <p>Option 3: Manual The last option is a manual installation</p> <ol> <li>Download the 'module.zip' file from GitHub</li> <li>Extract this file into the 'User Data Path' of your Foundry installation</li> <li>(Re)start Foundry VTT</li> </ol>"},{"location":"Production/Foundry/foundryInstall/#enabling-the-module","title":"Enabling the Module","text":"<p>After installing the module, it must be enabled for each world in which you want to use the module:</p> <ol> <li>Start Foundry VTT and the world you want to use it in</li> <li>Open the 'Game Settings' sidebar tab (on the right of the screen, cogs icon)</li> <li> <p>Select 'Manage Modules'</p> <p></p> </li> <li> <p>Search for 'Material Plane' and tick the box to the left of it</p> <p></p> </li> <li> <p>Press 'Save Module Settings'</p> </li> </ol>"},{"location":"Production/Foundry/foundryInstall/#updating-the-module","title":"Updating the Module","text":"<p>Modules in Foundry do not automatically update. You will have to check regularly if an update is available. Within Foundry you can either update all modules, or a single module:</p> <ol> <li>Start Foundry VTT and make sure you're in the 'Setup' screen</li> <li>Navigate to the 'Add-on Modules' tab</li> <li> <p>Either:</p> <ul> <li>Click 'Update All' to update all modules</li> </ul> <p></p> <ul> <li>Click the update button for the module you want to update</li> </ul> <p></p> </li> </ol>"},{"location":"Production/Foundry/foundryInstall/#uninstalling-the-module","title":"Uninstalling the Module","text":"<p>To uninstall the module:</p> <ol> <li>Start Foundry VTT and make sure you're in the 'Setup' screen</li> <li>Navigate to the 'Add-on Modules' tab</li> <li> <p>Right-click the 'Material Plane' icon and click 'Uninstall'</p> <p></p> </li> </ol>"},{"location":"Production/Foundry/foundrySetup/","title":"Foundry Setup","text":""},{"location":"Production/Foundry/foundrySetup/#foundry-system-settings","title":"Foundry &amp; System Settings","text":"<p>For Material Plane to work, there are no special requirements with regards to the Foundry core or system settings, and the module is system agnostic.</p> <p>However, you might want to disable 'Pan to Token Speaker' in the Foundry core settings.</p>"},{"location":"Production/Foundry/foundrySetup/#user-configuration","title":"User Configuration","text":"<p>There will need to be at least 1 gamemaster user for Foundry to work, and for Material Plane to work there needs to be at least 1 player user. As the gamemaster user you can add users in the 'Game Settings' tab on the right side of the screen by pressing the 'User Management' button. Here you can create an additional user. For the display user this can be either a 'Player' or 'Trusted Player'.</p>"},{"location":"Production/Foundry/foundrySetup/#actor-permissions","title":"Actor Permissions","text":"<p>All player characters should be given 'Owner' permission for the display user. This can be configured in the 'Actors' tab on the right side of the screen. By right-clicking an actor you can select 'Configure Ownership' which opens up a popup in which you can configure which users have what ownership over that actor.</p>"},{"location":"Production/HardwareOverview/baseAdapters/","title":"Base Adapters","text":"<p> Base adapters allow bigger minis to be tracked. Normal bases slot into these adapters, allowing one of the touch sensitive sides of the base to be used to activate the base. Embedded magnets hold the base in place and allow the mini to be securely attached using square or round magnets or bigger magnetic plates. The base adapters come in 2x2, 3x3 and 4x4 sizes.</p>"},{"location":"Production/HardwareOverview/bases/","title":"Bases","text":""},{"location":"Production/HardwareOverview/bases/#overview","title":"Overview","text":"<p>The Material Plane bases are responsible for transmitting the location of a physical mini to the VTT. The base is a small block that is mounted underneath the mini that contains an infrared LED which the sensor can detect.</p> <p>The base has an infrared and red LED, the infrared LED is used for tracking while the red LED is used as a status indicator, which is hidden inside the enclosure but its light will be visible. The red LED will switch on when the base is active (being moved). At the top side the base has a power switch, and the left and right side are touch sensitive to activate the base.</p> <p>The bottom of the base has 3 pins that are used for charging and updating the firmware of the base. Additionally, the bottom of the base is covered by felt to prevent damage to your display.</p> <p>Specs:</p> <ul> <li>120mAh battery</li> <li>Charging and programming using the dock</li> <li>Infrared tracking and red indicator LEDs</li> <li>Power switch</li> <li>Felt on the bottom to prevent damage to your display</li> <li>30x30x8mm (WxLxH)</li> <li>8 gram</li> </ul>"},{"location":"Production/HardwareOverview/bases/#power-states","title":"Power States","text":"<p>The base has 3 power states:</p> <ul> <li>Off: The base will not do anything, but can be charged or programmed. The base should be in this state when not in use. </li> <li>Standby: The base is switched on, but not being touched/moved. The base should be in this state when placed on the display during gaming.</li> <li>Active: The base is switched on and being touched/moved. Both the red and infrared LED are on and the sensor is able to detect the location of the base.</li> </ul>"},{"location":"Production/HardwareOverview/bases/#charging","title":"Charging","text":"<p> Bases are charged using the dock or base charging dock expansion. Both have space for charging up to 4 bases simultaneously. Charging is possible due to the spring terminals on the dock or dock expansion, which connect to the terminals at the back of the base. To charge a base, insert it into one of the four charging slots. The correct orientation is to have the on/off switch of the base towards the top and the USB port of the dock to the left, see the image. Each charging slot has a status LED which can indicate 3 different states:</p> <ul> <li>Off: No base connected.</li> <li>Red (fading): Base charging.</li> <li>Green (static): Base charging completed.</li> </ul> <p>Charging from empty to full takes approximately 90 minutes. Charging can take longer if the power supply cannot provide enough current.</p>"},{"location":"Production/HardwareOverview/bases/#battery-life","title":"Battery Life","text":"<p>If the base is off, its power consumption is negligible. When the base has not been used for a few weeks a recharge before a game is recommended. In the standby state, the base will last for more than 24 hours on a full charge. In the active state, the base will last for approximately 2 hours. During normal gaming, a base is in the standby state the vast majority of the time, only going into the active state whenever the base is being moved. This means that the base might only be in the active state for a few minutes for every hour of gaming. Under normal gaming conditions, you can expect a base to last more than 12 hours on a full charge.</p>"},{"location":"Production/HardwareOverview/dock/","title":"Dock & Dock Expansions","text":""},{"location":"Production/HardwareOverview/dock/#overview","title":"Overview","text":"<p>The dock has 2 main functions: charging and programming the bases and pen. The dock has 4 charging slots for bases and 1 for the pen. The top-left base charging slots (with 3 spring terminals) and the pen charging port can also be used to configure and program the bases and pen. Powered is delivered through a USB-C connector. It is possible to stack dock expansions on top of the dock to allow more bases to be charged, or to allow you to charge the sensor using the dock. They are held onto the dock using magnets. You can stack multiple of these expansions on top of each other. Stacking is possible in 2 orientations (rotated by 180 degrees), by aligning the contacts of the dock with the spring terminals on the bottom of the expansion. The magnets in the dock and expansions should prevent incorrect stacking.</p> <p>Dock Specs:</p> <ul> <li>Charges up to 4 bases and 1 pen at the same time</li> <li>Program and configure bases and pens</li> <li>Stack max 4 base charging dock expansions or 2 base and 1 sensor charging dock expansions</li> <li>5VDC at max 2500mA over USB-C</li> <li>81x80x16mm (WxLxH)</li> <li>68 gram</li> </ul>"},{"location":"Production/HardwareOverview/dock/#base-charging","title":"Base Charging","text":"<p> The dock can charge 4 bases at the same time. The bases are mounted onto the dock using embedded magnets and are charged through the spring terminals. To find the correct base orientation for charging take a look at the underside of a base where you will find 3 contacts. These contacts must mate with the spring terminals on the dock. This is only possible in 1 orientation, see the image on the right. Each base has its dedicated charge indicator LED which is visible from the top and the side, and can indicate the following 3 states:</p> <ul> <li>Off: Base not mounted.</li> <li>Red (fading): Base charging.</li> <li>Green (static): Base charging completed.</li> </ul>"},{"location":"Production/HardwareOverview/dock/#pen-charging","title":"Pen Charging","text":"<p>The dock can charge 1 pen at a time. The pen is mounted onto the side of the dock using embedded magnets and is charged through the spring terminals. Due to the magnet polarity, the pen can only be mounted in 1 orientation (see the image). Do not try to force the pen to connect the dock in the wrong orientation, this can damage the pen, the dock, or both. Charging is handled inside the pen, for more information on charging, please consult the pen page.</p>"},{"location":"Production/HardwareOverview/dock/#base-charging-dock-expansion","title":"Base Charging Dock Expansion","text":"<p> Each base charging expansion allows you to charge an additional 4 bases. You should not stack more than 4 base charging expansions on a single dock, allowing you to charge a maximum of 20 bases at the same time. If you also use the sensor charging expansion, you should not stack more than 2 base charging expansions, allowing a maximum of 12 bases. Charging bases on the base charging expansion is identical to the dock.</p> <p>Base Charging Dock Expansion Specs:</p> <ul> <li>Charges up to 4 additonal bases</li> <li>80x80x20mm (WxLxH)</li> <li>82 gram</li> </ul>"},{"location":"Production/HardwareOverview/dock/#sensor-charging-dock-expanion","title":"Sensor Charging Dock Expanion","text":"<p>The sensor charging expansion allows you to charge the sensor on top of the dock. The sensor charging expansion can be stacked on top of a dock or base charging expansion. You cannot stack expansions on top of the sensor charging expansion. The sensor has 2 exposed pins on the bottom, these mate with the 2 spring terminals on the sensor charging expansion. By mounting the sensor on the expansion in such a way that the spring terminals align to the exposed pins, the sensor will start charging.</p> <p>Sensor Charging Dock Expanion:</p> <ul> <li>Charges the sensor</li> <li>80x80x20mm (WxLxH)</li> <li>65 gram</li> </ul>"},{"location":"Production/HardwareOverview/dock/#power-supply-requirements","title":"Power Supply Requirements","text":"<p>To power the dock and expansions you need a USB charger from a reputable brand. The USB charger should be able to provide approximately 500mA for each dock and each base charging expansion, and 1000mA for the sensor charging expansion. For example:</p> <ul> <li>A dock without expansions: 500mA</li> <li>A dock with a base charging expansion: 1000mA</li> <li>A dock with a base charging and sensor charging expansion: 2000mA</li> </ul>"},{"location":"Production/HardwareOverview/dock/#expansion-stacking-limitations","title":"Expansion Stacking Limitations","text":"<p>There is a limit to the amount of expansions you can stack on top of a single dock. This is determined by the charging current of all the parts that are being charged.</p> <p>It is recommended to stack a maximum of 2 base charging expansions if a sensor charging expansion is also used, for a total of 12 bases. Or a maximum of 4 base charging expansions if no sensor charging expansion is used, for a total of 20 bases.</p> <p>This is quite conservative, to make sure the fuse inside the dock isn't tripped. However, you can probably get away with stacking more base charging expansions on the dock, because it is unlikely that all bases and the sensor will draw the maximum allowed current, but this is at your own risk. If your charger cannot provide more than 2500mA, the fuse should never trip, regardless of the amount of expansions you use. This is a safe way to do this, assuming you use a good quality charger. If, in this situation, too many expansions are stacked onto the dock, the power supply voltage may drop which might prevent anything from charging.</p>"},{"location":"Production/HardwareOverview/pen/","title":"Pen","text":""},{"location":"Production/HardwareOverview/pen/#overview","title":"Overview","text":"<p> The pen is an optional accessory that can be used to expand the capabilities of a Material Plane setup. It can be used like a mouse for clicking or selecting things in the VTT, and the sensor can detect the orientation of the pen for rotating objects. The pen has many functions, such as:</p> <ul> <li>Moving or rotating tokens</li> <li>Targeting tokens</li> <li>Panning or zooming the map</li> <li>Creating drawings</li> <li>Creating templates</li> </ul> <p>The pen has 4 buttons to allow these functions to be performed. Using 2 infrared LEDs the sensor can detect the orientation of the pen for rotation purpose. The pen has a red status LED on the top and a geen/red charging LED on its side. The red LED will switch on when the pen is active, while the green/led charging LED switches on when the pen is charging.</p> <p>Specs:</p> <ul> <li>110mAh battery</li> <li>Charging and programming using the dock</li> <li>2 Infrared tracking LED, 1 red indicator LEDs and 1 red/green charge indicator LED</li> <li>4 switches</li> <li>16x105x8mm (WxLxH)</li> <li>13 gram</li> </ul>"},{"location":"Production/HardwareOverview/pen/#power-states","title":"Power States","text":"<p>The pen has 2 power states:</p> <ul> <li>Standby: The pen is not doing anything. It is always in this state unless activated, and it will automatically return to this state after activation.</li> <li>Active: One or more of the buttons on the pen is pressed to activate the pen. The red and at least one infrared LED are on and the sensor is able to detect the location of the pen. The pen will stay in this state for a configurable amount of time, after which it will return to the standby state.</li> </ul>"},{"location":"Production/HardwareOverview/pen/#charging","title":"Charging","text":"<p> The pen has to be charged on the dock. The dock has 3 spring terminals sticking out on the right side of the dock (opposite side of the USB port), these mate with 3 contacts on the pen. To charge the pen, orient the pen is such a way that the contacts can touch the spring terminals on the dock, with the side of the pen with C and D buttons pointing to the front, see the image. The pen is held in place using magnets. You should be prevented from mounting the pen incorrectly due to the magnets. Don\u2019t try to force the pen and dock together if you feel a resistance, incorrectly mounting the pen can damage the dock, pen or both.</p> <p>When mounted correctly, you can see a status LED on the pen which can indicate 3 different states:</p> <ul> <li>Off: Pen not mounted correctly.</li> <li>Red (fading): Pen charging.</li> <li>Green (static): Pen charging completed.</li> </ul> <p>Charging from empty to full takes approximately 90 minutes. Charging can take longer if the power supply cannot provide enough current.</p>"},{"location":"Production/HardwareOverview/pen/#battery-life","title":"Battery Life","text":"<p>In the standby state, the pen will last for more than 24 hours on a full charge. In the active state, the pen will last for approximately 2 hours. During normal gaming, the pen is in the standby state the vast majority of the time, only going into the active state whenever it is used. This means that the pen might only be in the active state for a few minutes for every hour of gaming. Under normal gaming conditions, you can expect the pen to last more than 12 hours on a full charge.</p>"},{"location":"Production/HardwareOverview/sensor/","title":"Sensor","text":""},{"location":"Production/HardwareOverview/sensor/#overview","title":"Overview","text":"<p>The sensor is responsible for detecting the location of bases, onto which minis are placed. The sensor has a special infrared camera that can track sources of infrared light. After calibrating the sensor, the sensor can transmit the exact location of bases to the VTT over (2.4GHz) WiFi or USB, which can then move tokens.</p> <p>The sensor has some important features on one side, see the image:</p> <ul> <li>USB-C Connector:  For charging, updating the firmware and alternative connection method.</li> <li>Power Switch: Sliding the switch towards the USB connector turns the sensor on.</li> <li>Battery LED: Battery and status indicator, see below.</li> <li>Reset Switch: Can be pressed to reset the sensor.</li> <li>Boot Switch: Can be used, in combination with the reset switch, to select the boot mode of the sensor. Only used for firmware updates, see here.</li> </ul> <p>The front of the sensor can be identified by the shiny black window. This window only transmits infrared light, allowing the sensor to detect bases. For the best performance, this window should be kept clean.</p> <p>The bottom of the sensor contains some basic information, such as the product name and model, and the input voltage and (maximum) current draw. There are 2 pins that allow the sensor to be charged on the Sensor Charging Dock Expansion. Embedded into the bottom of the sensor are 4 magnets which allow the sensor to be easily mounted onto the sensor mount or the above mentioned dock expansion. The 2 slots help with aligning the sensor properly on these 2 mounts.</p> <p>Specs</p> <ul> <li>USB 2.0 Full Speed over a USB-C connection</li> <li>2.4GHz 802.11b/g/n WiFi</li> <li>1200mAh battery</li> <li>5VDC at max 1500mA over USB-C or sensor charging dock expansion</li> <li>Programming through USB or web interface</li> <li>Power, reset and boot mode (for programming) switches</li> <li>Power and battery indicator LED</li> <li>Up to 16 simultaneous trackable bases (you can track as many bases as you want, but only up to 16 can be moved at the same time)</li> <li>Mounting on 3/8\" microphone stand or 4x35mm countersunk screw into ceiling</li> <li>44x77x18mm (WxLxH)</li> <li>61 gram without mounting hardware, 83 gram with mounting hardware</li> </ul>"},{"location":"Production/HardwareOverview/sensor/#power-states","title":"Power States","text":"<p>The sensor has 3 power states:</p> <ul> <li>Off: Power slider is switched to off, and the sensor is not charging. The sensor is completely powered down.</li> <li>Active: Power slider is switched to on. The sensor is now functioning normally and can detect bases and pens.</li> <li>Charging: Power is applied to the sensor to charge it.</li> </ul> <p>Charging The sensor is charged either using a USB-C cable, or using a sensor charging dock expansion (see below). The sensor can draw up to 1000mA to charge the battery. The battery LED on the side of the base can indicate 5 different states:</p> <ul> <li>Off: Sensor is switched off and not charging.</li> <li>Red (fading): Sensor is charging.</li> <li>Green (static): Sensor charging completed.</li> <li>Combination of red and green (static): Indicates a rough battery level, where green means 100% and red means 0%.</li> <li>Red (fast blinking): An error has occured.</li> </ul> <p>Charging from empty to full takes approximately 90 minutes. Charging can take longer if the power supply cannot provide enough current.</p>"},{"location":"Production/HardwareOverview/sensor/#battery-life","title":"Battery Life","text":"<p>Is the sensor is off, its power consumption is negligable. If it is on, the power consumption will depend on the activity. When no base or pen is detected for a while, it will go into low power mode to conserve power. You can expect around 20 hours of battery life for average gaming situations.</p>"},{"location":"Production/HardwareOverview/sensor/#mounting","title":"Mounting","text":"<p>A mounting bracket is provided with the sensor, which can be used to mount the sensor to a microphone stand or, for example, the ceiling. More information on how to mount the sensor can be found here.</p>"},{"location":"Production/SensorConfiguration/sensorConnecting/","title":"Connecting to WiFi","text":"<p>To use the Material Plane sensor, there needs to be communication between the sensor and the VTT. There are 2 ways to do this:</p> <ul> <li>WiFi: The sensor connects to your (2.4GHz) WiFi network. The VTT can connect directly to it, and you can access the webserver for configuration. Multiple VTT clients (for example, both the display and gm clients) can connect to the sensor.</li> <li>USB: The sensor connects over USB. WiFi setup is not required, but Material Companion is required for the connection. Only 1 VTT client can connect to the sensor (this should be the display client).</li> </ul> <p>Connecting over WiFi is the most convenient, but might not be possible for your situation.</p> <p>This page will only explain how to connect the sensor to a WiFi network. For connecting a VTT to the sensor, either using WiFi or USB, please check the 'VTT Configuration' section.</p>"},{"location":"Production/SensorConfiguration/sensorConnecting/#connecting-to-wifi-network","title":"Connecting to WiFi Network","text":"<p>To connect to a WiFi network, the sensor needs to know the SSID (network name) and password of the network. There are 3 ways to do this:</p>"},{"location":"Production/SensorConfiguration/sensorConnecting/#connect-to-wifi-using-material-companion","title":"Connect to WiFi Using Material Companion","text":"<p>You will need to install Material Companion.</p> <ol> <li>Connect the sensor to your computer using a USB-C cable</li> <li>Open Material Companion and navigate to the 'Sensor' sub-tab in the 'Material Plane' tab</li> <li>At the top, select the correct 'Sensor USB Port'.<ul> <li>The production sensor will show up as 'COM## (Sensor)' or 'COM## (Sensor - Update) If it doesn't show up, try refreshing the USB ports.If it shows up as 'COM## (Sensor - Update)' press the 'reset' button. After refreshing the USB ports it should show up as 'COM## (Sensor)'.</li> <li>The DIY sensor will show up as 'COM##'. There may be multiple 'COM##' ports, see here if you are unsure which one is the correct one.</li> </ul> </li> <li>In the 'Configuration' section, press the 'Read' button at the bottom and wait a few seconds. If the connection is successful all the configuration fields should be filled in.</li> <li>Press the 'Connect' button, which will open a popup.</li> <li>You can scan for nearby WiFi networks by pressing the 'Scan' button, this might take a while.</li> <li>Select the network you want the sensor to connect to, which will fill in the 'SSID' field with the SSID of the network. Alternatively, you can skip the scanning and directly fill in the SSID.</li> <li>Fill in the password of the network.</li> <li>Press 'Connect', the sensor will now restart and attempt to connect to the network.</li> </ol>"},{"location":"Production/SensorConfiguration/sensorConnecting/#connect-to-wifi-using-the-webserver","title":"Connect to WiFi Using the Webserver","text":"<p>If the sensor is not able to connect to a WiFi network, it will host its own network. By default it will be called 'materialsensor', however, if you have checked the name of the device the name might be different. </p> <ol> <li>Connect to the sensor's access point, the password is 'Material Foundry'. Wait for the connection to complete (this might take a while).</li> <li>In a browser, navigate to http://192.168.4.1.</li> <li>Once the webserver has loaded, navigate to the 'Network' tab.</li> <li>In the 'Access Points' section, you can scan for nearby WiFi networks by pressing the 'Scan' button, this might take a while.</li> <li>Select the network you want the sensor to connect to, which will fill in the 'SSID' field with the SSID of the network. Alternatively, you can skip the scanning and directly fill in the SSID.</li> <li>Fill in the password of the network.</li> <li>Press 'Connect', the sensor will now restart and attempt to connect to the network.</li> </ol>"},{"location":"Production/SensorConfiguration/sensorConnecting/#connect-to-wifi-using-usb","title":"Connect to WiFi Using USB","text":"<p>You can connect to the sensor over the USB port, and send and receive data over serial. You could use the built-in Arduino serial monitor (open the app, the serial monitor is the button at the top-righ with magnifyng lens icon) or a generic terminal emulator like YAT.</p> <p>See the table below for the correct settings:</p> Arduino Serial Monitor Generic Terminal Emulator Baud Rate 115200 115200 Termination Character Both NL &amp; CR NL &amp; CR or &lt;CR&gt;&lt;LF&gt; or \\n\\r Data Bits - 8 Parity - None Stop Bits - 1 Flow Control - None <p>If the connection is succesfull, the sensor should output continuous data, for example: <code>{\"status\":\"ping\",\"source\":\"main\"}</code> Which is transmitted every half second. You might notice a very rapid output like the following: <code>{\"status\":\"IR data\",\"detectedPoints\":1,\"id\":0,\"command\":0, ...}</code> This means that the sensor is detecting some infrared point. It would be helpful to make sure the sensor cannot see any infrared light, so either point it in another direction, or cover the front window.</p> <p>To scan for WiFi Networks, send <code>SCAN WIFI</code>, after a few seconds a list of access points should show up, similar to the image below.</p> <p>To connect to an access point, send: <code>CONNECT WIFI \"[SSID]\" \"[password]\"</code> Replace <code>[SSID]</code> and <code>[password]</code> with the actual SSID and password. Do not include the square brackets, but do include the quotation marks.</p> <p>For example, to connect to an SSID named <code>My SSID</code> with password <code>Password</code> send: <code>CONNECT WIFI \"My SSID\" \"Password\"</code></p> <p>{}</p>"},{"location":"Production/SensorConfiguration/sensorConnecting/#sensor-address","title":"Sensor Address","text":"<p>To connect the sensor to the VTT, or to access the webserver you need to know the (IP) address of the sensor. The sensor will have an IP address of the form <code>x.x.x.x</code> (for example: <code>192.168.1.10</code>), and a DNS name which is the device name with <code>.local</code> appended (for example: <code>materialsensor.local</code>).</p> <p>By default, the device name is <code>materialsensor</code>, but this can be changed in the network tab of the webserver, where you can also find the IP address.</p> <p>Another way to find the device name and IP address is using Material Companion. Read the sensor configuration as described here (follow it up until point 4) and you can find the IP address and the name in the configuration fields.</p> <p>Lastly, you can get the data using a terminal emulator. Configure the terminal emulator as described here. When you send <code>STATUS</code>, a long list of settings is printed. Under the 'WiFi' section, look for 'IP Address' and 'Device Name'.</p>"},{"location":"Production/SensorConfiguration/sensorConnecting/#finding-the-correct-usb-port","title":"Finding the Correct USB Port","text":"<p>For updates over USB, you will need to find the correct USB port over which the update can take place. Some devices, such as the production sensor and dock may show up as named devices in Material Companion or the Arduino IDE, but other will not. To figure out the correct port, you can try one of these methods:</p> <p>Using Material Companion</p> <ol> <li>Open Material Companion and navigate to either the 'Sensor', 'Base' or 'Pen' sub-tab in the 'Material Plane' tab</li> <li>Make sure the device is disconnected, then press the 'refresh' button next to 'Sensor/Dock USB Port'</li> <li>Take note of which ports are currently selectable</li> <li>Connect the device, wait a few seconds, and press the 'refresh' button again</li> <li>A new port should show up, this is the port you're looking for</li> </ol> <p>Using the Arduino IDE</p> <ol> <li>Open the Arduino IDE</li> <li>Make sure the device is disconnected, navigate to 'Tools' and take note of which ports are available under 'Port: xxx'</li> <li>Connect the device, wait a few seconds, and navigate to 'Tools' again (this won't work if you stay in the 'Tools' menu while connecting the device)</li> <li>A new port should show up, this is the port you're looking for</li> </ol> <p>Using Device Manager (Windows)</p> <ol> <li>Open the start menu and search for 'Device Manager'</li> <li>Make sure the device is disconnected, navigate to 'Ports (COM &amp; LPT)' and take note of which COM ports are available</li> <li>Connect the device, wait a few seconds, and Device Manager should update and show a new COM port, this is the port you're looking for</li> </ol>"},{"location":"Production/SensorConfiguration/sensorLens/","title":"Wide-Angle Lens Installation","text":"<p>As discussed on the page about the minimal sensor-to-display distance, it is possible to add a wide-angle lens to the sensor.</p> <p>When ordering the hardware, this lens can be added as a pre-installed option, or it can be bought separately. To add or remove the lens, please follow the instructions below. If you're careful this should not damage the sensor, and any damage should be limited to cosmetic damage, however, proceed at your own risk.</p> <ol> <li>To insert or remove the lens, you need to open the sensor. Do this by inserting a thin blade (such as a hobby knife) between the 2 parts of the enclosure at the location indicated by the green arrow in the top image and gently applying some sidewards and upwards pressure to pry the lid apart of the main body.</li> <li>Move the lid away, being careful not to break the battery wires.</li> <li>Remove the lens (shown in red in the middle picture) by gently pulling it in the direction of the green arrow. To insert the lens do the opposite.</li> <li>Close the sensor by taking the lid and locating it to its position on the side with the USB port, see the bottom image. The holes in the lid should index with some extrusions in the main body.</li> <li>Gently press the other side of the lid down. It can be helpful to apply some pressure on the side of the main body opposite of the USB port, away from the lid.</li> </ol>"},{"location":"Production/SensorConfiguration/sensorSettings/","title":"Sensor Settings","text":"<p>This page discusses all settings related to how the sensor detects bases and handles the data related to this.These settings can be accessed through the Foundry Module Configuration screen or the webserver.</p> <p>The tab is divided into multiple sections which can be expanded or collapsed.</p>"},{"location":"Production/SensorConfiguration/sensorSettings/#coordinates","title":"Coordinates","text":"<p>This section displays data of any detected infrared points (such as a base). A point is a collection of one or more 'pixels' where infrared light was detected. Pixels close to each other will be combined to form a single point.</p> <p>The top part of this section displays what the sensor can see. Any detected points will be displayed here with each point numbered and given a color.</p> <p>The middle part gives the data of the first 4 points:</p> <ul> <li> <p>X/Y: The X and Y coordinates of the point.</p> </li> <li> <p>Average Brightness: The average brightness of all pixels within the point.</p> </li> <li> <p>Maximum Brightness: The brightness of the brightest pixel within the point.</p> </li> <li> <p>Area: The size of the point.</p> </li> </ul> <p>The bottom part gives data transmitted by a detected base or pen (production sensor only):</p> <ul> <li>ID: The id of the base or pen.</li> <li>Command: The transmitted command (for example the buttons pressed on the pen).</li> <li>Battery: Approximate battery percentage.</li> </ul>"},{"location":"Production/SensorConfiguration/sensorSettings/#exposure","title":"Exposure","text":"<p>The exposure section can be used to configure things related to the detection of bases.</p> <p>There are 2 brightness related settings ('Sensitivity' and 'Minimum Brightness') and an 'Auto Exposure' button. You should try the auto exposure first:</p> <ol> <li>Grab a base and activate it, make sure it stays activated during the auto exposure process. Make sure only one base is visible to the sensor. </li> <li>Hold the base near the edge of the display</li> <li>Press the 'Auto Exposure' button</li> <li>The sensor will increase the sensitivity until it detects the base and its detected brightness is close to 255</li> </ol> <p>Tip: You can keep the base activated without touching it: Touch the side of the base very short, wait for the red LED to switch off, touch the side of the base again. Repeat this 5 times and the red LED will start blinking. The base is now in 'always on' mode. You can switch it back by either switching the base off and on, or by doing the same procedure again.</p> <p>If the auto exposure did not work:</p> <ol> <li>Set 'Minimum Brightness' to around 100</li> <li>Slide 'Sensitivity' all the way down and slowly increase it until the base or pen is detected</li> <li>Keep increasing it until the maximum brightness is between 220 and 255</li> <li>If the base or pen is not detected, try increasing the minimum brightness</li> <li>If the sensor detects more points, increase the minimum brightness</li> <li>In tricky environments (for example with a lot of stray infrared light) you might have to find a balance between the 'Sensitivity' and 'Minimum Brightness' slider</li> <li>Move the base or pen across your display and make sure that the maximum brightness stays well above 'Minimum Brightness'</li> </ol> <p>Update Rate: The update rate controls how often the sensor sends out position data. Higher update rates will improve responsiveness, but might cause problems for slower systems, because line of sight and lighting calculations will have to be made more often. This can especially become evident when multiple bases are moved at the same time. Set it as high as you system will allow.</p> <p>Averaging: Averaging will smooth the position data of the bases. The average count equals how many readings are taken and averaged, where a higher value results in a very smooth but less responsive movement, while lower values result in more jittery but more responsive movement. Try different values to find one that fits best for you.</p>  After finding a setting that results in a base being detected, you will want to make sure that bases can be detected across the entire display. In some areas of the display (usually near the edges and corners) it will be more difficult for the sensor to detect bases because of the angle between the bases and the sensor. You might have to increase 'Sensitivity' or decrease 'Minimum Brightness'.  You may also find that you have to slightly reposition the sensor for it to detect the entire display. You might have to adjust the exposure settings afterwards."},{"location":"Production/SensorConfiguration/sensorSettings/#transform","title":"Transform","text":"<p> The 'Transform' section allows you to modify the position data.</p> <p>Mirroring &amp; Rotation When you move a base horizontally, but the point in the configuration screen moves the other direction, enable 'Mirror X'. When you move a base vertically, but the point moves the other direction, enable 'Mirror Y'. When you move a base horizontally, but the point moves vertically, enable 'Rotation'.</p> <p>Offset &amp; Scaling Offset and scaling can be used to fine tune the position data after calibration. Using the 'Offset X' and 'Offset Y' sliders you can add a horizontal of vertical offset to the position data. Using the 'Scale X' and 'Scale Y' sliders you can scale the position data, which in essence stretches the data out. </p>"},{"location":"Production/SensorConfiguration/sensorSettings/#calibration","title":"Calibration","text":"<p>The 'Calibration' section of the 'Sensor' tab allows you to enable or disable the calibration, and to perform a calibration procedure.</p> <p>If the 'Calibration Enabled' or 'Calibration Offset Enabled' boxes are checked, then these calibration procedures are being applied. For easy sensor repositioning, it is advisable that you uncheck these boxes. Please note that ticking these boxes does not perform an actual calibration procedure.</p> <p>See this page for information on how to perform the calibration procedure.</p>"},{"location":"Production/SensorConfiguration/webserver/","title":"Webserver","text":"<p>The sensor hosts its own webserver which can be used to check the status of the sensor, update the firmware and configure the sensor. The webserver is only available if the sensor is connected to WiFi.</p> <p>To access the webserver, open a browser and navigate to the <code>http://[sensor address].local</code> or <code>http://[sensor IP]</code>. You can get info on finding either here.</p> <p>By default, http://materialsensor.local should work, if not, make sure the device name is the same or fall back to using the sensor IP address (for example <code>http://192.168.1.10</code>).</p> <p>Make sure the address starts with <code>http://</code> not <code>https://</code>.</p> <p>Once the browser has loaded the webserver, it will try to open a websocket connection, please wait a few seconds, after which the webserver should be fully loaded.</p>"},{"location":"Production/SensorConfiguration/webserver/#status-tab","title":"Status Tab","text":"<p>The status tab gives an overview of the sensor status, allows the firmware to be updated, the sensor to be reset to its default values, and the sensor to be restarted.</p> <p>Status</p> <p></p> <ul> <li>Hardware Variant: The hardware variant of the sensor (for example 'Production' or 'DIY Basic').</li> <li>Firmware Version: The current version of the firmware.</li> <li>Webserver Version: The current version of the webserver.</li> <li>Uptime: The time in hours and minutes the sensor has been on.</li> <li>Debug Enable: If enabled, the sensor will output debug data to the console or the USB port.</li> <li>Serial Output: If enabled, the sensor will output data over the USB port.</li> </ul> <p>Battery</p> <p></p> <ul> <li>Charging State: The current charging state.</li> <li> <p>Percentage: The estimated remaining battery percentage.</p> </li> <li> <p>Time to Empty: Estimated time in hours and minutes until the battery is empty, see below.</p> </li> <li>Time to Full: Estimated time in hours and minutes until the battery is full, see below.</li> </ul> <p>Battery (Advanced)</p> <p>There is an advanced battery section that can be expanded by clicking on it.</p> <ul> <li>Voltage: The battery voltage.</li> <li>Current: Current drain of the battery (negative means battery draining, positive means the battery is charging).</li> <li>Capacity: Estimated battery capacity (current/maximum).</li> </ul> <p>Time to Empty/Full The sensor can give an estimated time to empty or time to full. Please note that these values can be way off. The sensor will slowly learn the battery behavior which will improve the estimate, however, when the sensor has just started up, the sensor just started or stopped charging, or when the battery configuration has just been reset (see below), the values will be inaccurate.</p> <p>Lower section </p> <ul> <li>Update: Opens a new window to update the sensor. See here for more info.</li> <li>Reset Settings to Default Values: Opens a new window to reset some or all of the sensor settings. See below for more info.</li> <li>Restart Sensor: Restarts the sensor.</li> </ul> <p>Resetting Sensor Settings Pressing the 'Reset' button will open a new popup where you can reset sensor settings back to their defaults.</p> <p>You can choose one or more of the following: </p> <ul> <li>IR Configuration: If ticked, will reset all settings related to the detection of IR points (everything configurable in the 'IR Tracker' tab).</li> <li>Battery: If ticked, will reset the battery configuration. The sensor will learn the battery behavior over time to make more accurate estimates. If the battery configuration is reset, it will clear this stored behavior. This is required if a new battery is inserted or if the battery values are very inaccurate.</li> <li>Network Settings: If ticked, will reset all settings related to the network, such as the network to connect to. This will disconnect the sensor from the current WiFI network and requires this to be reconfigured.</li> </ul> <p>By pressing 'Ok' the ticked configurations will be reset and the sensor will restart.</p>"},{"location":"Production/SensorConfiguration/webserver/#network-tab","title":"Network Tab","text":"<p>Network Status </p> <ul> <li>Connection Status: Indicates if the sensor is connected to a WiFi network.</li> <li>SSID: The network the sensor is connected to, or configured to connect to.</li> <li>IP Address: The IP address of the sensor.</li> <li>Name: The name of the sensor.</li> </ul> <p>Access Points Here you can scan for and connect to a WiFi network.</p> <p>Follow the instructions (starting from #4) here.</p> <p>Websocket </p> <p>Status of the websocket server that the sensor hosts. It displays how many clients are connected and their IP addresses. These could be from browsers accessing the webserver or from VTT clients.</p>"},{"location":"Production/SensorConfiguration/webserver/#ir-tracker-tab","title":"IR Tracker Tab","text":"<p>This tab is used to configure the sensor settings.</p>"},{"location":"Production/SensorConfiguration/webserver/#console-tab","title":"Console Tab","text":"<p> The console tab is meant for debugging. If 'debug enable' is ticked in the status tab, the sensor will send debug messages to the console.</p> <p>Messages can be sent to the sensor at the bottom, the 'Clear' button clears the console, 'Autoscroll' enabled or disables the automatic scrolling, and 'Show timestamp' will prepend each message with the time it was received.</p>"},{"location":"Production/SensorPositioning/sensorDistance/","title":"Sensor-to-Display Distance","text":"<p>In order for the sensor to detect minis across the whole display, the sensor needs to be located at a minimum distance above the display. The minimum distance depends on the size of the display, where a bigger display requires a larger distance.</p> <p>A wide-angle lens can be installed in the production sensor when your display is too big and/or the distance to the ceiling is too small. The lens can either come pre-installed by selecting the option in the sensor product page, or it can be bought separately.</p> <p>The table below gives the minimum distance between the display and sensor. Measure the distance between the top of the display and the desired sensor mounting location (ceiling, microphone stand, etc). </p> <p>Look at the row with your display size:</p> <ul> <li>If the measured distance is smaller than the value in the 'With Lens' column, your setup is incompatible with Material Plane. </li> <li>If the distance is larger than the value in the 'With Lens' column but larger than the 'Without Lens' column, your setup requires the wide-angle lens. </li> <li>If the distance is larger than the value in the 'Without Lens' column, the lens is not required, but can still be used to decrease the distance between sensor and display.</li> </ul> <p>Placing the sensor too far away from the display will result in reduced accuracy and potentially more jittery movement. For optimal results you should place the sensor as close to the minimum distance as possible (with some wiggle room for alignment). If you do not need the wide-angle lens, it's better to not have it installed.</p> <p>Please note that these are just approximate values, assuming a 16:9 aspect ratio display and perfect sensor positioning while ignoring any manufacturing tolerances. Try to err on the safe side by subtracting a few cm/inches from the measured distance between display and sensor.</p> Display Size Production (No Lens) Production (Lens) 32\" 109cm/43\" 88cm/35\" 40\" 134cm/53\" 108cm/43\" 43\" 144cm/57\" 116cm/46\" 50\" 166cm/66\" 134cm/53\" 55\" 182cm/72\" 146cm/57\" 60\" 198cm/78\" 159cm/63\" 65\" 214cm/85\" 172cm/68\" 70\" 230cm/91\" 185cm/73\" 75\" 246cm/97\" 198cm/78\" 80\" 278cm/110\" 223cm/88\""},{"location":"Production/SensorPositioning/sensorMounting/","title":"Mounting","text":"<p>The sensor is provided with a mount to which the sensor magnetically attaches. This mount allows the sensor to be rotated in 2 directions, as indicated by the arrows in the top-right image. You can tighten or loosen the 2 screws to make this rotation easier or more difficult.</p> <p>The mount was designed to be mounted in the following ways: </p>"},{"location":"Production/SensorPositioning/sensorMounting/#microphone-stand","title":"Microphone Stand","text":"<p> The mount has 3/8\"-16 thread at the bottom to allow the mount to be screwed onto a microphone stand, as shown in the bottom-left image. 3/8\" is a standard thread for microphones outside of the US, in the US 5/8\"-27 is more common. Adapters to convert 3/8\" to 5/8\" are easy to find and not very expensive.</p> <p>When selecting a microphone stand, make sure it can reach high enough, or get a microphone stand extender. You want to take the minimum sensor-to-display distance into account. You could also use wall or ceiling mounted microphone stands.</p>"},{"location":"Production/SensorPositioning/sensorMounting/#ceiling-mount","title":"Ceiling Mount","text":"<p> A second option is to attach the mount to the ceiling (or other surface). By removing the big bolt, you can take the mount apart, allowing you to fit a screw through the bottom part of the mount, as shown in the bottom-right image. You can use a countersunk screw with a maximum diameter of 4.5mm/0.177\" (US screw size #9 or lower), and a minimum length of 40mm/1.5\"</p>"},{"location":"Production/SensorPositioning/sensorMounting/#magnetic-mount","title":"Magnetic Mount","text":"<p>It is possible to attach a magnet to the bottom of the mount. This allows the sensor to be attached to ferromagnetic objects, such as light fixtures.</p> <p>The easiest way is to source a suitable magnet is to search for 'rubber coated magnet'. Look for a 20x6mm one (22x6mm can also work, but this is lightly wider than the mount) with M4 internal thread. One with a post (extended thread) will fit, but this is not necessary. Attach it by removing the big bolt on the mount to take the mount apart. It is then possible to attach the magnet using a M4x22mm countersunk bolt (if the magnet has a post, you can reduce this to M4x16mm).</p>"},{"location":"Production/SensorPositioning/sensorOrientation/","title":"Sensor Orientation","text":"<p> Finding a suitable orientation and position of the sensor above the display is essential for optimal performance. For the sensor to detect bases or the pen, there needs to be line of sight between the sensor and the bases  or pen. The relative angle between the baseor the pen and sensor can influence this. Take a look at the (exaggerated) example on the right.</p> <p>If the base is directly below the sensor (center base), the apparent brightness of the infrared LED is at its maximum, as long as no part of the mini is obscuring the line of sight.  The left base gives an example of this: the line of sight between the infrared LED and sensor goes right through the mini, so the sensor cannot see the base. In case of the right base, the mini does not obscure the line of sight, but due to the angle between the sensor and base, the apparent brightness of the infrared LED is decreased. This situation is identical in the other axis (pointing out of your screen), so an optimal angle and position of the sensor needs to be found where the chance of the line of sight being obscured, and the relative angle between the sensor and base is minimized.</p> <p>To do this, we also need to take into account how players will be sitting around the display. Consider the 2 situations in the images below.</p> <p>The red circle indicates the approximate location of the sensor above the display, with the sensor pointing towards the center of the display. The orientation of the bases during calibration and during play will be as shown in the top-right corner. Because the sensor is located towards the GM side, the chance of a mini obscuring the infrared LED is reduced. Only when bases are placed on the part of the display closest to the GM this might become an issue. The apparent brightness of the infrared LEDs will be pretty good across most of the display, but the part of the display opposite the GM might experience reduced apparent brightness. It is a good idea to make sure the sensitivity of the sensor is tuned so the sensor can detect the bases at these parts of the display. You could consider moving the sensor towards the green circle. This will reduce the chance of minis obscuring the LED (see the left mini in the earlier topmost image on this page), but this will reduce the apparent brightness in the part of the display opposite the circle.</p> <p></p>"},{"location":"Production/Updating/basePenUpdating/","title":"Base & Pen Updating","text":""},{"location":"Production/Updating/basePenUpdating/#finding-the-current-version","title":"Finding the Current Version","text":"<p>You can find the versions of the firmware in the following way:</p> <ul> <li>Using Material Companion: The versions can be reported in the Base or Pen tab.</li> </ul>"},{"location":"Production/Updating/basePenUpdating/#finding-the-latest-version","title":"Finding the Latest Version","text":"<p>You can find the latest versions of the firmware and webserver in one of the following ways:</p> <ul> <li>Using Material Companion: The latest versions are displayed in the 'Update' section in the Base or Pen tab.</li> <li>Using the Module's Downloads Tab: The latest versions will be displayed in 'Latest' column on the Downloads tab of the Material Plane configuration screen.</li> <li>Using GitHub's Releases Page: The releases pages on GitHub will list all the latest releases for the base and pen.</li> </ul>"},{"location":"Production/Updating/basePenUpdating/#updating","title":"Updating","text":"<p>Updating the base and pen is very similar, and is done using Material Companion. You will need to connect the dock to your computer using the USB port, and connect either a base to the charge slot with the 3 spring terminals, or the pen to its charging slot. You cannot update the base if the pen is connected to the dock, or vise versa!</p> <p></p> <ol> <li>Open Material Companion and navigate to the 'Base' or 'Pen' sub-tab within the 'Material Plane' tab.</li> <li>At the top, select the correct 'Dock USB Port'. The dock should show up as 'COM## (Dock)'. If it doesn't show up, try refreshing the USB ports. See here for more info.</li> <li>At the bottom 'Update' section, select the 'Firmware Version' you want to update</li> <li>Optionally, you could tick 'Show Pre-Releases' which will allow you to update a pre-release version (not recommended for normal use)</li> <li>Press the 'Update' button</li> <li> <p>A popup will appear that gives the update progress, you can press 'Details' to get more details about the progress</p> <p></p> </li> </ol>"},{"location":"Production/Updating/basePenUpdating/#finding-the-correct-usb-port","title":"Finding the Correct USB Port","text":"<p>For updates over USB, you will need to find the correct USB port over which the update can take place. Some devices, such as the production sensor and dock may show up as named devices in Material Companion or the Arduino IDE, but other will not. To figure out the correct port, you can try one of these methods:</p> <p>Using Material Companion</p> <ol> <li>Open Material Companion and navigate to either the 'Sensor', 'Base' or 'Pen' sub-tab in the 'Material Plane' tab</li> <li>Make sure the device is disconnected, then press the 'refresh' button next to 'Sensor/Dock USB Port'</li> <li>Take note of which ports are currently selectable</li> <li>Connect the device, wait a few seconds, and press the 'refresh' button again</li> <li>A new port should show up, this is the port you're looking for</li> </ol> <p>Using the Arduino IDE</p> <ol> <li>Open the Arduino IDE</li> <li>Make sure the device is disconnected, navigate to 'Tools' and take note of which ports are available under 'Port: xxx'</li> <li>Connect the device, wait a few seconds, and navigate to 'Tools' again (this won't work if you stay in the 'Tools' menu while connecting the device)</li> <li>A new port should show up, this is the port you're looking for</li> </ol> <p>Using Device Manager (Windows)</p> <ol> <li>Open the start menu and search for 'Device Manager'</li> <li>Make sure the device is disconnected, navigate to 'Ports (COM &amp; LPT)' and take note of which COM ports are available</li> <li>Connect the device, wait a few seconds, and Device Manager should update and show a new COM port, this is the port you're looking for</li> </ol>"},{"location":"Production/Updating/sensorUpdating/","title":"Sensor Updating","text":"<p>The sensor can be updated in 4 ways:</p> <ul> <li>Using Material Companion over WiFi</li> <li>Using Material Companion with a USB cable</li> <li>Using the sensor webserver</li> <li>Using the Arduino IDE (USB or WiFi)</li> </ul> <p>The sensor has 2 different things that require separate updates:</p> <ul> <li>Firmware: This is the code that is responsible for almost everything the sensor does, except for the webserver</li> <li>Webserver: This is the code that is responsible for the webserver</li> </ul> <p>These may or may not receive updates at the same time. Depending on the update method you will either have to update these separately or they can be updated at the same time.</p>"},{"location":"Production/Updating/sensorUpdating/#finding-the-current-version","title":"Finding the Current Version","text":"<p>You can find the versions of the firmware and webserver that are installed on your sensor in one of the following ways:</p> <ul> <li>Using Material Companion: The versions can be reported in the Sensor tab.</li> <li>Using the Sensor's Webserver: The versions will be displayed on the Status tab.</li> <li>Using the Module's Downloads Tab: The versions will be displayed in 'Current' column on the Downloads tab of the Material Plane configuration screen.</li> </ul>"},{"location":"Production/Updating/sensorUpdating/#finding-the-latest-version","title":"Finding the Latest Version","text":"<p>You can find the latest versions of the firmware and webserver in one of the following ways:</p> <ul> <li>Using Material Companion: The latest versions are displayed in the 'Update' section in the Sensor tab.</li> <li>Using the Module's Downloads Tab: The latest versions will be displayed in 'Latest' column on the Downloads tab of the Material Plane configuration screen.</li> <li>Using GitHub's Releases Page: The Releases Page on GitHub will list all the latest releases.</li> </ul>"},{"location":"Production/Updating/sensorUpdating/#material-companion-wifi","title":"Material Companion (WiFi)","text":"<p>This method requires the firmware of the sensor to be v3.0.4 or later. Material Companion has the option to update the sensor over your WiFi connection. For this to work, you will need to connect the sensor to your WiFi network. You will need to update the firmware and webserver separately.</p> <p></p> <ol> <li>Open Material Companion and navigate to the 'Sensor' sub-tab within the 'Material Plane' tab.</li> <li>At the bottom 'Update' section, select either 'WiFi - Firmware' or 'WiFi - Webserver' at 'Update Method'</li> <li>At 'Sensor Address' fill in the address of the sensor. By default this is 'materialsensor.local', but this is configurable in the sensor configuration. You could also fill in the sensor IP address, for example '192.168.1.20'</li> <li>Select the correct hardware variant of your sensor at 'Variant'</li> <li>At 'Firmware Version' and 'Webserver Version', select the version you want to update to the sensor</li> <li>Optionally, you could tick 'Show Pre-Releases' which will allow you to update a pre-release version (not recommended for normal use)</li> <li>Press the 'Update' button</li> <li> <p>A popup will appear that gives the update progress, you can press 'Details' to get more details about the progress.</p> <p></p> </li> <li> <p>If the update went succesfull the sensor will restart</p> </li> </ol>"},{"location":"Production/Updating/sensorUpdating/#material-companion-usb","title":"Material Companion (USB)","text":"<p>Material Companion has the option to update the sensor over USB. You can update the firmware, the webserver, or both.</p> <p></p> <ol> <li>Open Material Companion and navigate to the 'Sensor' sub-tab within the 'Material Plane' tab.</li> <li>At the top, select the correct 'Sensor USB Port'.<ul> <li>The production sensor will show up as 'COM## (Sensor)' or 'COM## (Sensor - Update) If it doesn't show up, try refreshing the USB ports.If it shows up as 'COM## (Sensor)' press and hold the 'boot' button, then press the 'reset' button and release the 'boot' button. After refreshing the USB ports it should show up as 'COM## (Sensor - Update)'.</li> <li>The DIY sensor will show up as 'COM##'. There may be multiple 'COM##' ports, see here if you are unsure which one is the correct one.</li> </ul> </li> <li>At the bottom 'Update' section, select 'USB' at 'Update Method'.</li> <li>Select the correct hardware variant of your sensor at 'Variant'.</li> <li>At 'Firmware Version' and 'Webserver Version', select the version you want to update to the sensor. You can set one to 'none' to prevent one from updating.</li> <li>Optionally, you could tick 'Show Pre-Releases' which will allow you to update a pre-release version (not recommended for normal use).</li> <li>Press the 'Update' button.</li> <li> <p>A popup will appear that gives the update progress, you can press 'Details' to get more details about the progress.</p> <p></p> </li> <li> <p>If the update went succesfull you can restart the sensor.</p> </li> </ol>"},{"location":"Production/Updating/sensorUpdating/#webserver","title":"Webserver","text":"<p>The firmware or webserver can be updated from the sensor webserver. You will have to update them separate from each other.</p> <ol> <li>Download the latest webserver (Webserver.bin) or firmware (Sensor_[variant]_Firmware.bin) from here.</li> <li>Navigate to the sensor webserver.</li> <li>Press the 'Update' button at the bottom of the 'Status'tab, this will navigate you to the update page.</li> <li>Select either 'Firmware' or 'Webserver', depending on which you want to update.</li> <li>Browse for the firmware or webserver file.</li> <li>The sensor will now be updated and will restart when its done.</li> </ol> <p></p>"},{"location":"Production/Updating/sensorUpdating/#arduino-ide","title":"Arduino IDE","text":"<p>The Arduino IDE gives you the option to update the firmware and webserver (separate from each other), and it even gives you the option to make changes to the code. Steps 1 - 7 will only need to be done once. You can upload using the Arduino IDE either over the USB cable or over WiFi (requires the firmware of the sensor to be v3.0.4 or later)</p> <ol> <li>Download and install the legacy Arduino IDE from here. Do not download Arduino IDE 2.x.x, you want 1.x.x</li> <li>Download and install the 'esp32fs plugin' from here</li> <li>Open the Arduino IDE and navigate to 'File' =&gt; 'Preferences'</li> <li>Near the bottom there should be a field for 'Addition Boards Manager URLs', click the button to the right of that field </li> <li> <p>Fill in the following on separate lines     \"https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_index.json\"     \"https://github.com/MaterialFoundry/MaterialFoundry_Arduino/releases/latest/download/package_materialfoundry_index.json\"</p> <p></p> </li> <li> <p>Restart the IDE, then navigate to 'Tools' =&gt; 'Board: xxx' =&gt; Boards Manager, which should open a new window</p> </li> <li>Wait for the window to fully load, then search for and install 'esp32' (not 'Arduino ESP32 Boards') and 'Material Foundry'. </li> <li>Download and extract the 'Source code' from the latest sensor release</li> <li>Open 'Sensor.ino' in the Arduino IDE</li> <li> <p>Navigate to 'Tools' =&gt; 'Board: xxx' and select your harware version/board</p> <ul> <li>In most cases you will want to select 'Material Foundry' =&gt; 'Material Plane Sensor (xxx)', where you replace 'xxx' with your hardware variant</li> <li>If you use a board that does not fit within the default sensor variants, select your board from the 'ESP32 Arduino' list</li> </ul> <p></p> </li> <li> <p>Navigate to 'Tools' and select the correct 'Port'.</p> <ul> <li>To update over WiFi, select 'materialsensor at x.x.x.x' under 'Network Ports'</li> <li>The production sensor will show up as 'COM## (Material Plane Sensor (Production))' or 'COM## (ESP32S3 Dev Module).If it shows up as 'COM## (Material Plane Sensor (Production))' press and hold the 'boot' button, then press the 'reset' button and release the 'boot' button. After refreshing the USB ports it should show up as 'COM## (ESP32S3 Dev Module)'.</li> <li>The DIY sensor can show up with various names. There may be multiple 'COM##' ports, see here if you are unsure which one is the correct one</li> </ul> <p></p> </li> <li> <p>You can now update either the firmware or the webserver:</p> <ul> <li>Firmware: Press the 'Upload' button (arrow pointing to the right in the top-left part of the screen). Then wait for the IDE to compile and then upload the firmware</li> </ul> <p></p> <ul> <li>Webserver: Navigate to 'Tools' and select 'ESP32 Sketch Data Upload', select 'SPIFFS' and press 'OK'. Then wait for the IDE to upload the webserver</li> </ul> <p></p> </li> </ol>"},{"location":"Production/Updating/sensorUpdating/#finding-the-correct-usb-port","title":"Finding the Correct USB Port","text":"<p>For updates over USB, you will need to find the correct USB port over which the update can take place. Some devices, such as the production sensor and dock may show up as named devices in Material Companion or the Arduino IDE, but other will not. To figure out the correct port, you can try one of these methods:</p> <p>Using Material Companion</p> <ol> <li>Open Material Companion and navigate to either the 'Sensor', 'Base' or 'Pen' sub-tab in the 'Material Plane' tab</li> <li>Make sure the device is disconnected, then press the 'refresh' button next to 'Sensor/Dock USB Port'</li> <li>Take note of which ports are currently selectable</li> <li>Connect the device, wait a few seconds, and press the 'refresh' button again</li> <li>A new port should show up, this is the port you're looking for</li> </ol> <p>Using the Arduino IDE</p> <ol> <li>Open the Arduino IDE</li> <li>Make sure the device is disconnected, navigate to 'Tools' and take note of which ports are available under 'Port: xxx'</li> <li>Connect the device, wait a few seconds, and navigate to 'Tools' again (this won't work if you stay in the 'Tools' menu while connecting the device)</li> <li>A new port should show up, this is the port you're looking for</li> </ol> <p>Using Device Manager (Windows)</p> <ol> <li>Open the start menu and search for 'Device Manager'</li> <li>Make sure the device is disconnected, navigate to 'Ports (COM &amp; LPT)' and take note of which COM ports are available</li> <li>Connect the device, wait a few seconds, and Device Manager should update and show a new COM port, this is the port you're looking for</li> </ol>"},{"location":"Production/Usage/bases/","title":"Bases","text":""},{"location":"Production/Usage/bases/#switching-a-base-on-or-off","title":"Switching a Base On or Off","text":"<p>You can switch bases on using the slide switch at the top. Sliding it to the right (towards the LED) switches it on, indicated by 4 flashes of the red LED. Sliding it to the left (away from the LED) switches it off, indicated by 2 flashes of the red LED.</p>"},{"location":"Production/Usage/bases/#base-activation","title":"Base Activation","text":"<p>A base is activated by touching the right of left side of the base, which will switch on the red LED and it will start emitting data to the sensor. You can adjust the sensitivity using Material Companion, as is explained here. If you notice that the base stays activated, try lowering the sensitivity.</p>"},{"location":"Production/Usage/bases/#base-modes","title":"Base Modes","text":"<p>The base has 2 different modes:</p> <ul> <li>Normal Mode: The base will act as 'normal', where it is in standby until the base is activated by touching it</li> <li>Always On Mode: In this mode the base will always emit infrared light. This can be useful for aligning the sensor and performing the sensor calibration procedure</li> </ul> <p>With the sensor on, you can switch between these 2 modes by touching the right side of the base very shortly, waiting for the red LED to switch off, and touching the side of the base again. Repeat this 5 times and the red LED will start blinking rapidly to indicate that it has switched modes.</p>"},{"location":"Production/Usage/bases/#mounting-minis","title":"Mounting Minis","text":"<p>A mini is placed on top of the bases in order to track the movement of said mini. While it is possible to just place them on there, and let gravity to its work, there are several options for a more secure mounting. Additionally, some guidelines should be followed regarding positioning of the mini on top the base.</p>"},{"location":"Production/Usage/bases/#mini-placement","title":"Mini Placement","text":"<p>When mounting a mini on a base, there is one important thing to remember: there needs to be line-of-sight between the infrared LED and the sensor. There are multiple ways in which the placement of the mini can affect this.</p> <p>The image on the right shows 3 minis, with incorrect placement at the top and correct placement at the bottom. From left to right:</p> <ul> <li>The weapon of the mini is directly above the infrared LED. This means that in most situations the sensor will have a hard time detecting the base. This can be solved by rotating the mini.</li> <li>The base of the mini blocks the infrared LED, so the sensor cannot detect it. This can be solved by moving the mini a bit.</li> <li>The mini is too big for the base. There is no good way to mount it while keeping the infrared LED visible to the sensor. A base adapter can be used for bigger minis.</li> </ul>"},{"location":"Production/Usage/bases/#mounting-methods","title":"Mounting Methods","text":"<p>Magnet on Mini Since the base has an embedded 10x10x1mm magnet, you could use a magnet on the bottom of the mini to keep it mounted securely, while making it easy to remove the mini. You can use either a square (10x10x1mm or similar) or a circular magnet (10mmx1 or similar). The advantage of a square magnet is that you can be sure that the mini is correctly aligned, since rotation of the mini on the base is hindered (it can still rotate, but only onto 4 directions). Circular magnets allow more rotational freedom, but this can cause the mini or base to unintentionally rotate.</p> <p>You will need to take the polarity of the magnet into account. For best results:</p> <ol> <li>Place the magnet on top of the base</li> <li>Apply a droplet of superglue to the top of the magnet</li> <li>Place the mini on top of the magnet, holding it in place until dry</li> </ol> <p>To ensure you won't glue the magnet to the base, you could add, for example, plastic film between the base and the magnet.</p> <p>The attaction between the two magnets might be quite strong. If you are not careful you could break the mini when you try to mount it. For example, if the mini has thin legs, and you hold the mini by its torso while moving it towards the base, the base might fly up to the mini once it's near enough with enough force to break the legs. It is advisable to take both the base and the mini in hand, and then moving them towards each other, or holding the mini by its base while moving it towards the Material Plane base.</p> <p>Ferromagnetic Piece of Metal on Mini Instead of magnets (see above), you could use a ferromagnetic piece of metal, since that would also be attracted to the magnet in the base. The mounting would be less secure, and you won't be able to prevent rotation like a square magnet would, but it should work fine. Some coins could work for this, for example a 5 eurocent coin.</p> <p>Double Sided Tape Double sided tape could be used to mount the mini. Depending on how strong the tape is, this is either permanent or semi-permanent. Using weaker tape will allow you to easily switch minis without having to glue anything to the mini, at a risk that the base detaches and falls. It is possible to make strong tape weaker by touching it repeatedly with your finger.</p> <p>Glueing the Mini to the Base While not advisable, you could glue the mini directly to the base. Keep in mind that this will prevent you from using dock expanions. You also won't be able to rotate the mini on top of the base, but it will prove the most secure bond.</p>"},{"location":"Production/Usage/bases/#orientation-and-holding-of-bases","title":"Orientation and Holding of Bases","text":"<p>During the calibration procedure you had to keep the orientation of the base constant relative to the display, for example by keeping the LED in the top-right. When using the base during gaming you have to stick to this orientation, so rotating the base is not possible. You can, of course, rotate the mini on top of the base.</p> <p></p> <p>When moving bases, you should try to keep them as horizontal as possible. If the base is held at an angle, the relative light emission of the base (so from the perspective of the sensor) is reduced, and if the angle is too big, the sensor will not be able to detect the base. An exception to this is if the base is located near the edge of the display. In this case, it can be helpful to angle the base towards the sensor.</p> <p>Make sure your finger or any other object does not obscure the LED to prevent line of sight between the LED and sensor. Because the base is activated by touching one of its sides, this will usually not be an issue.</p> <p>Take a look at the image on the right, which demonstrates these 2 problems, with the upper images showing the incorect way and the lower images the correct way of holding bases. From left to right:</p> <ul> <li>Base held at too much of an angle. Reduce the angle to make it easier for the sensor to detect the base.</li> <li>Index finger too close to the infrared LED, which might block the line-of-sight between the LED and sensor. Hold the base with the thumb and index finger, or move the index finger away.</li> </ul>"},{"location":"Production/Usage/bases/#token-detection","title":"Token Detection","text":"<p>There are 2 ways Material Plane can detect which token has to be moved when a base is moved:</p> <p>The main method is to use the id of the base, which can be linked to a specific token or actor. This means that whenever a specific base is moved, it will only move the linked token or actor (see Base Setup for more info on how to configure that).</p> <p>A secondary, fallback method is to use the location of the base. Whenever a base is moved, Material Plane checks if there are any tokens close enough. If there are, it will pick the nearest (that is allowed to be moved) and move that token. The disadvantage of this method is that if any interruption occurs, the token might be dropped. It can also result in the wrong token being moved if multiple tokens are close to each other.</p> <p>Whenever more than one base is moved at a time, or the pen is used at the same time, the fallback method is always used.</p>"},{"location":"Production/Usage/pen/","title":"Pen","text":""},{"location":"Production/Usage/pen/#pen-activation","title":"Pen Activation","text":"<p>The pen is activated whenever one of its buttons are pressed, and it will stay activated for a set amount of time after all buttons have been released. By default this timeout is 10 seconds, but this can be configured using Material Companion as explained here.</p>"},{"location":"Production/Usage/pen/#holding-the-pen","title":"Holding the Pen","text":"<p>To use the pen, the side with the LEDs must be facing up, towards the sensor. The side of the pen with the buttons is the front. For the A, C and D buttons, only the front LED needs to be exposed. When pressing the B button both the front and rear LED need to be exposed.</p> <p>In general, it's best to hold the pen like a normal writing pen: the thumb and index finger hold the pen close to the buttons, with the rear of the pen resing on the part of the hand connecting the thumb and index finger, see the top image on the right.</p> <p>Alternatively, the pen would be held as shown in the lower image on the right. While this can be more comfortable in some situations, you will not be able to use the function assigned to the B button, since the rear LED is blocked by the hand.</p>"},{"location":"Production/Usage/pen/#b-button","title":"B Button","text":"<p>The B button is special, because it enables both the front and rear LEDs. This means that the orientation of the pen can be determined. This is used for rotating things. For example, when using the 'Token' function, you can press B and rotate the pen to rotate a token.</p>"},{"location":"Production/Usage/pen/#c-button","title":"C Button","text":"<p>The C button is reserved for interacting with the pen menu. Pressing that button will always open the menu, regardless of the mode.</p>"},{"location":"Production/Usage/pen/#pen-menu","title":"Pen Menu","text":"<p>By pressing the C button the pen menu will open, it will automatically close when the pen is no longer used. Here, you can select the function of the pen. You select the function using either the C or D button. You can move the menu around by pressing and holding the center (Material Foundry logo) using the C or D button.</p> <p>You can enable an info display by pressing the info button in the pen menu. This info display displays the current mode and the function of each button.</p>"},{"location":"Production/Usage/pen/#inner-circle","title":"Inner circle","text":"<p>The inner circle of the pen menu sets the mode of the pen. The 'Drawings', 'Templates' and 'Macros' modes will open a secondary ring of options. The following table gives a summary of all options of the pen menu. </p> Mode Icon A Button B Button D Button Canvas Pan canvas Zoom canvas Click canvas Token Deselect token Rotate token Move token Ruler Undo last segment Clear ruler Start ruler/new segment Target Remove all targets - Target token Drawings Move drawing Rotate drawing Draw shape Templates Move tempalate Rotate template Draw template Macros User configurable User configurable User configurable Info - - -"},{"location":"Production/Usage/pen/#canvas","title":"Canvas","text":"<p>The canvas mode allows some basic interaction with the canvas, such as panning or zooming the canvas with the A and B buttons, respecivetly. The D button will click on the canvas and can be used for things like opening doors.</p> A Button B Button D Button Pan canvas Zoom canvas Click canvas"},{"location":"Production/Usage/pen/#token","title":"Token","text":"<p>The token mode will manipulate tokens. Tokens can be moved by pressing and holding the D button. They can be rotated by pressing the B button and rotating the pen, and tokens can be deselected with the A button.</p> A Button B Button D Button Deselect token Rotate token Move token"},{"location":"Production/Usage/pen/#ruler","title":"Ruler","text":"<p>Distances can be measured using the ruler mode. Start a measurement by pressing the D button. Using the D button a new ruler segment is created, the A button removes the last segment, and using the B button you can clear the ruler.</p> A Button B Button D Button Undo last segment Clear the ruler Start ruler/new segment"},{"location":"Production/Usage/pen/#target","title":"Target","text":"<p>Press the D button to target a token and the A button to remove all targets.</p> A Button B Button D Button Remove all targets - Target token"},{"location":"Production/Usage/pen/#drawings","title":"Drawings","text":"<p> With the drawings mode you can place or edit drawings on the canvas. On the left of the pen menu there are 2 sets of colors. The top-left quadrant sets the fill color of the drawing, while the bottom-left quadrant sets the line color of the drawing.</p> <p>A pencil icon will be drawn for each drawing on the canvas, this is to indicate the 'target' point for each drawing when trying to edit it using the 'Select' mode.</p> Mode Icon A Button B Button D Button Select Move drawing Rotate drawing Resize drawing Rectangle/Ellipse/Freehand // - - Draw shape Polygon - Undo last segment Place new segment Clear - - Remove drawing"},{"location":"Production/Usage/pen/#templates","title":"Templates","text":"<p> With the template mode you can place or edit templates on the canvas.</p> Mode Icon A Button B Button D Button Select Move template Rotate template Resize template Circle/Cone/Rectangle/Ray /// - - Draw template Clear - - Remove template"},{"location":"Production/Usage/pen/#macros","title":"Macros","text":"<p> The macro mode allows for customized and more complex pen behavior.  You can have up to 8 groups of macros (M1 - M8), where each macro group can have one or more macros assigned to each button and button  mode (press/release/hold). Macros can be assigned to buttons and button modes from the 'Pen Setup' tab in the module configuration.  Macros have access to the following variables:</p> Variable Description scope.button Button that is being pressed scope.buttonMode Mode of the button that is being pressed (press/release/hold) scope.coordinates X and Y coordinates of the pen (e.g. scope.coordinates.x) scope.coordinates2 X and Y coordinates of the second infrared LED of the pen when the B button is pressed scope.angle Angle (in degrees) of the pen when the B button is pressed scope.length Apparent length (in pixels) of the pen when the B button is pressed. This is essentially the distance between scope.coordinates and scope.coordinates2. scope.id Id of the pen scope.raw Raw data of the pen point(s), see below <p>Raw data:</p> <pre><code>scope.raw = [\n    {\n        //point 0\n        number: 0; //number of the point\n        area: 11; //area of the point\n        avgBrightness: 221; //average brightness of the point\n        maxBrightness: 253; //maximum brightness of the point\n        x: 1135.542; //unscaled x-coordinate of the point\n        y: 1723.461; //unscaled y-coordinate of the point\n    },{\n        //point 1\n    }  \n]\n</code></pre>"},{"location":"Touch/gettingStarted/","title":"Getting Started","text":"<p> Touch screen support is still experimental. There might be issues with either the module, or due to hardware limitations. Right now I cannot recommend that anyone buys a touch capable screen or IR touch frame for Material Plane, it is probably better to wait until this has been tested more extensively.  Touch screen functionality is broken in Foundry v11. </p> <p>Material Foundry allows you to use a touch screen to move physical miniatures and have tokens in Foundry follow this movement.</p> <p>The table of contents on the left is ordered in a way that you should start from the top and move your way down, but below you will find a short description of the steps you will need to take to get started:</p> <ol> <li>Make sure you know what the requirements are for using Material Plane</li> <li>Consider the limitations</li> <li>Install and configure the VTT module</li> <li>Learn how to properly use the module</li> </ol> <p>If you encounter any bugs or wish to request new features, please contact me on Discord (@materialfoundry/@Cris) or post an issue on GitHub. Consider joining the Material Foundry Discord Server.</p>"},{"location":"Touch/limitations/","title":"Limitations","text":"<p>There are some limitations related to using a touch screen. Below is a summary, for a more detailed hardware comparison, click here.</p>"},{"location":"Touch/limitations/#ir-touch-frame","title":"IR Touch Frame","text":"<ul> <li>During movement, the mini must always stay in contact (or very close to) the TV, otherwise the touch frame cannot detect it.</li> <li>There is a limited amount of touch points, usually 10. This means that you are not able to place more than that number of minis on the TV. For big parties or big battles, this might mean that you can only place minis for the PCs, and not for NPCs.</li> <li>Touch points are not completely independent. This means that if you move a mini at one point, it might interfere with the detected location of another mini (this is mostly solved through software).</li> <li>Because of the way the touch frame works, one mini can cast a 'shade' over other minis, meaning that the minis in the shade cannot be detected. It is currently not clear how big of an issue this is, and will probably only be relevant if there are a lot of minis close to each other.</li> </ul>"},{"location":"Touch/limitations/#capacitive-screen","title":"Capacitive Screen","text":"<ul> <li>During movement, the mini must always stay in contact the TV, otherwise the screen cannot detect it.</li> <li>There is a limited amount of touch points, usually 10. This does not limit the amount of minis you can have on the TV, but it does limit the amount of minis you can move at the same time. Since it's not common to move that many minis at the same time, this probably isn't a big problem.</li> </ul>"},{"location":"Touch/requirements/","title":"Requirements","text":"<p>The requirements for using Material Plane using touch can be divided into 3 parts:</p> <ul> <li>Touch-related hardware</li> <li>Compatible Minis</li> <li>Virtual Tabletop</li> <li>Horizontally mounted display</li> </ul>"},{"location":"Touch/requirements/#touch-related-hardware","title":"Touch-Related Hardware","text":"<p>Some kind of hardware is required that can detect touches. While there are more options, the following 3 will be the most commong:</p> <ul> <li>Integrated capacitive touch: A display with integrated touch layer. These tend to be very expensive, but are a good choice due to their accuracy, easy of use, and number of touch points.</li> <li>Infrared Touch Frame: Touch frames work by sending a beam of IR light across the surface of the TV. If this light is interrupted, the location is calculated and registered as a touch point. Infrared touch frames are relatively inexpensive and easy to mount to an existing display.</li> <li>Capacitive Touch Foil: This is a foil that is attached to a non-touch display to give it capacitive touch. Can have similar advantages to integrated touch screens, but can be difficult to apply properly (without bubbles).</li> </ul>"},{"location":"Touch/requirements/#compatible-minis","title":"Compatible Minis","text":"<p>Infrared Touch Frames: There are 2 challenges related to infrared touch frames:</p> <ul> <li>The IR beam is located slightly above the surface of the TV (probably a few millimeters)</li> <li>Small objects might not be detected This means that the touch frame might have trouble detecting certain minis. If the base of the mini is thin, it's possible that the IR beam is at the height of the legs of that mini, which might be undetectable. The easiest way to solve this, would be to increase the height of the base, by, for example, glueing some object to the bottom of the base.</li> </ul> <p>Capacitive Screens: In simple terms, a capacitive screen works by sensing a change in capacitance caused by touch. For this to function for minis (or other objects), the mini must be conductive, or at least, there must be a conductive path from your finger to the touch screen. Below are 2 methods to achieve this.</p> <ul> <li>Copper Tape Buy copper (or other conductive) tape, cut of a piece (try around 3 or 4 cm), and place it on the bottom of the base in such a way that a part of the tape extends past the base. Fold the extending part up (towards the top of the mini). Optionally, you can fold the extending part of the tape double, so it sticks to itself, and not to the mini (or to your finger). When you want to move the mini, you will have to continuously touch the copper tape.</li> <li>Conductive Paint This may or may not work, but it is possible to buy (transparent) conductive paint. Spray this across the whole mini, including the bottom of the base. You might need multiple coats to achieve a low enough resistance.</li> </ul>"},{"location":"Touch/requirements/#virtual-tabletop","title":"Virtual Tabletop","text":"<p>Material Plane runs on a virtual tabletop. Currently only Foundry VTT is supported.</p> <p>To use Foundry VTT, you need to purchase a license, and you need some way to host the Foundry server. For information on how to setup a Foundry VTT server, please refer to the Foundry VTT Knowledge Base. Alternatively, you could using a hosting service such as The Forge, Molten Hosting or Foundry Server.</p>"},{"location":"Touch/requirements/#horizontally-mounted-display","title":"Horizontally Mounted Display","text":"<p>You'll need a TV, or some other display (monitor/projector) onto which the virtual tabletop is displayed.</p> <p>If the display has touch capabilities built-in there are no further requirements. Otherwise, make sure that your infrared touch frame or capacitive touch foil is the correct size and mounted correctly.</p>"},{"location":"Touch/usage/","title":"Usage","text":"<p>Mini movement is determined by the selected touch mode.</p> <ul> <li>Direct: Touch and drag a token to move it. </li> <li>Tap Timeout: Touch a token for a short amount of time (configured by the 'Tap Timeout' setting), after which a token can be moved. For infrared touch frames it is required to raise the mini before movement.</li> <li>Raise Mini: To move a mini, you must first raise the mini from the screen, then after lowering it again on the screen, you can move it around. This raise mini procedure is implemented to counter some of the issues related to touch frames: In certain situations, movement of a mini can influence the detected location of another mini. Since that other mini is probably not activated when this issue occurs, it should no longer be influenced by the movement of the first mini.</li> </ul> <p>The token that is nearest to the touch will be activated (within approximately 1 grid space). So if there are 2 tokens next to each other, you have to make sure that you touch the correct token.</p> <p>Once a token has been activated, it will be selected and follow the touch. The exact movement and vision behavior is determined by the 'Movement Method'. The token will be dropped once no movement is detected for a certain period of time (determined by 'Token Drop Timeout'), so to ensure that a token isn't accidentally dropped, you might want to keep moving it.</p> <p>If the token is at its desired location, you release the touch, and it will be dropped after some time (determined by 'Token Drop Timeout'). If 'Deselect Token After Drop' is enabled the token will be deselected, which will cause Foundry to display the vision of all owned tokens, otherwise the token will stay selected until deselected through some other means.</p>"},{"location":"Touch/Foundry/foundryConfig/","title":"Module Configuration","text":"<p>You can access the module configuration by opening the 'Game Settings' sidebar tab (on the right of the screen, cog icon), and clicking the 'Material Plane Configuration' button.</p> <p></p> <p>The configuration consists of multiple tabs:</p>"},{"location":"Touch/Foundry/foundryConfig/#general","title":"General","text":"<p>This tab is used for general settings for the module.</p> <ul> <li>Active User: Sets the active user for the module. This user will be the one displayed on the display.</li> <li> <p>Device: Sets the kind of device that is used for token tracking, either the 'Material Plane Sensor' or a 'Touch Screen'</p> </li> <li> <p>Hide Display Elements: Will hide all display elements (sidebar, buttons, scenes, etc). This can be toggles using the 'Ctrl' key</p> </li> <li>Block Interactions: Will block canvas interactions if the Material Plane Configuration window is open. This will, for example, prevent tokens from being moved while adjusting sensor settings</li> </ul>"},{"location":"Touch/Foundry/foundryConfig/#control","title":"Control","text":"<p>This tab is used for settings related to controlling tokens.</p> <ul> <li> <p>Movement Method: Material Plane offers 3 different movement methods:</p> <ul> <li>Live: When a token is being moved, its vision is updated constantly</li> <li>Foundry Default: When a token is being moved, its vision is only updated after the token is dropped/released</li> <li>Step-By-Step: When a token is being moved, it will update its position and vision every time it is moved onto a new grid space</li> </ul> </li> <li> <p>Deselect Token After Drop: Will deselect the token after it has been dropped/released</p> </li> <li>Draw Movement Marker: Will draw a square on the grid to indicate where the token will end up if dropped/released. This marker will be green if this grid space is allowed, or it will turn red if the token cannot move there (for example, if it is blocked by a wall)</li> <li>Non-Owned Movement: Allows non-owned tokens to be moved. Vision of non-owned tokens will not be shown</li> <li>Token Collision Prevention: Whenever a token is dropped/released onto a grid space that is already occupied, the module will attempt to move the token to the nearest empty grid space along its movement path</li> <li>Ruler Mode: If enabled, the module will draw a ruler from the token's movement starting position to its current position. 4 modes are available:<ul> <li>Disabled: Disable the ruler</li> <li>Straight Line: Draws a straight ruler from the token's starting position to its current position</li> <li>Follow Movement: Draws a ruler that (approximately) follows the token's path</li> <li>Pathfinding: Finds the shortest distance between the token's starting position and its current position. Requires routinglib to be installed and enabled</li> </ul> </li> <li>Pathfinding Distance: ('Pathfinding' ruler mode only) Pathfinding is enabled for the last ruler segments to distances up to this value (in grid spaces). Segments at further distances will be locked. This prevents the pathfinding from always finding the shortest path, no matter how the token was previously moved. Set to 0 to disable.</li> <li>Clear Ruler: Sets when to clear the drawn ruler:<ul> <li>On Token Drop: Clears the ruler when the token is dropped/released</li> <li>On New Movement: Ruler will stay visible after dropping a token. Clears the ruler when new movement is initiated</li> </ul> </li> </ul>"},{"location":"Touch/Foundry/foundryConfig/#touch","title":"Touch","text":"<p>The touch tab is used to configure settings related to the touch functionality.</p> <ul> <li>Touch Mode: Configures how taps and mini movement are detected, see below.</li> <li>Token Drop Timeout: Every time that a token is moved, a timer starts (or is reset). Once that timer has reached this value in milliseconds, it will drop the token. So if configured to 500ms and a mini hasn't been moved for 500ms, that mini will be dropped.</li> <li>Tap Timeout: Sets the timeout to detect a tap, see below.</li> <li>Ping on Double Tap: If a double tap is performed (within 500ms), a ping will be generated at the location of the double tap.</li> <li>Scale X: Scales the touch on the x-axis.</li> <li>Scale Y: Scales the touch on the y-axis.</li> </ul>"},{"location":"Touch/Foundry/foundryConfig/#touch-modes","title":"Touch Modes","text":"<p>Material Plane offers 3 different touch modes, 2 of which allow for tapping on the canvas for additional functionality. Some modes will work better for different touch technologies. For touch frames, 'Raise Mini' is recommended, while for capacitive touch screens either 'Direct' or 'Tap Timeout' can work.</p> <p>The touch frame or touch screen can be used to interact with other objects on the canvas. Some display elements (such as the control buttons) can be accessed, and you can open or close a door by tapping the door icon. In order for this to work, 'Touch Mode' and 'Tap Timeout' must be configured in the Touch Settings tab of the configuration menu.</p> <p>Tap modes:</p> <ul> <li>Direct: Tokens will move when touched. Disables tapping functionality.</li> <li>Tap Timeout: When a new touch is detected, a timer will start. If the touch is removed before the timer counts up to 'Tap Timeout', it will assume that the screen was tapped, otherwise it will assume that a mini was placed. So if 'Tap Timeout' is set to 500ms, and you want to tap, you must touch the screen and remove your finger in half a second. This also means that when you want to move a mini, there is a half a second delay before the token actually moves.</li> <li>Raise Mini: When a new touch is detected, Material Plane will check if a touch has recently (within the last 'Tap Timeout' ms) ended near the new touch. If that's the case, Material Plane will assume that a mini is being moved, otherwise it'll assume it's a tap. So if 'Tap Timeout' is set to 1000ms, and you want to move a mini, you must raise that mini, and place it back down before you can move (which you already have to do, anyway) within 1 second. Taps are detected immediately anywhere on the screen, except when you've recently (within 1 second, in this case) raised a mini close to the place you want to tap.</li> </ul> <p>Note that tapping takes up 1 touch point. So for a standard touch screen with 10 touch points, you'll be limited to using 9 minis.</p>"},{"location":"Touch/Foundry/foundryInstall/","title":"Installing the Module","text":""},{"location":"Touch/Foundry/foundryInstall/#installing-the-module","title":"Installing the Module","text":"<p>To use Material Plane, you must install the module. There are several ways to do this:</p>  Please note that you will only need to install the module using one of the following methods (preferably the built-in module browser).  <p>Option 1: Built-In Module Browser The easiest way to install modules is using the built-in module browser.</p> <ol> <li>Start Foundry VTT and make sure you're in the 'Setup' screen</li> <li>Navigate to the 'Add-on Modules' tab</li> <li> <p>Press the 'Install Module' button</p> <p></p> </li> <li> <p>Search for 'Material Plane' in the search bar at the top</p> </li> <li> <p>Press the 'Install' button</p> <p></p> </li> </ol> <p>Option 2: Manifest URL You can use the module's manifest URL to install the module. The main reason for this is to install a specific version of the module.</p> <p>You can find the manifest URL for all available versions here. Choose the version you want, and right-click 'Manifest URL' to copy the URL.</p> <p>Alternatively, you could use this manifest URL which always points to the latest release: <code>https://github.com/MaterialFoundry/MaterialPlane_Foundry/releases/latest/download/module.json</code></p> <ol> <li>Start Foundry VTT and make sure you're in the 'Setup' screen</li> <li>Navigate to the 'Add-on Modules' tab</li> <li> <p>Press the 'Install Module' button</p> <p></p> </li> <li> <p>At the bottom you can find the 'Manifest URL' field, copy the manifest URL into this field and press 'Install'</p> <p></p> </li> </ol> <p>Option 3: Manual The last option is a manual installation</p> <ol> <li>Download the 'module.zip' file from GitHub</li> <li>Extract this file into the 'User Data Path' of your Foundry installation</li> <li>(Re)start Foundry VTT</li> </ol>"},{"location":"Touch/Foundry/foundryInstall/#enabling-the-module","title":"Enabling the Module","text":"<p>After installing the module, it must be enabled for each world in which you want to use the module:</p> <ol> <li>Start Foundry VTT and the world you want to use it in</li> <li>Open the 'Game Settings' sidebar tab (on the right of the screen, cogs icon)</li> <li> <p>Select 'Manage Modules'</p> <p></p> </li> <li> <p>Search for 'Material Plane' and tick the box to the left of it</p> <p></p> </li> <li> <p>Press 'Save Module Settings'</p> </li> </ol>"},{"location":"Touch/Foundry/foundryInstall/#updating-the-module","title":"Updating the Module","text":"<p>Modules in Foundry do not automatically update. You will have to check regularly if an update is available. Within Foundry you can either update all modules, or a single module:</p> <ol> <li>Start Foundry VTT and make sure you're in the 'Setup' screen</li> <li>Navigate to the 'Add-on Modules' tab</li> <li> <p>Either:</p> <ul> <li>Click 'Update All' to update all modules</li> </ul> <p></p> <ul> <li>Click the update button for the module you want to update</li> </ul> <p></p> </li> </ol>"},{"location":"Touch/Foundry/foundryInstall/#uninstalling-the-module","title":"Uninstalling the Module","text":"<p>To uninstall the module:</p> <ol> <li>Start Foundry VTT and make sure you're in the 'Setup' screen</li> <li>Navigate to the 'Add-on Modules' tab</li> <li> <p>Right-click the 'Material Plane' icon and click 'Uninstall'</p> <p></p> </li> </ol>"},{"location":"Touch/Foundry/foundrySetup/","title":"Foundry Setup","text":""},{"location":"Touch/Foundry/foundrySetup/#foundry-system-settings","title":"Foundry &amp; System Settings","text":"<p>For Material Plane to work, there are no special requirements with regards to the Foundry core or system settings, and the module is system agnostic.</p> <p>However, you might want to disable 'Pan to Token Speaker' in the Foundry core settings.</p>"},{"location":"Touch/Foundry/foundrySetup/#user-configuration","title":"User Configuration","text":"<p>There will need to be at least 1 gamemaster user for Foundry to work, and for Material Plane to work there needs to be at least 1 player user. As the gamemaster user you can add users in the 'Game Settings' tab on the right side of the screen by pressing the 'User Management' button. Here you can create an additional user. For the display user this can be either a 'Player' or 'Trusted Player'.</p>"},{"location":"Touch/Foundry/foundrySetup/#actor-permissions","title":"Actor Permissions","text":"<p>All player characters should be given 'Owner' permission for the display user. This can be configured in the 'Actors' tab on the right side of the screen. By right-clicking an actor you can select 'Configure Ownership' which opens up a popup in which you can configure which users have what ownership over that actor.</p>"}]}